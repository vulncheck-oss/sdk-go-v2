/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySaintExploit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySaintExploit{}

// AdvisorySaintExploit struct for AdvisorySaintExploit
type AdvisorySaintExploit struct {
	Bid *string `json:"bid,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Osvdb *string `json:"osvdb,omitempty"`
	SaintId *string `json:"saint_id,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisorySaintExploit instantiates a new AdvisorySaintExploit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySaintExploit() *AdvisorySaintExploit {
	this := AdvisorySaintExploit{}
	return &this
}

// NewAdvisorySaintExploitWithDefaults instantiates a new AdvisorySaintExploit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySaintExploitWithDefaults() *AdvisorySaintExploit {
	this := AdvisorySaintExploit{}
	return &this
}

// GetBid returns the Bid field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetBid() string {
	if o == nil || IsNil(o.Bid) {
		var ret string
		return ret
	}
	return *o.Bid
}

// GetBidOk returns a tuple with the Bid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetBidOk() (*string, bool) {
	if o == nil || IsNil(o.Bid) {
		return nil, false
	}
	return o.Bid, true
}

// HasBid returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasBid() bool {
	if o != nil && !IsNil(o.Bid) {
		return true
	}

	return false
}

// SetBid gets a reference to the given string and assigns it to the Bid field.
func (o *AdvisorySaintExploit) SetBid(v string) {
	o.Bid = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisorySaintExploit) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisorySaintExploit) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisorySaintExploit) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisorySaintExploit) SetId(v string) {
	o.Id = &v
}

// GetOsvdb returns the Osvdb field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetOsvdb() string {
	if o == nil || IsNil(o.Osvdb) {
		var ret string
		return ret
	}
	return *o.Osvdb
}

// GetOsvdbOk returns a tuple with the Osvdb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetOsvdbOk() (*string, bool) {
	if o == nil || IsNil(o.Osvdb) {
		return nil, false
	}
	return o.Osvdb, true
}

// HasOsvdb returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasOsvdb() bool {
	if o != nil && !IsNil(o.Osvdb) {
		return true
	}

	return false
}

// SetOsvdb gets a reference to the given string and assigns it to the Osvdb field.
func (o *AdvisorySaintExploit) SetOsvdb(v string) {
	o.Osvdb = &v
}

// GetSaintId returns the SaintId field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetSaintId() string {
	if o == nil || IsNil(o.SaintId) {
		var ret string
		return ret
	}
	return *o.SaintId
}

// GetSaintIdOk returns a tuple with the SaintId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetSaintIdOk() (*string, bool) {
	if o == nil || IsNil(o.SaintId) {
		return nil, false
	}
	return o.SaintId, true
}

// HasSaintId returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasSaintId() bool {
	if o != nil && !IsNil(o.SaintId) {
		return true
	}

	return false
}

// SetSaintId gets a reference to the given string and assigns it to the SaintId field.
func (o *AdvisorySaintExploit) SetSaintId(v string) {
	o.SaintId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisorySaintExploit) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisorySaintExploit) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySaintExploit) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisorySaintExploit) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisorySaintExploit) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisorySaintExploit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySaintExploit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bid) {
		toSerialize["bid"] = o.Bid
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Osvdb) {
		toSerialize["osvdb"] = o.Osvdb
	}
	if !IsNil(o.SaintId) {
		toSerialize["saint_id"] = o.SaintId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisorySaintExploit struct {
	value *AdvisorySaintExploit
	isSet bool
}

func (v NullableAdvisorySaintExploit) Get() *AdvisorySaintExploit {
	return v.value
}

func (v *NullableAdvisorySaintExploit) Set(val *AdvisorySaintExploit) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySaintExploit) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySaintExploit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySaintExploit(val *AdvisorySaintExploit) *NullableAdvisorySaintExploit {
	return &NullableAdvisorySaintExploit{value: val, isSet: true}
}

func (v NullableAdvisorySaintExploit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySaintExploit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


