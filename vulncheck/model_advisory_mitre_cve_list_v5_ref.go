/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMitreCVEListV5Ref type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMitreCVEListV5Ref{}

// AdvisoryMitreCVEListV5Ref struct for AdvisoryMitreCVEListV5Ref
type AdvisoryMitreCVEListV5Ref struct {
	Containers *AdvisoryMContainers `json:"containers,omitempty"`
	CveMetadata *AdvisoryMCveMetadata `json:"cveMetadata,omitempty"`
	DataType *string `json:"dataType,omitempty"`
	DataVersion *string `json:"dataVersion,omitempty"`
}

// NewAdvisoryMitreCVEListV5Ref instantiates a new AdvisoryMitreCVEListV5Ref object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMitreCVEListV5Ref() *AdvisoryMitreCVEListV5Ref {
	this := AdvisoryMitreCVEListV5Ref{}
	return &this
}

// NewAdvisoryMitreCVEListV5RefWithDefaults instantiates a new AdvisoryMitreCVEListV5Ref object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMitreCVEListV5RefWithDefaults() *AdvisoryMitreCVEListV5Ref {
	this := AdvisoryMitreCVEListV5Ref{}
	return &this
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *AdvisoryMitreCVEListV5Ref) GetContainers() AdvisoryMContainers {
	if o == nil || IsNil(o.Containers) {
		var ret AdvisoryMContainers
		return ret
	}
	return *o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreCVEListV5Ref) GetContainersOk() (*AdvisoryMContainers, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *AdvisoryMitreCVEListV5Ref) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given AdvisoryMContainers and assigns it to the Containers field.
func (o *AdvisoryMitreCVEListV5Ref) SetContainers(v AdvisoryMContainers) {
	o.Containers = &v
}

// GetCveMetadata returns the CveMetadata field value if set, zero value otherwise.
func (o *AdvisoryMitreCVEListV5Ref) GetCveMetadata() AdvisoryMCveMetadata {
	if o == nil || IsNil(o.CveMetadata) {
		var ret AdvisoryMCveMetadata
		return ret
	}
	return *o.CveMetadata
}

// GetCveMetadataOk returns a tuple with the CveMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreCVEListV5Ref) GetCveMetadataOk() (*AdvisoryMCveMetadata, bool) {
	if o == nil || IsNil(o.CveMetadata) {
		return nil, false
	}
	return o.CveMetadata, true
}

// HasCveMetadata returns a boolean if a field has been set.
func (o *AdvisoryMitreCVEListV5Ref) HasCveMetadata() bool {
	if o != nil && !IsNil(o.CveMetadata) {
		return true
	}

	return false
}

// SetCveMetadata gets a reference to the given AdvisoryMCveMetadata and assigns it to the CveMetadata field.
func (o *AdvisoryMitreCVEListV5Ref) SetCveMetadata(v AdvisoryMCveMetadata) {
	o.CveMetadata = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *AdvisoryMitreCVEListV5Ref) GetDataType() string {
	if o == nil || IsNil(o.DataType) {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreCVEListV5Ref) GetDataTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DataType) {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *AdvisoryMitreCVEListV5Ref) HasDataType() bool {
	if o != nil && !IsNil(o.DataType) {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *AdvisoryMitreCVEListV5Ref) SetDataType(v string) {
	o.DataType = &v
}

// GetDataVersion returns the DataVersion field value if set, zero value otherwise.
func (o *AdvisoryMitreCVEListV5Ref) GetDataVersion() string {
	if o == nil || IsNil(o.DataVersion) {
		var ret string
		return ret
	}
	return *o.DataVersion
}

// GetDataVersionOk returns a tuple with the DataVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreCVEListV5Ref) GetDataVersionOk() (*string, bool) {
	if o == nil || IsNil(o.DataVersion) {
		return nil, false
	}
	return o.DataVersion, true
}

// HasDataVersion returns a boolean if a field has been set.
func (o *AdvisoryMitreCVEListV5Ref) HasDataVersion() bool {
	if o != nil && !IsNil(o.DataVersion) {
		return true
	}

	return false
}

// SetDataVersion gets a reference to the given string and assigns it to the DataVersion field.
func (o *AdvisoryMitreCVEListV5Ref) SetDataVersion(v string) {
	o.DataVersion = &v
}

func (o AdvisoryMitreCVEListV5Ref) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMitreCVEListV5Ref) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	if !IsNil(o.CveMetadata) {
		toSerialize["cveMetadata"] = o.CveMetadata
	}
	if !IsNil(o.DataType) {
		toSerialize["dataType"] = o.DataType
	}
	if !IsNil(o.DataVersion) {
		toSerialize["dataVersion"] = o.DataVersion
	}
	return toSerialize, nil
}

type NullableAdvisoryMitreCVEListV5Ref struct {
	value *AdvisoryMitreCVEListV5Ref
	isSet bool
}

func (v NullableAdvisoryMitreCVEListV5Ref) Get() *AdvisoryMitreCVEListV5Ref {
	return v.value
}

func (v *NullableAdvisoryMitreCVEListV5Ref) Set(val *AdvisoryMitreCVEListV5Ref) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMitreCVEListV5Ref) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMitreCVEListV5Ref) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMitreCVEListV5Ref(val *AdvisoryMitreCVEListV5Ref) *NullableAdvisoryMitreCVEListV5Ref {
	return &NullableAdvisoryMitreCVEListV5Ref{value: val, isSet: true}
}

func (v NullableAdvisoryMitreCVEListV5Ref) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMitreCVEListV5Ref) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


