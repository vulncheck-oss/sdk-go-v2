/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySchneiderCVE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySchneiderCVE{}

// AdvisorySchneiderCVE struct for AdvisorySchneiderCVE
type AdvisorySchneiderCVE struct {
	Cve *string `json:"cve,omitempty"`
	CvssScore3 *string `json:"cvss_score3,omitempty"`
	CvssScore4 *string `json:"cvss_score4,omitempty"`
	CvssVector3 *string `json:"cvss_vector3,omitempty"`
	CvssVector4 *string `json:"cvss_vector4,omitempty"`
}

// NewAdvisorySchneiderCVE instantiates a new AdvisorySchneiderCVE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySchneiderCVE() *AdvisorySchneiderCVE {
	this := AdvisorySchneiderCVE{}
	return &this
}

// NewAdvisorySchneiderCVEWithDefaults instantiates a new AdvisorySchneiderCVE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySchneiderCVEWithDefaults() *AdvisorySchneiderCVE {
	this := AdvisorySchneiderCVE{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySchneiderCVE) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderCVE) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySchneiderCVE) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *AdvisorySchneiderCVE) SetCve(v string) {
	o.Cve = &v
}

// GetCvssScore3 returns the CvssScore3 field value if set, zero value otherwise.
func (o *AdvisorySchneiderCVE) GetCvssScore3() string {
	if o == nil || IsNil(o.CvssScore3) {
		var ret string
		return ret
	}
	return *o.CvssScore3
}

// GetCvssScore3Ok returns a tuple with the CvssScore3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderCVE) GetCvssScore3Ok() (*string, bool) {
	if o == nil || IsNil(o.CvssScore3) {
		return nil, false
	}
	return o.CvssScore3, true
}

// HasCvssScore3 returns a boolean if a field has been set.
func (o *AdvisorySchneiderCVE) HasCvssScore3() bool {
	if o != nil && !IsNil(o.CvssScore3) {
		return true
	}

	return false
}

// SetCvssScore3 gets a reference to the given string and assigns it to the CvssScore3 field.
func (o *AdvisorySchneiderCVE) SetCvssScore3(v string) {
	o.CvssScore3 = &v
}

// GetCvssScore4 returns the CvssScore4 field value if set, zero value otherwise.
func (o *AdvisorySchneiderCVE) GetCvssScore4() string {
	if o == nil || IsNil(o.CvssScore4) {
		var ret string
		return ret
	}
	return *o.CvssScore4
}

// GetCvssScore4Ok returns a tuple with the CvssScore4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderCVE) GetCvssScore4Ok() (*string, bool) {
	if o == nil || IsNil(o.CvssScore4) {
		return nil, false
	}
	return o.CvssScore4, true
}

// HasCvssScore4 returns a boolean if a field has been set.
func (o *AdvisorySchneiderCVE) HasCvssScore4() bool {
	if o != nil && !IsNil(o.CvssScore4) {
		return true
	}

	return false
}

// SetCvssScore4 gets a reference to the given string and assigns it to the CvssScore4 field.
func (o *AdvisorySchneiderCVE) SetCvssScore4(v string) {
	o.CvssScore4 = &v
}

// GetCvssVector3 returns the CvssVector3 field value if set, zero value otherwise.
func (o *AdvisorySchneiderCVE) GetCvssVector3() string {
	if o == nil || IsNil(o.CvssVector3) {
		var ret string
		return ret
	}
	return *o.CvssVector3
}

// GetCvssVector3Ok returns a tuple with the CvssVector3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderCVE) GetCvssVector3Ok() (*string, bool) {
	if o == nil || IsNil(o.CvssVector3) {
		return nil, false
	}
	return o.CvssVector3, true
}

// HasCvssVector3 returns a boolean if a field has been set.
func (o *AdvisorySchneiderCVE) HasCvssVector3() bool {
	if o != nil && !IsNil(o.CvssVector3) {
		return true
	}

	return false
}

// SetCvssVector3 gets a reference to the given string and assigns it to the CvssVector3 field.
func (o *AdvisorySchneiderCVE) SetCvssVector3(v string) {
	o.CvssVector3 = &v
}

// GetCvssVector4 returns the CvssVector4 field value if set, zero value otherwise.
func (o *AdvisorySchneiderCVE) GetCvssVector4() string {
	if o == nil || IsNil(o.CvssVector4) {
		var ret string
		return ret
	}
	return *o.CvssVector4
}

// GetCvssVector4Ok returns a tuple with the CvssVector4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderCVE) GetCvssVector4Ok() (*string, bool) {
	if o == nil || IsNil(o.CvssVector4) {
		return nil, false
	}
	return o.CvssVector4, true
}

// HasCvssVector4 returns a boolean if a field has been set.
func (o *AdvisorySchneiderCVE) HasCvssVector4() bool {
	if o != nil && !IsNil(o.CvssVector4) {
		return true
	}

	return false
}

// SetCvssVector4 gets a reference to the given string and assigns it to the CvssVector4 field.
func (o *AdvisorySchneiderCVE) SetCvssVector4(v string) {
	o.CvssVector4 = &v
}

func (o AdvisorySchneiderCVE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySchneiderCVE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CvssScore3) {
		toSerialize["cvss_score3"] = o.CvssScore3
	}
	if !IsNil(o.CvssScore4) {
		toSerialize["cvss_score4"] = o.CvssScore4
	}
	if !IsNil(o.CvssVector3) {
		toSerialize["cvss_vector3"] = o.CvssVector3
	}
	if !IsNil(o.CvssVector4) {
		toSerialize["cvss_vector4"] = o.CvssVector4
	}
	return toSerialize, nil
}

type NullableAdvisorySchneiderCVE struct {
	value *AdvisorySchneiderCVE
	isSet bool
}

func (v NullableAdvisorySchneiderCVE) Get() *AdvisorySchneiderCVE {
	return v.value
}

func (v *NullableAdvisorySchneiderCVE) Set(val *AdvisorySchneiderCVE) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySchneiderCVE) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySchneiderCVE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySchneiderCVE(val *AdvisorySchneiderCVE) *NullableAdvisorySchneiderCVE {
	return &NullableAdvisorySchneiderCVE{value: val, isSet: true}
}

func (v NullableAdvisorySchneiderCVE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySchneiderCVE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


