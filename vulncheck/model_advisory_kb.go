/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryKb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryKb{}

// AdvisoryKb struct for AdvisoryKb
type AdvisoryKb struct {
	KbUrl *string `json:"kb_url,omitempty"`
	MsDateAdded *string `json:"ms_date_added,omitempty"`
	Status *string `json:"status,omitempty"`
	Supercedence *string `json:"supercedence,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAdvisoryKb instantiates a new AdvisoryKb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryKb() *AdvisoryKb {
	this := AdvisoryKb{}
	return &this
}

// NewAdvisoryKbWithDefaults instantiates a new AdvisoryKb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryKbWithDefaults() *AdvisoryKb {
	this := AdvisoryKb{}
	return &this
}

// GetKbUrl returns the KbUrl field value if set, zero value otherwise.
func (o *AdvisoryKb) GetKbUrl() string {
	if o == nil || IsNil(o.KbUrl) {
		var ret string
		return ret
	}
	return *o.KbUrl
}

// GetKbUrlOk returns a tuple with the KbUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKb) GetKbUrlOk() (*string, bool) {
	if o == nil || IsNil(o.KbUrl) {
		return nil, false
	}
	return o.KbUrl, true
}

// HasKbUrl returns a boolean if a field has been set.
func (o *AdvisoryKb) HasKbUrl() bool {
	if o != nil && !IsNil(o.KbUrl) {
		return true
	}

	return false
}

// SetKbUrl gets a reference to the given string and assigns it to the KbUrl field.
func (o *AdvisoryKb) SetKbUrl(v string) {
	o.KbUrl = &v
}

// GetMsDateAdded returns the MsDateAdded field value if set, zero value otherwise.
func (o *AdvisoryKb) GetMsDateAdded() string {
	if o == nil || IsNil(o.MsDateAdded) {
		var ret string
		return ret
	}
	return *o.MsDateAdded
}

// GetMsDateAddedOk returns a tuple with the MsDateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKb) GetMsDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.MsDateAdded) {
		return nil, false
	}
	return o.MsDateAdded, true
}

// HasMsDateAdded returns a boolean if a field has been set.
func (o *AdvisoryKb) HasMsDateAdded() bool {
	if o != nil && !IsNil(o.MsDateAdded) {
		return true
	}

	return false
}

// SetMsDateAdded gets a reference to the given string and assigns it to the MsDateAdded field.
func (o *AdvisoryKb) SetMsDateAdded(v string) {
	o.MsDateAdded = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdvisoryKb) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKb) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdvisoryKb) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdvisoryKb) SetStatus(v string) {
	o.Status = &v
}

// GetSupercedence returns the Supercedence field value if set, zero value otherwise.
func (o *AdvisoryKb) GetSupercedence() string {
	if o == nil || IsNil(o.Supercedence) {
		var ret string
		return ret
	}
	return *o.Supercedence
}

// GetSupercedenceOk returns a tuple with the Supercedence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKb) GetSupercedenceOk() (*string, bool) {
	if o == nil || IsNil(o.Supercedence) {
		return nil, false
	}
	return o.Supercedence, true
}

// HasSupercedence returns a boolean if a field has been set.
func (o *AdvisoryKb) HasSupercedence() bool {
	if o != nil && !IsNil(o.Supercedence) {
		return true
	}

	return false
}

// SetSupercedence gets a reference to the given string and assigns it to the Supercedence field.
func (o *AdvisoryKb) SetSupercedence(v string) {
	o.Supercedence = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AdvisoryKb) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKb) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AdvisoryKb) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AdvisoryKb) SetValue(v string) {
	o.Value = &v
}

func (o AdvisoryKb) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryKb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KbUrl) {
		toSerialize["kb_url"] = o.KbUrl
	}
	if !IsNil(o.MsDateAdded) {
		toSerialize["ms_date_added"] = o.MsDateAdded
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Supercedence) {
		toSerialize["supercedence"] = o.Supercedence
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAdvisoryKb struct {
	value *AdvisoryKb
	isSet bool
}

func (v NullableAdvisoryKb) Get() *AdvisoryKb {
	return v.value
}

func (v *NullableAdvisoryKb) Set(val *AdvisoryKb) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryKb) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryKb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryKb(val *AdvisoryKb) *NullableAdvisoryKb {
	return &NullableAdvisoryKb{value: val, isSet: true}
}

func (v NullableAdvisoryKb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryKb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


