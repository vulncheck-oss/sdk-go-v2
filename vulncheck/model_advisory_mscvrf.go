/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMSCVRF type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMSCVRF{}

// AdvisoryMSCVRF struct for AdvisoryMSCVRF
type AdvisoryMSCVRF struct {
	DocumentTitle *AdvisoryMSDocumentTitle `json:"DocumentTitle,omitempty"`
	DocumentTracking *AdvisoryMDocumentTracking `json:"DocumentTracking,omitempty"`
	ProductTree *AdvisoryMProductTree `json:"ProductTree,omitempty"`
	DocumentType *string `json:"document_type,omitempty"`
	// diff
	Documentnotes []AdvisoryRNote `json:"documentnotes,omitempty"`
	Documentpublisher *AdvisoryDocumentPublisher `json:"documentpublisher,omitempty"`
	Vulnerability []AdvisoryMVulnerability `json:"vulnerability,omitempty"`
}

// NewAdvisoryMSCVRF instantiates a new AdvisoryMSCVRF object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMSCVRF() *AdvisoryMSCVRF {
	this := AdvisoryMSCVRF{}
	return &this
}

// NewAdvisoryMSCVRFWithDefaults instantiates a new AdvisoryMSCVRF object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMSCVRFWithDefaults() *AdvisoryMSCVRF {
	this := AdvisoryMSCVRF{}
	return &this
}

// GetDocumentTitle returns the DocumentTitle field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetDocumentTitle() AdvisoryMSDocumentTitle {
	if o == nil || IsNil(o.DocumentTitle) {
		var ret AdvisoryMSDocumentTitle
		return ret
	}
	return *o.DocumentTitle
}

// GetDocumentTitleOk returns a tuple with the DocumentTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetDocumentTitleOk() (*AdvisoryMSDocumentTitle, bool) {
	if o == nil || IsNil(o.DocumentTitle) {
		return nil, false
	}
	return o.DocumentTitle, true
}

// HasDocumentTitle returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasDocumentTitle() bool {
	if o != nil && !IsNil(o.DocumentTitle) {
		return true
	}

	return false
}

// SetDocumentTitle gets a reference to the given AdvisoryMSDocumentTitle and assigns it to the DocumentTitle field.
func (o *AdvisoryMSCVRF) SetDocumentTitle(v AdvisoryMSDocumentTitle) {
	o.DocumentTitle = &v
}

// GetDocumentTracking returns the DocumentTracking field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetDocumentTracking() AdvisoryMDocumentTracking {
	if o == nil || IsNil(o.DocumentTracking) {
		var ret AdvisoryMDocumentTracking
		return ret
	}
	return *o.DocumentTracking
}

// GetDocumentTrackingOk returns a tuple with the DocumentTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetDocumentTrackingOk() (*AdvisoryMDocumentTracking, bool) {
	if o == nil || IsNil(o.DocumentTracking) {
		return nil, false
	}
	return o.DocumentTracking, true
}

// HasDocumentTracking returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasDocumentTracking() bool {
	if o != nil && !IsNil(o.DocumentTracking) {
		return true
	}

	return false
}

// SetDocumentTracking gets a reference to the given AdvisoryMDocumentTracking and assigns it to the DocumentTracking field.
func (o *AdvisoryMSCVRF) SetDocumentTracking(v AdvisoryMDocumentTracking) {
	o.DocumentTracking = &v
}

// GetProductTree returns the ProductTree field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetProductTree() AdvisoryMProductTree {
	if o == nil || IsNil(o.ProductTree) {
		var ret AdvisoryMProductTree
		return ret
	}
	return *o.ProductTree
}

// GetProductTreeOk returns a tuple with the ProductTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetProductTreeOk() (*AdvisoryMProductTree, bool) {
	if o == nil || IsNil(o.ProductTree) {
		return nil, false
	}
	return o.ProductTree, true
}

// HasProductTree returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasProductTree() bool {
	if o != nil && !IsNil(o.ProductTree) {
		return true
	}

	return false
}

// SetProductTree gets a reference to the given AdvisoryMProductTree and assigns it to the ProductTree field.
func (o *AdvisoryMSCVRF) SetProductTree(v AdvisoryMProductTree) {
	o.ProductTree = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetDocumentType() string {
	if o == nil || IsNil(o.DocumentType) {
		var ret string
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given string and assigns it to the DocumentType field.
func (o *AdvisoryMSCVRF) SetDocumentType(v string) {
	o.DocumentType = &v
}

// GetDocumentnotes returns the Documentnotes field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetDocumentnotes() []AdvisoryRNote {
	if o == nil || IsNil(o.Documentnotes) {
		var ret []AdvisoryRNote
		return ret
	}
	return o.Documentnotes
}

// GetDocumentnotesOk returns a tuple with the Documentnotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetDocumentnotesOk() ([]AdvisoryRNote, bool) {
	if o == nil || IsNil(o.Documentnotes) {
		return nil, false
	}
	return o.Documentnotes, true
}

// HasDocumentnotes returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasDocumentnotes() bool {
	if o != nil && !IsNil(o.Documentnotes) {
		return true
	}

	return false
}

// SetDocumentnotes gets a reference to the given []AdvisoryRNote and assigns it to the Documentnotes field.
func (o *AdvisoryMSCVRF) SetDocumentnotes(v []AdvisoryRNote) {
	o.Documentnotes = v
}

// GetDocumentpublisher returns the Documentpublisher field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetDocumentpublisher() AdvisoryDocumentPublisher {
	if o == nil || IsNil(o.Documentpublisher) {
		var ret AdvisoryDocumentPublisher
		return ret
	}
	return *o.Documentpublisher
}

// GetDocumentpublisherOk returns a tuple with the Documentpublisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetDocumentpublisherOk() (*AdvisoryDocumentPublisher, bool) {
	if o == nil || IsNil(o.Documentpublisher) {
		return nil, false
	}
	return o.Documentpublisher, true
}

// HasDocumentpublisher returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasDocumentpublisher() bool {
	if o != nil && !IsNil(o.Documentpublisher) {
		return true
	}

	return false
}

// SetDocumentpublisher gets a reference to the given AdvisoryDocumentPublisher and assigns it to the Documentpublisher field.
func (o *AdvisoryMSCVRF) SetDocumentpublisher(v AdvisoryDocumentPublisher) {
	o.Documentpublisher = &v
}

// GetVulnerability returns the Vulnerability field value if set, zero value otherwise.
func (o *AdvisoryMSCVRF) GetVulnerability() []AdvisoryMVulnerability {
	if o == nil || IsNil(o.Vulnerability) {
		var ret []AdvisoryMVulnerability
		return ret
	}
	return o.Vulnerability
}

// GetVulnerabilityOk returns a tuple with the Vulnerability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMSCVRF) GetVulnerabilityOk() ([]AdvisoryMVulnerability, bool) {
	if o == nil || IsNil(o.Vulnerability) {
		return nil, false
	}
	return o.Vulnerability, true
}

// HasVulnerability returns a boolean if a field has been set.
func (o *AdvisoryMSCVRF) HasVulnerability() bool {
	if o != nil && !IsNil(o.Vulnerability) {
		return true
	}

	return false
}

// SetVulnerability gets a reference to the given []AdvisoryMVulnerability and assigns it to the Vulnerability field.
func (o *AdvisoryMSCVRF) SetVulnerability(v []AdvisoryMVulnerability) {
	o.Vulnerability = v
}

func (o AdvisoryMSCVRF) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMSCVRF) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DocumentTitle) {
		toSerialize["DocumentTitle"] = o.DocumentTitle
	}
	if !IsNil(o.DocumentTracking) {
		toSerialize["DocumentTracking"] = o.DocumentTracking
	}
	if !IsNil(o.ProductTree) {
		toSerialize["ProductTree"] = o.ProductTree
	}
	if !IsNil(o.DocumentType) {
		toSerialize["document_type"] = o.DocumentType
	}
	if !IsNil(o.Documentnotes) {
		toSerialize["documentnotes"] = o.Documentnotes
	}
	if !IsNil(o.Documentpublisher) {
		toSerialize["documentpublisher"] = o.Documentpublisher
	}
	if !IsNil(o.Vulnerability) {
		toSerialize["vulnerability"] = o.Vulnerability
	}
	return toSerialize, nil
}

type NullableAdvisoryMSCVRF struct {
	value *AdvisoryMSCVRF
	isSet bool
}

func (v NullableAdvisoryMSCVRF) Get() *AdvisoryMSCVRF {
	return v.value
}

func (v *NullableAdvisoryMSCVRF) Set(val *AdvisoryMSCVRF) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMSCVRF) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMSCVRF) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMSCVRF(val *AdvisoryMSCVRF) *NullableAdvisoryMSCVRF {
	return &NullableAdvisoryMSCVRF{value: val, isSet: true}
}

func (v NullableAdvisoryMSCVRF) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMSCVRF) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


