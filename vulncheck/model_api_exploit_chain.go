/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiExploitChain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExploitChain{}

// ApiExploitChain struct for ApiExploitChain
type ApiExploitChain struct {
	Cves []ApiExploitChainCVE `json:"cves,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewApiExploitChain instantiates a new ApiExploitChain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExploitChain() *ApiExploitChain {
	this := ApiExploitChain{}
	return &this
}

// NewApiExploitChainWithDefaults instantiates a new ApiExploitChain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExploitChainWithDefaults() *ApiExploitChain {
	this := ApiExploitChain{}
	return &this
}

// GetCves returns the Cves field value if set, zero value otherwise.
func (o *ApiExploitChain) GetCves() []ApiExploitChainCVE {
	if o == nil || IsNil(o.Cves) {
		var ret []ApiExploitChainCVE
		return ret
	}
	return o.Cves
}

// GetCvesOk returns a tuple with the Cves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitChain) GetCvesOk() ([]ApiExploitChainCVE, bool) {
	if o == nil || IsNil(o.Cves) {
		return nil, false
	}
	return o.Cves, true
}

// HasCves returns a boolean if a field has been set.
func (o *ApiExploitChain) HasCves() bool {
	if o != nil && !IsNil(o.Cves) {
		return true
	}

	return false
}

// SetCves gets a reference to the given []ApiExploitChainCVE and assigns it to the Cves field.
func (o *ApiExploitChain) SetCves(v []ApiExploitChainCVE) {
	o.Cves = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *ApiExploitChain) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitChain) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *ApiExploitChain) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *ApiExploitChain) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiExploitChain) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitChain) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiExploitChain) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiExploitChain) SetUrl(v string) {
	o.Url = &v
}

func (o ApiExploitChain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiExploitChain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cves) {
		toSerialize["cves"] = o.Cves
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableApiExploitChain struct {
	value *ApiExploitChain
	isSet bool
}

func (v NullableApiExploitChain) Get() *ApiExploitChain {
	return v.value
}

func (v *NullableApiExploitChain) Set(val *ApiExploitChain) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExploitChain) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExploitChain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExploitChain(val *ApiExploitChain) *NullableApiExploitChain {
	return &NullableApiExploitChain{value: val, isSet: true}
}

func (v NullableApiExploitChain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExploitChain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


