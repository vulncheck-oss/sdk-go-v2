/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryPrimeVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryPrimeVersion{}

// AdvisoryPrimeVersion struct for AdvisoryPrimeVersion
type AdvisoryPrimeVersion struct {
	JdK *string `json:"jdK,omitempty"`
	Prime *string `json:"prime,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewAdvisoryPrimeVersion instantiates a new AdvisoryPrimeVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryPrimeVersion() *AdvisoryPrimeVersion {
	this := AdvisoryPrimeVersion{}
	return &this
}

// NewAdvisoryPrimeVersionWithDefaults instantiates a new AdvisoryPrimeVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryPrimeVersionWithDefaults() *AdvisoryPrimeVersion {
	this := AdvisoryPrimeVersion{}
	return &this
}

// GetJdK returns the JdK field value if set, zero value otherwise.
func (o *AdvisoryPrimeVersion) GetJdK() string {
	if o == nil || IsNil(o.JdK) {
		var ret string
		return ret
	}
	return *o.JdK
}

// GetJdKOk returns a tuple with the JdK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPrimeVersion) GetJdKOk() (*string, bool) {
	if o == nil || IsNil(o.JdK) {
		return nil, false
	}
	return o.JdK, true
}

// HasJdK returns a boolean if a field has been set.
func (o *AdvisoryPrimeVersion) HasJdK() bool {
	if o != nil && !IsNil(o.JdK) {
		return true
	}

	return false
}

// SetJdK gets a reference to the given string and assigns it to the JdK field.
func (o *AdvisoryPrimeVersion) SetJdK(v string) {
	o.JdK = &v
}

// GetPrime returns the Prime field value if set, zero value otherwise.
func (o *AdvisoryPrimeVersion) GetPrime() string {
	if o == nil || IsNil(o.Prime) {
		var ret string
		return ret
	}
	return *o.Prime
}

// GetPrimeOk returns a tuple with the Prime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPrimeVersion) GetPrimeOk() (*string, bool) {
	if o == nil || IsNil(o.Prime) {
		return nil, false
	}
	return o.Prime, true
}

// HasPrime returns a boolean if a field has been set.
func (o *AdvisoryPrimeVersion) HasPrime() bool {
	if o != nil && !IsNil(o.Prime) {
		return true
	}

	return false
}

// SetPrime gets a reference to the given string and assigns it to the Prime field.
func (o *AdvisoryPrimeVersion) SetPrime(v string) {
	o.Prime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryPrimeVersion) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPrimeVersion) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryPrimeVersion) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryPrimeVersion) SetType(v string) {
	o.Type = &v
}

func (o AdvisoryPrimeVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryPrimeVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JdK) {
		toSerialize["jdK"] = o.JdK
	}
	if !IsNil(o.Prime) {
		toSerialize["prime"] = o.Prime
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisoryPrimeVersion struct {
	value *AdvisoryPrimeVersion
	isSet bool
}

func (v NullableAdvisoryPrimeVersion) Get() *AdvisoryPrimeVersion {
	return v.value
}

func (v *NullableAdvisoryPrimeVersion) Set(val *AdvisoryPrimeVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryPrimeVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryPrimeVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryPrimeVersion(val *AdvisoryPrimeVersion) *NullableAdvisoryPrimeVersion {
	return &NullableAdvisoryPrimeVersion{value: val, isSet: true}
}

func (v NullableAdvisoryPrimeVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryPrimeVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


