/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCSAFVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCSAFVulnerability{}

// AdvisoryCSAFVulnerability struct for AdvisoryCSAFVulnerability
type AdvisoryCSAFVulnerability struct {
	// MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability.  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#3232-vulnerabilities-property---cve
	Cve *string `json:"cve,omitempty"`
	Cwe *AdvisoryCwe `json:"cwe,omitempty"`
	// Machine readable flags for products related to vulnerability  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#3235-vulnerabilities-property---flags
	Flags []AdvisoryFlag `json:"flags,omitempty"`
	// List of IDs represents a list of unique labels or tracking IDs for the vulnerability (if such information exists).  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#3236-vulnerabilities-property---ids
	Ids []AdvisoryTrackingID `json:"ids,omitempty"`
	// Notes holds notes associated with the Vulnerability object. https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#3238-vulnerabilities-property---notes
	Notes []AdvisoryCSAFNote `json:"notes,omitempty"`
	// Provide details on the status of the referenced product related to the vulnerability.  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#3239-vulnerabilities-property---product-status
	ProductStatus *map[string][]string `json:"product_status,omitempty"`
	// Vulnerability references holds a list of references associated with this vulnerability item.  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#32310-vulnerabilities-property---references
	References []AdvisoryCSAFReference `json:"references,omitempty"`
	ReleaseDate *string `json:"release_date,omitempty"`
	// Provide details of remediations associated with a Vulnerability  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#32312-vulnerabilities-property---remediations
	Remediations []AdvisoryRemediationData `json:"remediations,omitempty"`
	// Scores holds the scores associated with the Vulnerability object. https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#32313-vulnerabilities-property---scores Currently only CVSS v3 is supported.
	Scores []AdvisoryCSAFScore `json:"scores,omitempty"`
	// Provide details of threats associated with a vulnerability.  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#32314-vulnerabilities-property---threats
	Threats []AdvisoryThreatData `json:"threats,omitempty"`
}

// NewAdvisoryCSAFVulnerability instantiates a new AdvisoryCSAFVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCSAFVulnerability() *AdvisoryCSAFVulnerability {
	this := AdvisoryCSAFVulnerability{}
	return &this
}

// NewAdvisoryCSAFVulnerabilityWithDefaults instantiates a new AdvisoryCSAFVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCSAFVulnerabilityWithDefaults() *AdvisoryCSAFVulnerability {
	this := AdvisoryCSAFVulnerability{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *AdvisoryCSAFVulnerability) SetCve(v string) {
	o.Cve = &v
}

// GetCwe returns the Cwe field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetCwe() AdvisoryCwe {
	if o == nil || IsNil(o.Cwe) {
		var ret AdvisoryCwe
		return ret
	}
	return *o.Cwe
}

// GetCweOk returns a tuple with the Cwe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetCweOk() (*AdvisoryCwe, bool) {
	if o == nil || IsNil(o.Cwe) {
		return nil, false
	}
	return o.Cwe, true
}

// HasCwe returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasCwe() bool {
	if o != nil && !IsNil(o.Cwe) {
		return true
	}

	return false
}

// SetCwe gets a reference to the given AdvisoryCwe and assigns it to the Cwe field.
func (o *AdvisoryCSAFVulnerability) SetCwe(v AdvisoryCwe) {
	o.Cwe = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetFlags() []AdvisoryFlag {
	if o == nil || IsNil(o.Flags) {
		var ret []AdvisoryFlag
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetFlagsOk() ([]AdvisoryFlag, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []AdvisoryFlag and assigns it to the Flags field.
func (o *AdvisoryCSAFVulnerability) SetFlags(v []AdvisoryFlag) {
	o.Flags = v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetIds() []AdvisoryTrackingID {
	if o == nil || IsNil(o.Ids) {
		var ret []AdvisoryTrackingID
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetIdsOk() ([]AdvisoryTrackingID, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []AdvisoryTrackingID and assigns it to the Ids field.
func (o *AdvisoryCSAFVulnerability) SetIds(v []AdvisoryTrackingID) {
	o.Ids = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetNotes() []AdvisoryCSAFNote {
	if o == nil || IsNil(o.Notes) {
		var ret []AdvisoryCSAFNote
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetNotesOk() ([]AdvisoryCSAFNote, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []AdvisoryCSAFNote and assigns it to the Notes field.
func (o *AdvisoryCSAFVulnerability) SetNotes(v []AdvisoryCSAFNote) {
	o.Notes = v
}

// GetProductStatus returns the ProductStatus field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetProductStatus() map[string][]string {
	if o == nil || IsNil(o.ProductStatus) {
		var ret map[string][]string
		return ret
	}
	return *o.ProductStatus
}

// GetProductStatusOk returns a tuple with the ProductStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetProductStatusOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.ProductStatus) {
		return nil, false
	}
	return o.ProductStatus, true
}

// HasProductStatus returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasProductStatus() bool {
	if o != nil && !IsNil(o.ProductStatus) {
		return true
	}

	return false
}

// SetProductStatus gets a reference to the given map[string][]string and assigns it to the ProductStatus field.
func (o *AdvisoryCSAFVulnerability) SetProductStatus(v map[string][]string) {
	o.ProductStatus = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetReferences() []AdvisoryCSAFReference {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryCSAFReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetReferencesOk() ([]AdvisoryCSAFReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryCSAFReference and assigns it to the References field.
func (o *AdvisoryCSAFVulnerability) SetReferences(v []AdvisoryCSAFReference) {
	o.References = v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *AdvisoryCSAFVulnerability) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetRemediations returns the Remediations field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetRemediations() []AdvisoryRemediationData {
	if o == nil || IsNil(o.Remediations) {
		var ret []AdvisoryRemediationData
		return ret
	}
	return o.Remediations
}

// GetRemediationsOk returns a tuple with the Remediations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetRemediationsOk() ([]AdvisoryRemediationData, bool) {
	if o == nil || IsNil(o.Remediations) {
		return nil, false
	}
	return o.Remediations, true
}

// HasRemediations returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasRemediations() bool {
	if o != nil && !IsNil(o.Remediations) {
		return true
	}

	return false
}

// SetRemediations gets a reference to the given []AdvisoryRemediationData and assigns it to the Remediations field.
func (o *AdvisoryCSAFVulnerability) SetRemediations(v []AdvisoryRemediationData) {
	o.Remediations = v
}

// GetScores returns the Scores field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetScores() []AdvisoryCSAFScore {
	if o == nil || IsNil(o.Scores) {
		var ret []AdvisoryCSAFScore
		return ret
	}
	return o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetScoresOk() ([]AdvisoryCSAFScore, bool) {
	if o == nil || IsNil(o.Scores) {
		return nil, false
	}
	return o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasScores() bool {
	if o != nil && !IsNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given []AdvisoryCSAFScore and assigns it to the Scores field.
func (o *AdvisoryCSAFVulnerability) SetScores(v []AdvisoryCSAFScore) {
	o.Scores = v
}

// GetThreats returns the Threats field value if set, zero value otherwise.
func (o *AdvisoryCSAFVulnerability) GetThreats() []AdvisoryThreatData {
	if o == nil || IsNil(o.Threats) {
		var ret []AdvisoryThreatData
		return ret
	}
	return o.Threats
}

// GetThreatsOk returns a tuple with the Threats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFVulnerability) GetThreatsOk() ([]AdvisoryThreatData, bool) {
	if o == nil || IsNil(o.Threats) {
		return nil, false
	}
	return o.Threats, true
}

// HasThreats returns a boolean if a field has been set.
func (o *AdvisoryCSAFVulnerability) HasThreats() bool {
	if o != nil && !IsNil(o.Threats) {
		return true
	}

	return false
}

// SetThreats gets a reference to the given []AdvisoryThreatData and assigns it to the Threats field.
func (o *AdvisoryCSAFVulnerability) SetThreats(v []AdvisoryThreatData) {
	o.Threats = v
}

func (o AdvisoryCSAFVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCSAFVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cwe) {
		toSerialize["cwe"] = o.Cwe
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ProductStatus) {
		toSerialize["product_status"] = o.ProductStatus
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if !IsNil(o.Remediations) {
		toSerialize["remediations"] = o.Remediations
	}
	if !IsNil(o.Scores) {
		toSerialize["scores"] = o.Scores
	}
	if !IsNil(o.Threats) {
		toSerialize["threats"] = o.Threats
	}
	return toSerialize, nil
}

type NullableAdvisoryCSAFVulnerability struct {
	value *AdvisoryCSAFVulnerability
	isSet bool
}

func (v NullableAdvisoryCSAFVulnerability) Get() *AdvisoryCSAFVulnerability {
	return v.value
}

func (v *NullableAdvisoryCSAFVulnerability) Set(val *AdvisoryCSAFVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCSAFVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCSAFVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCSAFVulnerability(val *AdvisoryCSAFVulnerability) *NullableAdvisoryCSAFVulnerability {
	return &NullableAdvisoryCSAFVulnerability{value: val, isSet: true}
}

func (v NullableAdvisoryCSAFVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCSAFVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


