/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryBDUCvss3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryBDUCvss3{}

// AdvisoryBDUCvss3 struct for AdvisoryBDUCvss3
type AdvisoryBDUCvss3 struct {
	Vector *AdvisoryBDUVector `json:"vector,omitempty"`
}

// NewAdvisoryBDUCvss3 instantiates a new AdvisoryBDUCvss3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryBDUCvss3() *AdvisoryBDUCvss3 {
	this := AdvisoryBDUCvss3{}
	return &this
}

// NewAdvisoryBDUCvss3WithDefaults instantiates a new AdvisoryBDUCvss3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryBDUCvss3WithDefaults() *AdvisoryBDUCvss3 {
	this := AdvisoryBDUCvss3{}
	return &this
}

// GetVector returns the Vector field value if set, zero value otherwise.
func (o *AdvisoryBDUCvss3) GetVector() AdvisoryBDUVector {
	if o == nil || IsNil(o.Vector) {
		var ret AdvisoryBDUVector
		return ret
	}
	return *o.Vector
}

// GetVectorOk returns a tuple with the Vector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUCvss3) GetVectorOk() (*AdvisoryBDUVector, bool) {
	if o == nil || IsNil(o.Vector) {
		return nil, false
	}
	return o.Vector, true
}

// HasVector returns a boolean if a field has been set.
func (o *AdvisoryBDUCvss3) HasVector() bool {
	if o != nil && !IsNil(o.Vector) {
		return true
	}

	return false
}

// SetVector gets a reference to the given AdvisoryBDUVector and assigns it to the Vector field.
func (o *AdvisoryBDUCvss3) SetVector(v AdvisoryBDUVector) {
	o.Vector = &v
}

func (o AdvisoryBDUCvss3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryBDUCvss3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Vector) {
		toSerialize["vector"] = o.Vector
	}
	return toSerialize, nil
}

type NullableAdvisoryBDUCvss3 struct {
	value *AdvisoryBDUCvss3
	isSet bool
}

func (v NullableAdvisoryBDUCvss3) Get() *AdvisoryBDUCvss3 {
	return v.value
}

func (v *NullableAdvisoryBDUCvss3) Set(val *AdvisoryBDUCvss3) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryBDUCvss3) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryBDUCvss3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryBDUCvss3(val *AdvisoryBDUCvss3) *NullableAdvisoryBDUCvss3 {
	return &NullableAdvisoryBDUCvss3{value: val, isSet: true}
}

func (v NullableAdvisoryBDUCvss3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryBDUCvss3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


