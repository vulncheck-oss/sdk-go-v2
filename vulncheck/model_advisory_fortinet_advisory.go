/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryFortinetAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryFortinetAdvisory{}

// AdvisoryFortinetAdvisory struct for AdvisoryFortinetAdvisory
type AdvisoryFortinetAdvisory struct {
	Acknowledgement *string `json:"acknowledgement,omitempty"`
	AffectedProducts []string `json:"affectedProducts,omitempty"`
	Cve []string `json:"cve,omitempty"`
	Cvssv3 *string `json:"cvssv3,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Irnumber *string `json:"irnumber,omitempty"`
	Link *string `json:"link,omitempty"`
	References []string `json:"references,omitempty"`
	Solutions []string `json:"solutions,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisoryFortinetAdvisory instantiates a new AdvisoryFortinetAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryFortinetAdvisory() *AdvisoryFortinetAdvisory {
	this := AdvisoryFortinetAdvisory{}
	return &this
}

// NewAdvisoryFortinetAdvisoryWithDefaults instantiates a new AdvisoryFortinetAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryFortinetAdvisoryWithDefaults() *AdvisoryFortinetAdvisory {
	this := AdvisoryFortinetAdvisory{}
	return &this
}

// GetAcknowledgement returns the Acknowledgement field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetAcknowledgement() string {
	if o == nil || IsNil(o.Acknowledgement) {
		var ret string
		return ret
	}
	return *o.Acknowledgement
}

// GetAcknowledgementOk returns a tuple with the Acknowledgement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetAcknowledgementOk() (*string, bool) {
	if o == nil || IsNil(o.Acknowledgement) {
		return nil, false
	}
	return o.Acknowledgement, true
}

// HasAcknowledgement returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasAcknowledgement() bool {
	if o != nil && !IsNil(o.Acknowledgement) {
		return true
	}

	return false
}

// SetAcknowledgement gets a reference to the given string and assigns it to the Acknowledgement field.
func (o *AdvisoryFortinetAdvisory) SetAcknowledgement(v string) {
	o.Acknowledgement = &v
}

// GetAffectedProducts returns the AffectedProducts field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetAffectedProducts() []string {
	if o == nil || IsNil(o.AffectedProducts) {
		var ret []string
		return ret
	}
	return o.AffectedProducts
}

// GetAffectedProductsOk returns a tuple with the AffectedProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetAffectedProductsOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedProducts) {
		return nil, false
	}
	return o.AffectedProducts, true
}

// HasAffectedProducts returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasAffectedProducts() bool {
	if o != nil && !IsNil(o.AffectedProducts) {
		return true
	}

	return false
}

// SetAffectedProducts gets a reference to the given []string and assigns it to the AffectedProducts field.
func (o *AdvisoryFortinetAdvisory) SetAffectedProducts(v []string) {
	o.AffectedProducts = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryFortinetAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetCvssv3 returns the Cvssv3 field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetCvssv3() string {
	if o == nil || IsNil(o.Cvssv3) {
		var ret string
		return ret
	}
	return *o.Cvssv3
}

// GetCvssv3Ok returns a tuple with the Cvssv3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetCvssv3Ok() (*string, bool) {
	if o == nil || IsNil(o.Cvssv3) {
		return nil, false
	}
	return o.Cvssv3, true
}

// HasCvssv3 returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasCvssv3() bool {
	if o != nil && !IsNil(o.Cvssv3) {
		return true
	}

	return false
}

// SetCvssv3 gets a reference to the given string and assigns it to the Cvssv3 field.
func (o *AdvisoryFortinetAdvisory) SetCvssv3(v string) {
	o.Cvssv3 = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryFortinetAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetIrnumber returns the Irnumber field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetIrnumber() string {
	if o == nil || IsNil(o.Irnumber) {
		var ret string
		return ret
	}
	return *o.Irnumber
}

// GetIrnumberOk returns a tuple with the Irnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetIrnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Irnumber) {
		return nil, false
	}
	return o.Irnumber, true
}

// HasIrnumber returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasIrnumber() bool {
	if o != nil && !IsNil(o.Irnumber) {
		return true
	}

	return false
}

// SetIrnumber gets a reference to the given string and assigns it to the Irnumber field.
func (o *AdvisoryFortinetAdvisory) SetIrnumber(v string) {
	o.Irnumber = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryFortinetAdvisory) SetLink(v string) {
	o.Link = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryFortinetAdvisory) SetReferences(v []string) {
	o.References = v
}

// GetSolutions returns the Solutions field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetSolutions() []string {
	if o == nil || IsNil(o.Solutions) {
		var ret []string
		return ret
	}
	return o.Solutions
}

// GetSolutionsOk returns a tuple with the Solutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetSolutionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Solutions) {
		return nil, false
	}
	return o.Solutions, true
}

// HasSolutions returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasSolutions() bool {
	if o != nil && !IsNil(o.Solutions) {
		return true
	}

	return false
}

// SetSolutions gets a reference to the given []string and assigns it to the Solutions field.
func (o *AdvisoryFortinetAdvisory) SetSolutions(v []string) {
	o.Solutions = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AdvisoryFortinetAdvisory) SetSummary(v string) {
	o.Summary = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryFortinetAdvisory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFortinetAdvisory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryFortinetAdvisory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryFortinetAdvisory) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisoryFortinetAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryFortinetAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Acknowledgement) {
		toSerialize["acknowledgement"] = o.Acknowledgement
	}
	if !IsNil(o.AffectedProducts) {
		toSerialize["affectedProducts"] = o.AffectedProducts
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cvssv3) {
		toSerialize["cvssv3"] = o.Cvssv3
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Irnumber) {
		toSerialize["irnumber"] = o.Irnumber
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Solutions) {
		toSerialize["solutions"] = o.Solutions
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisoryFortinetAdvisory struct {
	value *AdvisoryFortinetAdvisory
	isSet bool
}

func (v NullableAdvisoryFortinetAdvisory) Get() *AdvisoryFortinetAdvisory {
	return v.value
}

func (v *NullableAdvisoryFortinetAdvisory) Set(val *AdvisoryFortinetAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryFortinetAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryFortinetAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryFortinetAdvisory(val *AdvisoryFortinetAdvisory) *NullableAdvisoryFortinetAdvisory {
	return &NullableAdvisoryFortinetAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryFortinetAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryFortinetAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


