/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAffectedDebianRepository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAffectedDebianRepository{}

// AdvisoryAffectedDebianRepository struct for AdvisoryAffectedDebianRepository
type AdvisoryAffectedDebianRepository struct {
	RepositoryName *string `json:"repository_name,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryAffectedDebianRepository instantiates a new AdvisoryAffectedDebianRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAffectedDebianRepository() *AdvisoryAffectedDebianRepository {
	this := AdvisoryAffectedDebianRepository{}
	return &this
}

// NewAdvisoryAffectedDebianRepositoryWithDefaults instantiates a new AdvisoryAffectedDebianRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAffectedDebianRepositoryWithDefaults() *AdvisoryAffectedDebianRepository {
	this := AdvisoryAffectedDebianRepository{}
	return &this
}

// GetRepositoryName returns the RepositoryName field value if set, zero value otherwise.
func (o *AdvisoryAffectedDebianRepository) GetRepositoryName() string {
	if o == nil || IsNil(o.RepositoryName) {
		var ret string
		return ret
	}
	return *o.RepositoryName
}

// GetRepositoryNameOk returns a tuple with the RepositoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAffectedDebianRepository) GetRepositoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.RepositoryName) {
		return nil, false
	}
	return o.RepositoryName, true
}

// HasRepositoryName returns a boolean if a field has been set.
func (o *AdvisoryAffectedDebianRepository) HasRepositoryName() bool {
	if o != nil && !IsNil(o.RepositoryName) {
		return true
	}

	return false
}

// SetRepositoryName gets a reference to the given string and assigns it to the RepositoryName field.
func (o *AdvisoryAffectedDebianRepository) SetRepositoryName(v string) {
	o.RepositoryName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryAffectedDebianRepository) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAffectedDebianRepository) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryAffectedDebianRepository) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryAffectedDebianRepository) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryAffectedDebianRepository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAffectedDebianRepository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RepositoryName) {
		toSerialize["repository_name"] = o.RepositoryName
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryAffectedDebianRepository struct {
	value *AdvisoryAffectedDebianRepository
	isSet bool
}

func (v NullableAdvisoryAffectedDebianRepository) Get() *AdvisoryAffectedDebianRepository {
	return v.value
}

func (v *NullableAdvisoryAffectedDebianRepository) Set(val *AdvisoryAffectedDebianRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAffectedDebianRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAffectedDebianRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAffectedDebianRepository(val *AdvisoryAffectedDebianRepository) *NullableAdvisoryAffectedDebianRepository {
	return &NullableAdvisoryAffectedDebianRepository{value: val, isSet: true}
}

func (v NullableAdvisoryAffectedDebianRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAffectedDebianRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


