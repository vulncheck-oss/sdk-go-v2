/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMitreAttackTechnique type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMitreAttackTechnique{}

// AdvisoryMitreAttackTechnique struct for AdvisoryMitreAttackTechnique
type AdvisoryMitreAttackTechnique struct {
	SubTechnique *string `json:"sub_technique,omitempty"`
	SubTechniqueName *string `json:"sub_technique_name,omitempty"`
	Tactic []string `json:"tactic,omitempty"`
	TechniqueId *string `json:"technique_id,omitempty"`
	TechniqueName *string `json:"technique_name,omitempty"`
}

// NewAdvisoryMitreAttackTechnique instantiates a new AdvisoryMitreAttackTechnique object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMitreAttackTechnique() *AdvisoryMitreAttackTechnique {
	this := AdvisoryMitreAttackTechnique{}
	return &this
}

// NewAdvisoryMitreAttackTechniqueWithDefaults instantiates a new AdvisoryMitreAttackTechnique object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMitreAttackTechniqueWithDefaults() *AdvisoryMitreAttackTechnique {
	this := AdvisoryMitreAttackTechnique{}
	return &this
}

// GetSubTechnique returns the SubTechnique field value if set, zero value otherwise.
func (o *AdvisoryMitreAttackTechnique) GetSubTechnique() string {
	if o == nil || IsNil(o.SubTechnique) {
		var ret string
		return ret
	}
	return *o.SubTechnique
}

// GetSubTechniqueOk returns a tuple with the SubTechnique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreAttackTechnique) GetSubTechniqueOk() (*string, bool) {
	if o == nil || IsNil(o.SubTechnique) {
		return nil, false
	}
	return o.SubTechnique, true
}

// HasSubTechnique returns a boolean if a field has been set.
func (o *AdvisoryMitreAttackTechnique) HasSubTechnique() bool {
	if o != nil && !IsNil(o.SubTechnique) {
		return true
	}

	return false
}

// SetSubTechnique gets a reference to the given string and assigns it to the SubTechnique field.
func (o *AdvisoryMitreAttackTechnique) SetSubTechnique(v string) {
	o.SubTechnique = &v
}

// GetSubTechniqueName returns the SubTechniqueName field value if set, zero value otherwise.
func (o *AdvisoryMitreAttackTechnique) GetSubTechniqueName() string {
	if o == nil || IsNil(o.SubTechniqueName) {
		var ret string
		return ret
	}
	return *o.SubTechniqueName
}

// GetSubTechniqueNameOk returns a tuple with the SubTechniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreAttackTechnique) GetSubTechniqueNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubTechniqueName) {
		return nil, false
	}
	return o.SubTechniqueName, true
}

// HasSubTechniqueName returns a boolean if a field has been set.
func (o *AdvisoryMitreAttackTechnique) HasSubTechniqueName() bool {
	if o != nil && !IsNil(o.SubTechniqueName) {
		return true
	}

	return false
}

// SetSubTechniqueName gets a reference to the given string and assigns it to the SubTechniqueName field.
func (o *AdvisoryMitreAttackTechnique) SetSubTechniqueName(v string) {
	o.SubTechniqueName = &v
}

// GetTactic returns the Tactic field value if set, zero value otherwise.
func (o *AdvisoryMitreAttackTechnique) GetTactic() []string {
	if o == nil || IsNil(o.Tactic) {
		var ret []string
		return ret
	}
	return o.Tactic
}

// GetTacticOk returns a tuple with the Tactic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreAttackTechnique) GetTacticOk() ([]string, bool) {
	if o == nil || IsNil(o.Tactic) {
		return nil, false
	}
	return o.Tactic, true
}

// HasTactic returns a boolean if a field has been set.
func (o *AdvisoryMitreAttackTechnique) HasTactic() bool {
	if o != nil && !IsNil(o.Tactic) {
		return true
	}

	return false
}

// SetTactic gets a reference to the given []string and assigns it to the Tactic field.
func (o *AdvisoryMitreAttackTechnique) SetTactic(v []string) {
	o.Tactic = v
}

// GetTechniqueId returns the TechniqueId field value if set, zero value otherwise.
func (o *AdvisoryMitreAttackTechnique) GetTechniqueId() string {
	if o == nil || IsNil(o.TechniqueId) {
		var ret string
		return ret
	}
	return *o.TechniqueId
}

// GetTechniqueIdOk returns a tuple with the TechniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreAttackTechnique) GetTechniqueIdOk() (*string, bool) {
	if o == nil || IsNil(o.TechniqueId) {
		return nil, false
	}
	return o.TechniqueId, true
}

// HasTechniqueId returns a boolean if a field has been set.
func (o *AdvisoryMitreAttackTechnique) HasTechniqueId() bool {
	if o != nil && !IsNil(o.TechniqueId) {
		return true
	}

	return false
}

// SetTechniqueId gets a reference to the given string and assigns it to the TechniqueId field.
func (o *AdvisoryMitreAttackTechnique) SetTechniqueId(v string) {
	o.TechniqueId = &v
}

// GetTechniqueName returns the TechniqueName field value if set, zero value otherwise.
func (o *AdvisoryMitreAttackTechnique) GetTechniqueName() string {
	if o == nil || IsNil(o.TechniqueName) {
		var ret string
		return ret
	}
	return *o.TechniqueName
}

// GetTechniqueNameOk returns a tuple with the TechniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreAttackTechnique) GetTechniqueNameOk() (*string, bool) {
	if o == nil || IsNil(o.TechniqueName) {
		return nil, false
	}
	return o.TechniqueName, true
}

// HasTechniqueName returns a boolean if a field has been set.
func (o *AdvisoryMitreAttackTechnique) HasTechniqueName() bool {
	if o != nil && !IsNil(o.TechniqueName) {
		return true
	}

	return false
}

// SetTechniqueName gets a reference to the given string and assigns it to the TechniqueName field.
func (o *AdvisoryMitreAttackTechnique) SetTechniqueName(v string) {
	o.TechniqueName = &v
}

func (o AdvisoryMitreAttackTechnique) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMitreAttackTechnique) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubTechnique) {
		toSerialize["sub_technique"] = o.SubTechnique
	}
	if !IsNil(o.SubTechniqueName) {
		toSerialize["sub_technique_name"] = o.SubTechniqueName
	}
	if !IsNil(o.Tactic) {
		toSerialize["tactic"] = o.Tactic
	}
	if !IsNil(o.TechniqueId) {
		toSerialize["technique_id"] = o.TechniqueId
	}
	if !IsNil(o.TechniqueName) {
		toSerialize["technique_name"] = o.TechniqueName
	}
	return toSerialize, nil
}

type NullableAdvisoryMitreAttackTechnique struct {
	value *AdvisoryMitreAttackTechnique
	isSet bool
}

func (v NullableAdvisoryMitreAttackTechnique) Get() *AdvisoryMitreAttackTechnique {
	return v.value
}

func (v *NullableAdvisoryMitreAttackTechnique) Set(val *AdvisoryMitreAttackTechnique) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMitreAttackTechnique) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMitreAttackTechnique) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMitreAttackTechnique(val *AdvisoryMitreAttackTechnique) *NullableAdvisoryMitreAttackTechnique {
	return &NullableAdvisoryMitreAttackTechnique{value: val, isSet: true}
}

func (v NullableAdvisoryMitreAttackTechnique) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMitreAttackTechnique) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


