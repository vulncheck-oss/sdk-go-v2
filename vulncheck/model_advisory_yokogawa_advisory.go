/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryYokogawaAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryYokogawaAdvisory{}

// AdvisoryYokogawaAdvisory struct for AdvisoryYokogawaAdvisory
type AdvisoryYokogawaAdvisory struct {
	Cve []string `json:"cve,omitempty"`
	Cwe []string `json:"cwe,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DateLastRevised *string `json:"date_last_revised,omitempty"`
	Name *string `json:"name,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
	YsarId *string `json:"ysar_id,omitempty"`
}

// NewAdvisoryYokogawaAdvisory instantiates a new AdvisoryYokogawaAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryYokogawaAdvisory() *AdvisoryYokogawaAdvisory {
	this := AdvisoryYokogawaAdvisory{}
	return &this
}

// NewAdvisoryYokogawaAdvisoryWithDefaults instantiates a new AdvisoryYokogawaAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryYokogawaAdvisoryWithDefaults() *AdvisoryYokogawaAdvisory {
	this := AdvisoryYokogawaAdvisory{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryYokogawaAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetCwe returns the Cwe field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetCwe() []string {
	if o == nil || IsNil(o.Cwe) {
		var ret []string
		return ret
	}
	return o.Cwe
}

// GetCweOk returns a tuple with the Cwe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetCweOk() ([]string, bool) {
	if o == nil || IsNil(o.Cwe) {
		return nil, false
	}
	return o.Cwe, true
}

// HasCwe returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasCwe() bool {
	if o != nil && !IsNil(o.Cwe) {
		return true
	}

	return false
}

// SetCwe gets a reference to the given []string and assigns it to the Cwe field.
func (o *AdvisoryYokogawaAdvisory) SetCwe(v []string) {
	o.Cwe = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryYokogawaAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDateLastRevised returns the DateLastRevised field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetDateLastRevised() string {
	if o == nil || IsNil(o.DateLastRevised) {
		var ret string
		return ret
	}
	return *o.DateLastRevised
}

// GetDateLastRevisedOk returns a tuple with the DateLastRevised field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetDateLastRevisedOk() (*string, bool) {
	if o == nil || IsNil(o.DateLastRevised) {
		return nil, false
	}
	return o.DateLastRevised, true
}

// HasDateLastRevised returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasDateLastRevised() bool {
	if o != nil && !IsNil(o.DateLastRevised) {
		return true
	}

	return false
}

// SetDateLastRevised gets a reference to the given string and assigns it to the DateLastRevised field.
func (o *AdvisoryYokogawaAdvisory) SetDateLastRevised(v string) {
	o.DateLastRevised = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryYokogawaAdvisory) SetName(v string) {
	o.Name = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryYokogawaAdvisory) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryYokogawaAdvisory) SetUrl(v string) {
	o.Url = &v
}

// GetYsarId returns the YsarId field value if set, zero value otherwise.
func (o *AdvisoryYokogawaAdvisory) GetYsarId() string {
	if o == nil || IsNil(o.YsarId) {
		var ret string
		return ret
	}
	return *o.YsarId
}

// GetYsarIdOk returns a tuple with the YsarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryYokogawaAdvisory) GetYsarIdOk() (*string, bool) {
	if o == nil || IsNil(o.YsarId) {
		return nil, false
	}
	return o.YsarId, true
}

// HasYsarId returns a boolean if a field has been set.
func (o *AdvisoryYokogawaAdvisory) HasYsarId() bool {
	if o != nil && !IsNil(o.YsarId) {
		return true
	}

	return false
}

// SetYsarId gets a reference to the given string and assigns it to the YsarId field.
func (o *AdvisoryYokogawaAdvisory) SetYsarId(v string) {
	o.YsarId = &v
}

func (o AdvisoryYokogawaAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryYokogawaAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cwe) {
		toSerialize["cwe"] = o.Cwe
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DateLastRevised) {
		toSerialize["date_last_revised"] = o.DateLastRevised
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.YsarId) {
		toSerialize["ysar_id"] = o.YsarId
	}
	return toSerialize, nil
}

type NullableAdvisoryYokogawaAdvisory struct {
	value *AdvisoryYokogawaAdvisory
	isSet bool
}

func (v NullableAdvisoryYokogawaAdvisory) Get() *AdvisoryYokogawaAdvisory {
	return v.value
}

func (v *NullableAdvisoryYokogawaAdvisory) Set(val *AdvisoryYokogawaAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryYokogawaAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryYokogawaAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryYokogawaAdvisory(val *AdvisoryYokogawaAdvisory) *NullableAdvisoryYokogawaAdvisory {
	return &NullableAdvisoryYokogawaAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryYokogawaAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryYokogawaAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


