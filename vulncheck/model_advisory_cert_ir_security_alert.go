/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCertIRSecurityAlert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCertIRSecurityAlert{}

// AdvisoryCertIRSecurityAlert struct for AdvisoryCertIRSecurityAlert
type AdvisoryCertIRSecurityAlert struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	References []string `json:"references,omitempty"`
	SummaryFa *string `json:"summary_fa,omitempty"`
	TitleFa *string `json:"title_fa,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryCertIRSecurityAlert instantiates a new AdvisoryCertIRSecurityAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCertIRSecurityAlert() *AdvisoryCertIRSecurityAlert {
	this := AdvisoryCertIRSecurityAlert{}
	return &this
}

// NewAdvisoryCertIRSecurityAlertWithDefaults instantiates a new AdvisoryCertIRSecurityAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCertIRSecurityAlertWithDefaults() *AdvisoryCertIRSecurityAlert {
	this := AdvisoryCertIRSecurityAlert{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCertIRSecurityAlert) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCertIRSecurityAlert) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCertIRSecurityAlert) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCertIRSecurityAlert) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCertIRSecurityAlert) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCertIRSecurityAlert) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCertIRSecurityAlert) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCertIRSecurityAlert) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryCertIRSecurityAlert) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCertIRSecurityAlert) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryCertIRSecurityAlert) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryCertIRSecurityAlert) SetReferences(v []string) {
	o.References = v
}

// GetSummaryFa returns the SummaryFa field value if set, zero value otherwise.
func (o *AdvisoryCertIRSecurityAlert) GetSummaryFa() string {
	if o == nil || IsNil(o.SummaryFa) {
		var ret string
		return ret
	}
	return *o.SummaryFa
}

// GetSummaryFaOk returns a tuple with the SummaryFa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCertIRSecurityAlert) GetSummaryFaOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryFa) {
		return nil, false
	}
	return o.SummaryFa, true
}

// HasSummaryFa returns a boolean if a field has been set.
func (o *AdvisoryCertIRSecurityAlert) HasSummaryFa() bool {
	if o != nil && !IsNil(o.SummaryFa) {
		return true
	}

	return false
}

// SetSummaryFa gets a reference to the given string and assigns it to the SummaryFa field.
func (o *AdvisoryCertIRSecurityAlert) SetSummaryFa(v string) {
	o.SummaryFa = &v
}

// GetTitleFa returns the TitleFa field value if set, zero value otherwise.
func (o *AdvisoryCertIRSecurityAlert) GetTitleFa() string {
	if o == nil || IsNil(o.TitleFa) {
		var ret string
		return ret
	}
	return *o.TitleFa
}

// GetTitleFaOk returns a tuple with the TitleFa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCertIRSecurityAlert) GetTitleFaOk() (*string, bool) {
	if o == nil || IsNil(o.TitleFa) {
		return nil, false
	}
	return o.TitleFa, true
}

// HasTitleFa returns a boolean if a field has been set.
func (o *AdvisoryCertIRSecurityAlert) HasTitleFa() bool {
	if o != nil && !IsNil(o.TitleFa) {
		return true
	}

	return false
}

// SetTitleFa gets a reference to the given string and assigns it to the TitleFa field.
func (o *AdvisoryCertIRSecurityAlert) SetTitleFa(v string) {
	o.TitleFa = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryCertIRSecurityAlert) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCertIRSecurityAlert) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryCertIRSecurityAlert) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryCertIRSecurityAlert) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryCertIRSecurityAlert) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCertIRSecurityAlert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.SummaryFa) {
		toSerialize["summary_fa"] = o.SummaryFa
	}
	if !IsNil(o.TitleFa) {
		toSerialize["title_fa"] = o.TitleFa
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryCertIRSecurityAlert struct {
	value *AdvisoryCertIRSecurityAlert
	isSet bool
}

func (v NullableAdvisoryCertIRSecurityAlert) Get() *AdvisoryCertIRSecurityAlert {
	return v.value
}

func (v *NullableAdvisoryCertIRSecurityAlert) Set(val *AdvisoryCertIRSecurityAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCertIRSecurityAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCertIRSecurityAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCertIRSecurityAlert(val *AdvisoryCertIRSecurityAlert) *NullableAdvisoryCertIRSecurityAlert {
	return &NullableAdvisoryCertIRSecurityAlert{value: val, isSet: true}
}

func (v NullableAdvisoryCertIRSecurityAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCertIRSecurityAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


