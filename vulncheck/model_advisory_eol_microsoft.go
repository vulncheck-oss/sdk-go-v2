/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryEOLMicrosoft type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryEOLMicrosoft{}

// AdvisoryEOLMicrosoft struct for AdvisoryEOLMicrosoft
type AdvisoryEOLMicrosoft struct {
	Cve []string `json:"cve,omitempty"`
	Edition *string `json:"edition,omitempty"`
	ExtendedEndDate *string `json:"extended_end_date,omitempty"`
	MainstreamDate *string `json:"mainstream_date,omitempty"`
	Product *string `json:"product,omitempty"`
	Release *string `json:"release,omitempty"`
	ReleaseEndDate *string `json:"release_end_date,omitempty"`
	ReleaseStartDate *string `json:"release_start_date,omitempty"`
	RetirementDate *string `json:"retirement_date,omitempty"`
	StartDate *string `json:"start_date,omitempty"`
	SupportPolicy *string `json:"support_policy,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryEOLMicrosoft instantiates a new AdvisoryEOLMicrosoft object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryEOLMicrosoft() *AdvisoryEOLMicrosoft {
	this := AdvisoryEOLMicrosoft{}
	return &this
}

// NewAdvisoryEOLMicrosoftWithDefaults instantiates a new AdvisoryEOLMicrosoft object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryEOLMicrosoftWithDefaults() *AdvisoryEOLMicrosoft {
	this := AdvisoryEOLMicrosoft{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryEOLMicrosoft) SetCve(v []string) {
	o.Cve = v
}

// GetEdition returns the Edition field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetEdition() string {
	if o == nil || IsNil(o.Edition) {
		var ret string
		return ret
	}
	return *o.Edition
}

// GetEditionOk returns a tuple with the Edition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetEditionOk() (*string, bool) {
	if o == nil || IsNil(o.Edition) {
		return nil, false
	}
	return o.Edition, true
}

// HasEdition returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasEdition() bool {
	if o != nil && !IsNil(o.Edition) {
		return true
	}

	return false
}

// SetEdition gets a reference to the given string and assigns it to the Edition field.
func (o *AdvisoryEOLMicrosoft) SetEdition(v string) {
	o.Edition = &v
}

// GetExtendedEndDate returns the ExtendedEndDate field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetExtendedEndDate() string {
	if o == nil || IsNil(o.ExtendedEndDate) {
		var ret string
		return ret
	}
	return *o.ExtendedEndDate
}

// GetExtendedEndDateOk returns a tuple with the ExtendedEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetExtendedEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExtendedEndDate) {
		return nil, false
	}
	return o.ExtendedEndDate, true
}

// HasExtendedEndDate returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasExtendedEndDate() bool {
	if o != nil && !IsNil(o.ExtendedEndDate) {
		return true
	}

	return false
}

// SetExtendedEndDate gets a reference to the given string and assigns it to the ExtendedEndDate field.
func (o *AdvisoryEOLMicrosoft) SetExtendedEndDate(v string) {
	o.ExtendedEndDate = &v
}

// GetMainstreamDate returns the MainstreamDate field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetMainstreamDate() string {
	if o == nil || IsNil(o.MainstreamDate) {
		var ret string
		return ret
	}
	return *o.MainstreamDate
}

// GetMainstreamDateOk returns a tuple with the MainstreamDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetMainstreamDateOk() (*string, bool) {
	if o == nil || IsNil(o.MainstreamDate) {
		return nil, false
	}
	return o.MainstreamDate, true
}

// HasMainstreamDate returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasMainstreamDate() bool {
	if o != nil && !IsNil(o.MainstreamDate) {
		return true
	}

	return false
}

// SetMainstreamDate gets a reference to the given string and assigns it to the MainstreamDate field.
func (o *AdvisoryEOLMicrosoft) SetMainstreamDate(v string) {
	o.MainstreamDate = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryEOLMicrosoft) SetProduct(v string) {
	o.Product = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *AdvisoryEOLMicrosoft) SetRelease(v string) {
	o.Release = &v
}

// GetReleaseEndDate returns the ReleaseEndDate field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetReleaseEndDate() string {
	if o == nil || IsNil(o.ReleaseEndDate) {
		var ret string
		return ret
	}
	return *o.ReleaseEndDate
}

// GetReleaseEndDateOk returns a tuple with the ReleaseEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetReleaseEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseEndDate) {
		return nil, false
	}
	return o.ReleaseEndDate, true
}

// HasReleaseEndDate returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasReleaseEndDate() bool {
	if o != nil && !IsNil(o.ReleaseEndDate) {
		return true
	}

	return false
}

// SetReleaseEndDate gets a reference to the given string and assigns it to the ReleaseEndDate field.
func (o *AdvisoryEOLMicrosoft) SetReleaseEndDate(v string) {
	o.ReleaseEndDate = &v
}

// GetReleaseStartDate returns the ReleaseStartDate field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetReleaseStartDate() string {
	if o == nil || IsNil(o.ReleaseStartDate) {
		var ret string
		return ret
	}
	return *o.ReleaseStartDate
}

// GetReleaseStartDateOk returns a tuple with the ReleaseStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetReleaseStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseStartDate) {
		return nil, false
	}
	return o.ReleaseStartDate, true
}

// HasReleaseStartDate returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasReleaseStartDate() bool {
	if o != nil && !IsNil(o.ReleaseStartDate) {
		return true
	}

	return false
}

// SetReleaseStartDate gets a reference to the given string and assigns it to the ReleaseStartDate field.
func (o *AdvisoryEOLMicrosoft) SetReleaseStartDate(v string) {
	o.ReleaseStartDate = &v
}

// GetRetirementDate returns the RetirementDate field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetRetirementDate() string {
	if o == nil || IsNil(o.RetirementDate) {
		var ret string
		return ret
	}
	return *o.RetirementDate
}

// GetRetirementDateOk returns a tuple with the RetirementDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetRetirementDateOk() (*string, bool) {
	if o == nil || IsNil(o.RetirementDate) {
		return nil, false
	}
	return o.RetirementDate, true
}

// HasRetirementDate returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasRetirementDate() bool {
	if o != nil && !IsNil(o.RetirementDate) {
		return true
	}

	return false
}

// SetRetirementDate gets a reference to the given string and assigns it to the RetirementDate field.
func (o *AdvisoryEOLMicrosoft) SetRetirementDate(v string) {
	o.RetirementDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AdvisoryEOLMicrosoft) SetStartDate(v string) {
	o.StartDate = &v
}

// GetSupportPolicy returns the SupportPolicy field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetSupportPolicy() string {
	if o == nil || IsNil(o.SupportPolicy) {
		var ret string
		return ret
	}
	return *o.SupportPolicy
}

// GetSupportPolicyOk returns a tuple with the SupportPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetSupportPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.SupportPolicy) {
		return nil, false
	}
	return o.SupportPolicy, true
}

// HasSupportPolicy returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasSupportPolicy() bool {
	if o != nil && !IsNil(o.SupportPolicy) {
		return true
	}

	return false
}

// SetSupportPolicy gets a reference to the given string and assigns it to the SupportPolicy field.
func (o *AdvisoryEOLMicrosoft) SetSupportPolicy(v string) {
	o.SupportPolicy = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryEOLMicrosoft) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLMicrosoft) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryEOLMicrosoft) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryEOLMicrosoft) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryEOLMicrosoft) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryEOLMicrosoft) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Edition) {
		toSerialize["edition"] = o.Edition
	}
	if !IsNil(o.ExtendedEndDate) {
		toSerialize["extended_end_date"] = o.ExtendedEndDate
	}
	if !IsNil(o.MainstreamDate) {
		toSerialize["mainstream_date"] = o.MainstreamDate
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.ReleaseEndDate) {
		toSerialize["release_end_date"] = o.ReleaseEndDate
	}
	if !IsNil(o.ReleaseStartDate) {
		toSerialize["release_start_date"] = o.ReleaseStartDate
	}
	if !IsNil(o.RetirementDate) {
		toSerialize["retirement_date"] = o.RetirementDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.SupportPolicy) {
		toSerialize["support_policy"] = o.SupportPolicy
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryEOLMicrosoft struct {
	value *AdvisoryEOLMicrosoft
	isSet bool
}

func (v NullableAdvisoryEOLMicrosoft) Get() *AdvisoryEOLMicrosoft {
	return v.value
}

func (v *NullableAdvisoryEOLMicrosoft) Set(val *AdvisoryEOLMicrosoft) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryEOLMicrosoft) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryEOLMicrosoft) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryEOLMicrosoft(val *AdvisoryEOLMicrosoft) *NullableAdvisoryEOLMicrosoft {
	return &NullableAdvisoryEOLMicrosoft{value: val, isSet: true}
}

func (v NullableAdvisoryEOLMicrosoft) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryEOLMicrosoft) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


