/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryDBSpecific type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryDBSpecific{}

// AdvisoryDBSpecific struct for AdvisoryDBSpecific
type AdvisoryDBSpecific struct {
	CWE *AdvisoryCurlCWE `json:"CWE,omitempty"`
	Award *AdvisoryAward `json:"award,omitempty"`
	LastAffected *string `json:"last_affected,omitempty"`
	Package *string `json:"package,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Url *string `json:"url,omitempty"`
	Www *string `json:"www,omitempty"`
}

// NewAdvisoryDBSpecific instantiates a new AdvisoryDBSpecific object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryDBSpecific() *AdvisoryDBSpecific {
	this := AdvisoryDBSpecific{}
	return &this
}

// NewAdvisoryDBSpecificWithDefaults instantiates a new AdvisoryDBSpecific object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryDBSpecificWithDefaults() *AdvisoryDBSpecific {
	this := AdvisoryDBSpecific{}
	return &this
}

// GetCWE returns the CWE field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetCWE() AdvisoryCurlCWE {
	if o == nil || IsNil(o.CWE) {
		var ret AdvisoryCurlCWE
		return ret
	}
	return *o.CWE
}

// GetCWEOk returns a tuple with the CWE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetCWEOk() (*AdvisoryCurlCWE, bool) {
	if o == nil || IsNil(o.CWE) {
		return nil, false
	}
	return o.CWE, true
}

// HasCWE returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasCWE() bool {
	if o != nil && !IsNil(o.CWE) {
		return true
	}

	return false
}

// SetCWE gets a reference to the given AdvisoryCurlCWE and assigns it to the CWE field.
func (o *AdvisoryDBSpecific) SetCWE(v AdvisoryCurlCWE) {
	o.CWE = &v
}

// GetAward returns the Award field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetAward() AdvisoryAward {
	if o == nil || IsNil(o.Award) {
		var ret AdvisoryAward
		return ret
	}
	return *o.Award
}

// GetAwardOk returns a tuple with the Award field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetAwardOk() (*AdvisoryAward, bool) {
	if o == nil || IsNil(o.Award) {
		return nil, false
	}
	return o.Award, true
}

// HasAward returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasAward() bool {
	if o != nil && !IsNil(o.Award) {
		return true
	}

	return false
}

// SetAward gets a reference to the given AdvisoryAward and assigns it to the Award field.
func (o *AdvisoryDBSpecific) SetAward(v AdvisoryAward) {
	o.Award = &v
}

// GetLastAffected returns the LastAffected field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetLastAffected() string {
	if o == nil || IsNil(o.LastAffected) {
		var ret string
		return ret
	}
	return *o.LastAffected
}

// GetLastAffectedOk returns a tuple with the LastAffected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetLastAffectedOk() (*string, bool) {
	if o == nil || IsNil(o.LastAffected) {
		return nil, false
	}
	return o.LastAffected, true
}

// HasLastAffected returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasLastAffected() bool {
	if o != nil && !IsNil(o.LastAffected) {
		return true
	}

	return false
}

// SetLastAffected gets a reference to the given string and assigns it to the LastAffected field.
func (o *AdvisoryDBSpecific) SetLastAffected(v string) {
	o.LastAffected = &v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetPackage() string {
	if o == nil || IsNil(o.Package) {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetPackageOk() (*string, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *AdvisoryDBSpecific) SetPackage(v string) {
	o.Package = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryDBSpecific) SetSeverity(v string) {
	o.Severity = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryDBSpecific) SetUrl(v string) {
	o.Url = &v
}

// GetWww returns the Www field value if set, zero value otherwise.
func (o *AdvisoryDBSpecific) GetWww() string {
	if o == nil || IsNil(o.Www) {
		var ret string
		return ret
	}
	return *o.Www
}

// GetWwwOk returns a tuple with the Www field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDBSpecific) GetWwwOk() (*string, bool) {
	if o == nil || IsNil(o.Www) {
		return nil, false
	}
	return o.Www, true
}

// HasWww returns a boolean if a field has been set.
func (o *AdvisoryDBSpecific) HasWww() bool {
	if o != nil && !IsNil(o.Www) {
		return true
	}

	return false
}

// SetWww gets a reference to the given string and assigns it to the Www field.
func (o *AdvisoryDBSpecific) SetWww(v string) {
	o.Www = &v
}

func (o AdvisoryDBSpecific) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryDBSpecific) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CWE) {
		toSerialize["CWE"] = o.CWE
	}
	if !IsNil(o.Award) {
		toSerialize["award"] = o.Award
	}
	if !IsNil(o.LastAffected) {
		toSerialize["last_affected"] = o.LastAffected
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Www) {
		toSerialize["www"] = o.Www
	}
	return toSerialize, nil
}

type NullableAdvisoryDBSpecific struct {
	value *AdvisoryDBSpecific
	isSet bool
}

func (v NullableAdvisoryDBSpecific) Get() *AdvisoryDBSpecific {
	return v.value
}

func (v *NullableAdvisoryDBSpecific) Set(val *AdvisoryDBSpecific) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryDBSpecific) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryDBSpecific) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryDBSpecific(val *AdvisoryDBSpecific) *NullableAdvisoryDBSpecific {
	return &NullableAdvisoryDBSpecific{value: val, isSet: true}
}

func (v NullableAdvisoryDBSpecific) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryDBSpecific) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


