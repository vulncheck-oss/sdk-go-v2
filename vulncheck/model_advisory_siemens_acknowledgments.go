/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensAcknowledgments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensAcknowledgments{}

// AdvisorySiemensAcknowledgments struct for AdvisorySiemensAcknowledgments
type AdvisorySiemensAcknowledgments struct {
	Names []string `json:"names,omitempty"`
	Organization *string `json:"organization,omitempty"`
	Summary *string `json:"summary,omitempty"`
}

// NewAdvisorySiemensAcknowledgments instantiates a new AdvisorySiemensAcknowledgments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensAcknowledgments() *AdvisorySiemensAcknowledgments {
	this := AdvisorySiemensAcknowledgments{}
	return &this
}

// NewAdvisorySiemensAcknowledgmentsWithDefaults instantiates a new AdvisorySiemensAcknowledgments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensAcknowledgmentsWithDefaults() *AdvisorySiemensAcknowledgments {
	this := AdvisorySiemensAcknowledgments{}
	return &this
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *AdvisorySiemensAcknowledgments) GetNames() []string {
	if o == nil || IsNil(o.Names) {
		var ret []string
		return ret
	}
	return o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAcknowledgments) GetNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.Names) {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *AdvisorySiemensAcknowledgments) HasNames() bool {
	if o != nil && !IsNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given []string and assigns it to the Names field.
func (o *AdvisorySiemensAcknowledgments) SetNames(v []string) {
	o.Names = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *AdvisorySiemensAcknowledgments) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAcknowledgments) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *AdvisorySiemensAcknowledgments) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *AdvisorySiemensAcknowledgments) SetOrganization(v string) {
	o.Organization = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AdvisorySiemensAcknowledgments) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAcknowledgments) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AdvisorySiemensAcknowledgments) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AdvisorySiemensAcknowledgments) SetSummary(v string) {
	o.Summary = &v
}

func (o AdvisorySiemensAcknowledgments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensAcknowledgments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Names) {
		toSerialize["names"] = o.Names
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensAcknowledgments struct {
	value *AdvisorySiemensAcknowledgments
	isSet bool
}

func (v NullableAdvisorySiemensAcknowledgments) Get() *AdvisorySiemensAcknowledgments {
	return v.value
}

func (v *NullableAdvisorySiemensAcknowledgments) Set(val *AdvisorySiemensAcknowledgments) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensAcknowledgments) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensAcknowledgments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensAcknowledgments(val *AdvisorySiemensAcknowledgments) *NullableAdvisorySiemensAcknowledgments {
	return &NullableAdvisorySiemensAcknowledgments{value: val, isSet: true}
}

func (v NullableAdvisorySiemensAcknowledgments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensAcknowledgments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


