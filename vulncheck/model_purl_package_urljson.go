/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the PurlPackageURLJSON type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurlPackageURLJSON{}

// PurlPackageURLJSON struct for PurlPackageURLJSON
type PurlPackageURLJSON struct {
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Qualifiers []PurlQualifierJSON `json:"qualifiers,omitempty"`
	Subpath *string `json:"subpath,omitempty"`
	Type *string `json:"type,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewPurlPackageURLJSON instantiates a new PurlPackageURLJSON object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurlPackageURLJSON() *PurlPackageURLJSON {
	this := PurlPackageURLJSON{}
	return &this
}

// NewPurlPackageURLJSONWithDefaults instantiates a new PurlPackageURLJSON object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurlPackageURLJSONWithDefaults() *PurlPackageURLJSON {
	this := PurlPackageURLJSON{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PurlPackageURLJSON) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlPackageURLJSON) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PurlPackageURLJSON) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PurlPackageURLJSON) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *PurlPackageURLJSON) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlPackageURLJSON) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *PurlPackageURLJSON) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *PurlPackageURLJSON) SetNamespace(v string) {
	o.Namespace = &v
}

// GetQualifiers returns the Qualifiers field value if set, zero value otherwise.
func (o *PurlPackageURLJSON) GetQualifiers() []PurlQualifierJSON {
	if o == nil || IsNil(o.Qualifiers) {
		var ret []PurlQualifierJSON
		return ret
	}
	return o.Qualifiers
}

// GetQualifiersOk returns a tuple with the Qualifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlPackageURLJSON) GetQualifiersOk() ([]PurlQualifierJSON, bool) {
	if o == nil || IsNil(o.Qualifiers) {
		return nil, false
	}
	return o.Qualifiers, true
}

// HasQualifiers returns a boolean if a field has been set.
func (o *PurlPackageURLJSON) HasQualifiers() bool {
	if o != nil && !IsNil(o.Qualifiers) {
		return true
	}

	return false
}

// SetQualifiers gets a reference to the given []PurlQualifierJSON and assigns it to the Qualifiers field.
func (o *PurlPackageURLJSON) SetQualifiers(v []PurlQualifierJSON) {
	o.Qualifiers = v
}

// GetSubpath returns the Subpath field value if set, zero value otherwise.
func (o *PurlPackageURLJSON) GetSubpath() string {
	if o == nil || IsNil(o.Subpath) {
		var ret string
		return ret
	}
	return *o.Subpath
}

// GetSubpathOk returns a tuple with the Subpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlPackageURLJSON) GetSubpathOk() (*string, bool) {
	if o == nil || IsNil(o.Subpath) {
		return nil, false
	}
	return o.Subpath, true
}

// HasSubpath returns a boolean if a field has been set.
func (o *PurlPackageURLJSON) HasSubpath() bool {
	if o != nil && !IsNil(o.Subpath) {
		return true
	}

	return false
}

// SetSubpath gets a reference to the given string and assigns it to the Subpath field.
func (o *PurlPackageURLJSON) SetSubpath(v string) {
	o.Subpath = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PurlPackageURLJSON) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlPackageURLJSON) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PurlPackageURLJSON) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PurlPackageURLJSON) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PurlPackageURLJSON) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlPackageURLJSON) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PurlPackageURLJSON) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PurlPackageURLJSON) SetVersion(v string) {
	o.Version = &v
}

func (o PurlPackageURLJSON) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurlPackageURLJSON) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Qualifiers) {
		toSerialize["qualifiers"] = o.Qualifiers
	}
	if !IsNil(o.Subpath) {
		toSerialize["subpath"] = o.Subpath
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullablePurlPackageURLJSON struct {
	value *PurlPackageURLJSON
	isSet bool
}

func (v NullablePurlPackageURLJSON) Get() *PurlPackageURLJSON {
	return v.value
}

func (v *NullablePurlPackageURLJSON) Set(val *PurlPackageURLJSON) {
	v.value = val
	v.isSet = true
}

func (v NullablePurlPackageURLJSON) IsSet() bool {
	return v.isSet
}

func (v *NullablePurlPackageURLJSON) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurlPackageURLJSON(val *PurlPackageURLJSON) *NullablePurlPackageURLJSON {
	return &NullablePurlPackageURLJSON{value: val, isSet: true}
}

func (v NullablePurlPackageURLJSON) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurlPackageURLJSON) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


