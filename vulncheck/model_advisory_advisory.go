/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAdvisory{}

// AdvisoryAdvisory struct for AdvisoryAdvisory
type AdvisoryAdvisory struct {
	Affects *string `json:"affects,omitempty"`
	Announced *string `json:"announced,omitempty"`
	Category *string `json:"category,omitempty"`
	Corrections []AdvisoryCorrection `json:"corrections,omitempty"`
	Credits *string `json:"credits,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Module *string `json:"module,omitempty"`
	Name *string `json:"name,omitempty"`
	Topic *string `json:"topic,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryAdvisory instantiates a new AdvisoryAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAdvisory() *AdvisoryAdvisory {
	this := AdvisoryAdvisory{}
	return &this
}

// NewAdvisoryAdvisoryWithDefaults instantiates a new AdvisoryAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAdvisoryWithDefaults() *AdvisoryAdvisory {
	this := AdvisoryAdvisory{}
	return &this
}

// GetAffects returns the Affects field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetAffects() string {
	if o == nil || IsNil(o.Affects) {
		var ret string
		return ret
	}
	return *o.Affects
}

// GetAffectsOk returns a tuple with the Affects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetAffectsOk() (*string, bool) {
	if o == nil || IsNil(o.Affects) {
		return nil, false
	}
	return o.Affects, true
}

// HasAffects returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasAffects() bool {
	if o != nil && !IsNil(o.Affects) {
		return true
	}

	return false
}

// SetAffects gets a reference to the given string and assigns it to the Affects field.
func (o *AdvisoryAdvisory) SetAffects(v string) {
	o.Affects = &v
}

// GetAnnounced returns the Announced field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetAnnounced() string {
	if o == nil || IsNil(o.Announced) {
		var ret string
		return ret
	}
	return *o.Announced
}

// GetAnnouncedOk returns a tuple with the Announced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetAnnouncedOk() (*string, bool) {
	if o == nil || IsNil(o.Announced) {
		return nil, false
	}
	return o.Announced, true
}

// HasAnnounced returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasAnnounced() bool {
	if o != nil && !IsNil(o.Announced) {
		return true
	}

	return false
}

// SetAnnounced gets a reference to the given string and assigns it to the Announced field.
func (o *AdvisoryAdvisory) SetAnnounced(v string) {
	o.Announced = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisoryAdvisory) SetCategory(v string) {
	o.Category = &v
}

// GetCorrections returns the Corrections field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetCorrections() []AdvisoryCorrection {
	if o == nil || IsNil(o.Corrections) {
		var ret []AdvisoryCorrection
		return ret
	}
	return o.Corrections
}

// GetCorrectionsOk returns a tuple with the Corrections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetCorrectionsOk() ([]AdvisoryCorrection, bool) {
	if o == nil || IsNil(o.Corrections) {
		return nil, false
	}
	return o.Corrections, true
}

// HasCorrections returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasCorrections() bool {
	if o != nil && !IsNil(o.Corrections) {
		return true
	}

	return false
}

// SetCorrections gets a reference to the given []AdvisoryCorrection and assigns it to the Corrections field.
func (o *AdvisoryAdvisory) SetCorrections(v []AdvisoryCorrection) {
	o.Corrections = v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetCredits() string {
	if o == nil || IsNil(o.Credits) {
		var ret string
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetCreditsOk() (*string, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given string and assigns it to the Credits field.
func (o *AdvisoryAdvisory) SetCredits(v string) {
	o.Credits = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetModule returns the Module field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetModule() string {
	if o == nil || IsNil(o.Module) {
		var ret string
		return ret
	}
	return *o.Module
}

// GetModuleOk returns a tuple with the Module field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetModuleOk() (*string, bool) {
	if o == nil || IsNil(o.Module) {
		return nil, false
	}
	return o.Module, true
}

// HasModule returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasModule() bool {
	if o != nil && !IsNil(o.Module) {
		return true
	}

	return false
}

// SetModule gets a reference to the given string and assigns it to the Module field.
func (o *AdvisoryAdvisory) SetModule(v string) {
	o.Module = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryAdvisory) SetName(v string) {
	o.Name = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *AdvisoryAdvisory) SetTopic(v string) {
	o.Topic = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryAdvisory) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisory) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryAdvisory) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryAdvisory) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Affects) {
		toSerialize["affects"] = o.Affects
	}
	if !IsNil(o.Announced) {
		toSerialize["announced"] = o.Announced
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Corrections) {
		toSerialize["corrections"] = o.Corrections
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Module) {
		toSerialize["module"] = o.Module
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryAdvisory struct {
	value *AdvisoryAdvisory
	isSet bool
}

func (v NullableAdvisoryAdvisory) Get() *AdvisoryAdvisory {
	return v.value
}

func (v *NullableAdvisoryAdvisory) Set(val *AdvisoryAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAdvisory(val *AdvisoryAdvisory) *NullableAdvisoryAdvisory {
	return &NullableAdvisoryAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


