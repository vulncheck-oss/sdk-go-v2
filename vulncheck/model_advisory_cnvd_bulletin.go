/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCNVDBulletin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCNVDBulletin{}

// AdvisoryCNVDBulletin struct for AdvisoryCNVDBulletin
type AdvisoryCNVDBulletin struct {
	Cnta *string `json:"cnta,omitempty"`
	Cnvd []string `json:"cnvd,omitempty"`
	Cve []string `json:"cve,omitempty"`
	Date *string `json:"date,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	ReferenceUrls []string `json:"reference_urls,omitempty"`
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryCNVDBulletin instantiates a new AdvisoryCNVDBulletin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCNVDBulletin() *AdvisoryCNVDBulletin {
	this := AdvisoryCNVDBulletin{}
	return &this
}

// NewAdvisoryCNVDBulletinWithDefaults instantiates a new AdvisoryCNVDBulletin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCNVDBulletinWithDefaults() *AdvisoryCNVDBulletin {
	this := AdvisoryCNVDBulletin{}
	return &this
}

// GetCnta returns the Cnta field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetCnta() string {
	if o == nil || IsNil(o.Cnta) {
		var ret string
		return ret
	}
	return *o.Cnta
}

// GetCntaOk returns a tuple with the Cnta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetCntaOk() (*string, bool) {
	if o == nil || IsNil(o.Cnta) {
		return nil, false
	}
	return o.Cnta, true
}

// HasCnta returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasCnta() bool {
	if o != nil && !IsNil(o.Cnta) {
		return true
	}

	return false
}

// SetCnta gets a reference to the given string and assigns it to the Cnta field.
func (o *AdvisoryCNVDBulletin) SetCnta(v string) {
	o.Cnta = &v
}

// GetCnvd returns the Cnvd field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetCnvd() []string {
	if o == nil || IsNil(o.Cnvd) {
		var ret []string
		return ret
	}
	return o.Cnvd
}

// GetCnvdOk returns a tuple with the Cnvd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetCnvdOk() ([]string, bool) {
	if o == nil || IsNil(o.Cnvd) {
		return nil, false
	}
	return o.Cnvd, true
}

// HasCnvd returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasCnvd() bool {
	if o != nil && !IsNil(o.Cnvd) {
		return true
	}

	return false
}

// SetCnvd gets a reference to the given []string and assigns it to the Cnvd field.
func (o *AdvisoryCNVDBulletin) SetCnvd(v []string) {
	o.Cnvd = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCNVDBulletin) SetCve(v []string) {
	o.Cve = v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AdvisoryCNVDBulletin) SetDate(v string) {
	o.Date = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCNVDBulletin) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryCNVDBulletin) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryCNVDBulletin) SetId(v string) {
	o.Id = &v
}

// GetReferenceUrls returns the ReferenceUrls field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetReferenceUrls() []string {
	if o == nil || IsNil(o.ReferenceUrls) {
		var ret []string
		return ret
	}
	return o.ReferenceUrls
}

// GetReferenceUrlsOk returns a tuple with the ReferenceUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetReferenceUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.ReferenceUrls) {
		return nil, false
	}
	return o.ReferenceUrls, true
}

// HasReferenceUrls returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasReferenceUrls() bool {
	if o != nil && !IsNil(o.ReferenceUrls) {
		return true
	}

	return false
}

// SetReferenceUrls gets a reference to the given []string and assigns it to the ReferenceUrls field.
func (o *AdvisoryCNVDBulletin) SetReferenceUrls(v []string) {
	o.ReferenceUrls = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryCNVDBulletin) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryCNVDBulletin) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCNVDBulletin) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryCNVDBulletin) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryCNVDBulletin) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryCNVDBulletin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCNVDBulletin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cnta) {
		toSerialize["cnta"] = o.Cnta
	}
	if !IsNil(o.Cnvd) {
		toSerialize["cnvd"] = o.Cnvd
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ReferenceUrls) {
		toSerialize["reference_urls"] = o.ReferenceUrls
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryCNVDBulletin struct {
	value *AdvisoryCNVDBulletin
	isSet bool
}

func (v NullableAdvisoryCNVDBulletin) Get() *AdvisoryCNVDBulletin {
	return v.value
}

func (v *NullableAdvisoryCNVDBulletin) Set(val *AdvisoryCNVDBulletin) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCNVDBulletin) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCNVDBulletin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCNVDBulletin(val *AdvisoryCNVDBulletin) *NullableAdvisoryCNVDBulletin {
	return &NullableAdvisoryCNVDBulletin{value: val, isSet: true}
}

func (v NullableAdvisoryCNVDBulletin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCNVDBulletin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


