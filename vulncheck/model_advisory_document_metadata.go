/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryDocumentMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryDocumentMetadata{}

// AdvisoryDocumentMetadata struct for AdvisoryDocumentMetadata
type AdvisoryDocumentMetadata struct {
	Category *string `json:"category,omitempty"`
	CsafVersion *string `json:"csaf_version,omitempty"`
	Distribution map[string]interface{} `json:"distribution,omitempty"`
	Lang *string `json:"lang,omitempty"`
	// used by ncsc
	Notes []AdvisoryCSAFNote `json:"notes,omitempty"`
	Publisher *AdvisoryPublisher `json:"publisher,omitempty"`
	References []AdvisoryCSAFReference `json:"references,omitempty"`
	// Aggregate severity is a vehicle that is provided by the document producer to convey the urgency and criticality with which the one or more vulnerabilities reported should be addressed.
	Title *string `json:"title,omitempty"`
	Tracking *AdvisoryTracking `json:"tracking,omitempty"`
}

// NewAdvisoryDocumentMetadata instantiates a new AdvisoryDocumentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryDocumentMetadata() *AdvisoryDocumentMetadata {
	this := AdvisoryDocumentMetadata{}
	return &this
}

// NewAdvisoryDocumentMetadataWithDefaults instantiates a new AdvisoryDocumentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryDocumentMetadataWithDefaults() *AdvisoryDocumentMetadata {
	this := AdvisoryDocumentMetadata{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisoryDocumentMetadata) SetCategory(v string) {
	o.Category = &v
}

// GetCsafVersion returns the CsafVersion field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetCsafVersion() string {
	if o == nil || IsNil(o.CsafVersion) {
		var ret string
		return ret
	}
	return *o.CsafVersion
}

// GetCsafVersionOk returns a tuple with the CsafVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetCsafVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CsafVersion) {
		return nil, false
	}
	return o.CsafVersion, true
}

// HasCsafVersion returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasCsafVersion() bool {
	if o != nil && !IsNil(o.CsafVersion) {
		return true
	}

	return false
}

// SetCsafVersion gets a reference to the given string and assigns it to the CsafVersion field.
func (o *AdvisoryDocumentMetadata) SetCsafVersion(v string) {
	o.CsafVersion = &v
}

// GetDistribution returns the Distribution field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetDistribution() map[string]interface{} {
	if o == nil || IsNil(o.Distribution) {
		var ret map[string]interface{}
		return ret
	}
	return o.Distribution
}

// GetDistributionOk returns a tuple with the Distribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetDistributionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Distribution) {
		return map[string]interface{}{}, false
	}
	return o.Distribution, true
}

// HasDistribution returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasDistribution() bool {
	if o != nil && !IsNil(o.Distribution) {
		return true
	}

	return false
}

// SetDistribution gets a reference to the given map[string]interface{} and assigns it to the Distribution field.
func (o *AdvisoryDocumentMetadata) SetDistribution(v map[string]interface{}) {
	o.Distribution = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *AdvisoryDocumentMetadata) SetLang(v string) {
	o.Lang = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetNotes() []AdvisoryCSAFNote {
	if o == nil || IsNil(o.Notes) {
		var ret []AdvisoryCSAFNote
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetNotesOk() ([]AdvisoryCSAFNote, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []AdvisoryCSAFNote and assigns it to the Notes field.
func (o *AdvisoryDocumentMetadata) SetNotes(v []AdvisoryCSAFNote) {
	o.Notes = v
}

// GetPublisher returns the Publisher field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetPublisher() AdvisoryPublisher {
	if o == nil || IsNil(o.Publisher) {
		var ret AdvisoryPublisher
		return ret
	}
	return *o.Publisher
}

// GetPublisherOk returns a tuple with the Publisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetPublisherOk() (*AdvisoryPublisher, bool) {
	if o == nil || IsNil(o.Publisher) {
		return nil, false
	}
	return o.Publisher, true
}

// HasPublisher returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasPublisher() bool {
	if o != nil && !IsNil(o.Publisher) {
		return true
	}

	return false
}

// SetPublisher gets a reference to the given AdvisoryPublisher and assigns it to the Publisher field.
func (o *AdvisoryDocumentMetadata) SetPublisher(v AdvisoryPublisher) {
	o.Publisher = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetReferences() []AdvisoryCSAFReference {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryCSAFReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetReferencesOk() ([]AdvisoryCSAFReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryCSAFReference and assigns it to the References field.
func (o *AdvisoryDocumentMetadata) SetReferences(v []AdvisoryCSAFReference) {
	o.References = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryDocumentMetadata) SetTitle(v string) {
	o.Title = &v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *AdvisoryDocumentMetadata) GetTracking() AdvisoryTracking {
	if o == nil || IsNil(o.Tracking) {
		var ret AdvisoryTracking
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDocumentMetadata) GetTrackingOk() (*AdvisoryTracking, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *AdvisoryDocumentMetadata) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given AdvisoryTracking and assigns it to the Tracking field.
func (o *AdvisoryDocumentMetadata) SetTracking(v AdvisoryTracking) {
	o.Tracking = &v
}

func (o AdvisoryDocumentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryDocumentMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.CsafVersion) {
		toSerialize["csaf_version"] = o.CsafVersion
	}
	if !IsNil(o.Distribution) {
		toSerialize["distribution"] = o.Distribution
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.Publisher) {
		toSerialize["publisher"] = o.Publisher
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	return toSerialize, nil
}

type NullableAdvisoryDocumentMetadata struct {
	value *AdvisoryDocumentMetadata
	isSet bool
}

func (v NullableAdvisoryDocumentMetadata) Get() *AdvisoryDocumentMetadata {
	return v.value
}

func (v *NullableAdvisoryDocumentMetadata) Set(val *AdvisoryDocumentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryDocumentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryDocumentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryDocumentMetadata(val *AdvisoryDocumentMetadata) *NullableAdvisoryDocumentMetadata {
	return &NullableAdvisoryDocumentMetadata{value: val, isSet: true}
}

func (v NullableAdvisoryDocumentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryDocumentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


