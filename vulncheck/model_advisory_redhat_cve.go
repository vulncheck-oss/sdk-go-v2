/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRedhatCVE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRedhatCVE{}

// AdvisoryRedhatCVE struct for AdvisoryRedhatCVE
type AdvisoryRedhatCVE struct {
	Advisories []string `json:"advisories,omitempty"`
	AdvisoryCsafVexUrl []string `json:"advisory_csaf_vex_url,omitempty"`
	// used for un-marshlling from redhat
	AffectedPackages []string `json:"affected_packages,omitempty"`
	AffectedRelease []AdvisoryAffectedRel `json:"affected_release,omitempty"`
	Bugzilla *string `json:"bugzilla,omitempty"`
	BugzillaDescription *string `json:"bugzilla_description,omitempty"`
	Cve []string `json:"cve,omitempty"`
	CveCsafVexUrl *string `json:"cve_csaf_vex_url,omitempty"`
	Cvss3Score *string `json:"cvss3_score,omitempty"`
	Cvss3ScoringVector *string `json:"cvss3_scoring_vector,omitempty"`
	CvssScore *float32 `json:"cvss_score,omitempty"`
	CvssScoringVector *string `json:"cvss_scoring_vector,omitempty"`
	Cwe *string `json:"cwe,omitempty"`
	PackageState []AdvisoryPackageStat `json:"package_state,omitempty"`
	// used to index into vulncheck OS
	Packages []AdvisoryVulnCheckPackage `json:"packages,omitempty"`
	PublicDate *string `json:"public_date,omitempty"`
	ResourceUrl *string `json:"resource_url,omitempty"`
	Severity *string `json:"severity,omitempty"`
}

// NewAdvisoryRedhatCVE instantiates a new AdvisoryRedhatCVE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRedhatCVE() *AdvisoryRedhatCVE {
	this := AdvisoryRedhatCVE{}
	return &this
}

// NewAdvisoryRedhatCVEWithDefaults instantiates a new AdvisoryRedhatCVE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRedhatCVEWithDefaults() *AdvisoryRedhatCVE {
	this := AdvisoryRedhatCVE{}
	return &this
}

// GetAdvisories returns the Advisories field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetAdvisories() []string {
	if o == nil || IsNil(o.Advisories) {
		var ret []string
		return ret
	}
	return o.Advisories
}

// GetAdvisoriesOk returns a tuple with the Advisories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetAdvisoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Advisories) {
		return nil, false
	}
	return o.Advisories, true
}

// HasAdvisories returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasAdvisories() bool {
	if o != nil && !IsNil(o.Advisories) {
		return true
	}

	return false
}

// SetAdvisories gets a reference to the given []string and assigns it to the Advisories field.
func (o *AdvisoryRedhatCVE) SetAdvisories(v []string) {
	o.Advisories = v
}

// GetAdvisoryCsafVexUrl returns the AdvisoryCsafVexUrl field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetAdvisoryCsafVexUrl() []string {
	if o == nil || IsNil(o.AdvisoryCsafVexUrl) {
		var ret []string
		return ret
	}
	return o.AdvisoryCsafVexUrl
}

// GetAdvisoryCsafVexUrlOk returns a tuple with the AdvisoryCsafVexUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetAdvisoryCsafVexUrlOk() ([]string, bool) {
	if o == nil || IsNil(o.AdvisoryCsafVexUrl) {
		return nil, false
	}
	return o.AdvisoryCsafVexUrl, true
}

// HasAdvisoryCsafVexUrl returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasAdvisoryCsafVexUrl() bool {
	if o != nil && !IsNil(o.AdvisoryCsafVexUrl) {
		return true
	}

	return false
}

// SetAdvisoryCsafVexUrl gets a reference to the given []string and assigns it to the AdvisoryCsafVexUrl field.
func (o *AdvisoryRedhatCVE) SetAdvisoryCsafVexUrl(v []string) {
	o.AdvisoryCsafVexUrl = v
}

// GetAffectedPackages returns the AffectedPackages field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetAffectedPackages() []string {
	if o == nil || IsNil(o.AffectedPackages) {
		var ret []string
		return ret
	}
	return o.AffectedPackages
}

// GetAffectedPackagesOk returns a tuple with the AffectedPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetAffectedPackagesOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedPackages) {
		return nil, false
	}
	return o.AffectedPackages, true
}

// HasAffectedPackages returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasAffectedPackages() bool {
	if o != nil && !IsNil(o.AffectedPackages) {
		return true
	}

	return false
}

// SetAffectedPackages gets a reference to the given []string and assigns it to the AffectedPackages field.
func (o *AdvisoryRedhatCVE) SetAffectedPackages(v []string) {
	o.AffectedPackages = v
}

// GetAffectedRelease returns the AffectedRelease field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetAffectedRelease() []AdvisoryAffectedRel {
	if o == nil || IsNil(o.AffectedRelease) {
		var ret []AdvisoryAffectedRel
		return ret
	}
	return o.AffectedRelease
}

// GetAffectedReleaseOk returns a tuple with the AffectedRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetAffectedReleaseOk() ([]AdvisoryAffectedRel, bool) {
	if o == nil || IsNil(o.AffectedRelease) {
		return nil, false
	}
	return o.AffectedRelease, true
}

// HasAffectedRelease returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasAffectedRelease() bool {
	if o != nil && !IsNil(o.AffectedRelease) {
		return true
	}

	return false
}

// SetAffectedRelease gets a reference to the given []AdvisoryAffectedRel and assigns it to the AffectedRelease field.
func (o *AdvisoryRedhatCVE) SetAffectedRelease(v []AdvisoryAffectedRel) {
	o.AffectedRelease = v
}

// GetBugzilla returns the Bugzilla field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetBugzilla() string {
	if o == nil || IsNil(o.Bugzilla) {
		var ret string
		return ret
	}
	return *o.Bugzilla
}

// GetBugzillaOk returns a tuple with the Bugzilla field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetBugzillaOk() (*string, bool) {
	if o == nil || IsNil(o.Bugzilla) {
		return nil, false
	}
	return o.Bugzilla, true
}

// HasBugzilla returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasBugzilla() bool {
	if o != nil && !IsNil(o.Bugzilla) {
		return true
	}

	return false
}

// SetBugzilla gets a reference to the given string and assigns it to the Bugzilla field.
func (o *AdvisoryRedhatCVE) SetBugzilla(v string) {
	o.Bugzilla = &v
}

// GetBugzillaDescription returns the BugzillaDescription field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetBugzillaDescription() string {
	if o == nil || IsNil(o.BugzillaDescription) {
		var ret string
		return ret
	}
	return *o.BugzillaDescription
}

// GetBugzillaDescriptionOk returns a tuple with the BugzillaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetBugzillaDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.BugzillaDescription) {
		return nil, false
	}
	return o.BugzillaDescription, true
}

// HasBugzillaDescription returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasBugzillaDescription() bool {
	if o != nil && !IsNil(o.BugzillaDescription) {
		return true
	}

	return false
}

// SetBugzillaDescription gets a reference to the given string and assigns it to the BugzillaDescription field.
func (o *AdvisoryRedhatCVE) SetBugzillaDescription(v string) {
	o.BugzillaDescription = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryRedhatCVE) SetCve(v []string) {
	o.Cve = v
}

// GetCveCsafVexUrl returns the CveCsafVexUrl field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCveCsafVexUrl() string {
	if o == nil || IsNil(o.CveCsafVexUrl) {
		var ret string
		return ret
	}
	return *o.CveCsafVexUrl
}

// GetCveCsafVexUrlOk returns a tuple with the CveCsafVexUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCveCsafVexUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CveCsafVexUrl) {
		return nil, false
	}
	return o.CveCsafVexUrl, true
}

// HasCveCsafVexUrl returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCveCsafVexUrl() bool {
	if o != nil && !IsNil(o.CveCsafVexUrl) {
		return true
	}

	return false
}

// SetCveCsafVexUrl gets a reference to the given string and assigns it to the CveCsafVexUrl field.
func (o *AdvisoryRedhatCVE) SetCveCsafVexUrl(v string) {
	o.CveCsafVexUrl = &v
}

// GetCvss3Score returns the Cvss3Score field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCvss3Score() string {
	if o == nil || IsNil(o.Cvss3Score) {
		var ret string
		return ret
	}
	return *o.Cvss3Score
}

// GetCvss3ScoreOk returns a tuple with the Cvss3Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCvss3ScoreOk() (*string, bool) {
	if o == nil || IsNil(o.Cvss3Score) {
		return nil, false
	}
	return o.Cvss3Score, true
}

// HasCvss3Score returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCvss3Score() bool {
	if o != nil && !IsNil(o.Cvss3Score) {
		return true
	}

	return false
}

// SetCvss3Score gets a reference to the given string and assigns it to the Cvss3Score field.
func (o *AdvisoryRedhatCVE) SetCvss3Score(v string) {
	o.Cvss3Score = &v
}

// GetCvss3ScoringVector returns the Cvss3ScoringVector field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCvss3ScoringVector() string {
	if o == nil || IsNil(o.Cvss3ScoringVector) {
		var ret string
		return ret
	}
	return *o.Cvss3ScoringVector
}

// GetCvss3ScoringVectorOk returns a tuple with the Cvss3ScoringVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCvss3ScoringVectorOk() (*string, bool) {
	if o == nil || IsNil(o.Cvss3ScoringVector) {
		return nil, false
	}
	return o.Cvss3ScoringVector, true
}

// HasCvss3ScoringVector returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCvss3ScoringVector() bool {
	if o != nil && !IsNil(o.Cvss3ScoringVector) {
		return true
	}

	return false
}

// SetCvss3ScoringVector gets a reference to the given string and assigns it to the Cvss3ScoringVector field.
func (o *AdvisoryRedhatCVE) SetCvss3ScoringVector(v string) {
	o.Cvss3ScoringVector = &v
}

// GetCvssScore returns the CvssScore field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCvssScore() float32 {
	if o == nil || IsNil(o.CvssScore) {
		var ret float32
		return ret
	}
	return *o.CvssScore
}

// GetCvssScoreOk returns a tuple with the CvssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCvssScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.CvssScore) {
		return nil, false
	}
	return o.CvssScore, true
}

// HasCvssScore returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCvssScore() bool {
	if o != nil && !IsNil(o.CvssScore) {
		return true
	}

	return false
}

// SetCvssScore gets a reference to the given float32 and assigns it to the CvssScore field.
func (o *AdvisoryRedhatCVE) SetCvssScore(v float32) {
	o.CvssScore = &v
}

// GetCvssScoringVector returns the CvssScoringVector field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCvssScoringVector() string {
	if o == nil || IsNil(o.CvssScoringVector) {
		var ret string
		return ret
	}
	return *o.CvssScoringVector
}

// GetCvssScoringVectorOk returns a tuple with the CvssScoringVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCvssScoringVectorOk() (*string, bool) {
	if o == nil || IsNil(o.CvssScoringVector) {
		return nil, false
	}
	return o.CvssScoringVector, true
}

// HasCvssScoringVector returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCvssScoringVector() bool {
	if o != nil && !IsNil(o.CvssScoringVector) {
		return true
	}

	return false
}

// SetCvssScoringVector gets a reference to the given string and assigns it to the CvssScoringVector field.
func (o *AdvisoryRedhatCVE) SetCvssScoringVector(v string) {
	o.CvssScoringVector = &v
}

// GetCwe returns the Cwe field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetCwe() string {
	if o == nil || IsNil(o.Cwe) {
		var ret string
		return ret
	}
	return *o.Cwe
}

// GetCweOk returns a tuple with the Cwe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetCweOk() (*string, bool) {
	if o == nil || IsNil(o.Cwe) {
		return nil, false
	}
	return o.Cwe, true
}

// HasCwe returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasCwe() bool {
	if o != nil && !IsNil(o.Cwe) {
		return true
	}

	return false
}

// SetCwe gets a reference to the given string and assigns it to the Cwe field.
func (o *AdvisoryRedhatCVE) SetCwe(v string) {
	o.Cwe = &v
}

// GetPackageState returns the PackageState field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetPackageState() []AdvisoryPackageStat {
	if o == nil || IsNil(o.PackageState) {
		var ret []AdvisoryPackageStat
		return ret
	}
	return o.PackageState
}

// GetPackageStateOk returns a tuple with the PackageState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetPackageStateOk() ([]AdvisoryPackageStat, bool) {
	if o == nil || IsNil(o.PackageState) {
		return nil, false
	}
	return o.PackageState, true
}

// HasPackageState returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasPackageState() bool {
	if o != nil && !IsNil(o.PackageState) {
		return true
	}

	return false
}

// SetPackageState gets a reference to the given []AdvisoryPackageStat and assigns it to the PackageState field.
func (o *AdvisoryRedhatCVE) SetPackageState(v []AdvisoryPackageStat) {
	o.PackageState = v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetPackages() []AdvisoryVulnCheckPackage {
	if o == nil || IsNil(o.Packages) {
		var ret []AdvisoryVulnCheckPackage
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetPackagesOk() ([]AdvisoryVulnCheckPackage, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []AdvisoryVulnCheckPackage and assigns it to the Packages field.
func (o *AdvisoryRedhatCVE) SetPackages(v []AdvisoryVulnCheckPackage) {
	o.Packages = v
}

// GetPublicDate returns the PublicDate field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetPublicDate() string {
	if o == nil || IsNil(o.PublicDate) {
		var ret string
		return ret
	}
	return *o.PublicDate
}

// GetPublicDateOk returns a tuple with the PublicDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetPublicDateOk() (*string, bool) {
	if o == nil || IsNil(o.PublicDate) {
		return nil, false
	}
	return o.PublicDate, true
}

// HasPublicDate returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasPublicDate() bool {
	if o != nil && !IsNil(o.PublicDate) {
		return true
	}

	return false
}

// SetPublicDate gets a reference to the given string and assigns it to the PublicDate field.
func (o *AdvisoryRedhatCVE) SetPublicDate(v string) {
	o.PublicDate = &v
}

// GetResourceUrl returns the ResourceUrl field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetResourceUrl() string {
	if o == nil || IsNil(o.ResourceUrl) {
		var ret string
		return ret
	}
	return *o.ResourceUrl
}

// GetResourceUrlOk returns a tuple with the ResourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetResourceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUrl) {
		return nil, false
	}
	return o.ResourceUrl, true
}

// HasResourceUrl returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasResourceUrl() bool {
	if o != nil && !IsNil(o.ResourceUrl) {
		return true
	}

	return false
}

// SetResourceUrl gets a reference to the given string and assigns it to the ResourceUrl field.
func (o *AdvisoryRedhatCVE) SetResourceUrl(v string) {
	o.ResourceUrl = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryRedhatCVE) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRedhatCVE) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryRedhatCVE) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryRedhatCVE) SetSeverity(v string) {
	o.Severity = &v
}

func (o AdvisoryRedhatCVE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRedhatCVE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Advisories) {
		toSerialize["advisories"] = o.Advisories
	}
	if !IsNil(o.AdvisoryCsafVexUrl) {
		toSerialize["advisory_csaf_vex_url"] = o.AdvisoryCsafVexUrl
	}
	if !IsNil(o.AffectedPackages) {
		toSerialize["affected_packages"] = o.AffectedPackages
	}
	if !IsNil(o.AffectedRelease) {
		toSerialize["affected_release"] = o.AffectedRelease
	}
	if !IsNil(o.Bugzilla) {
		toSerialize["bugzilla"] = o.Bugzilla
	}
	if !IsNil(o.BugzillaDescription) {
		toSerialize["bugzilla_description"] = o.BugzillaDescription
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CveCsafVexUrl) {
		toSerialize["cve_csaf_vex_url"] = o.CveCsafVexUrl
	}
	if !IsNil(o.Cvss3Score) {
		toSerialize["cvss3_score"] = o.Cvss3Score
	}
	if !IsNil(o.Cvss3ScoringVector) {
		toSerialize["cvss3_scoring_vector"] = o.Cvss3ScoringVector
	}
	if !IsNil(o.CvssScore) {
		toSerialize["cvss_score"] = o.CvssScore
	}
	if !IsNil(o.CvssScoringVector) {
		toSerialize["cvss_scoring_vector"] = o.CvssScoringVector
	}
	if !IsNil(o.Cwe) {
		toSerialize["cwe"] = o.Cwe
	}
	if !IsNil(o.PackageState) {
		toSerialize["package_state"] = o.PackageState
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.PublicDate) {
		toSerialize["public_date"] = o.PublicDate
	}
	if !IsNil(o.ResourceUrl) {
		toSerialize["resource_url"] = o.ResourceUrl
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullableAdvisoryRedhatCVE struct {
	value *AdvisoryRedhatCVE
	isSet bool
}

func (v NullableAdvisoryRedhatCVE) Get() *AdvisoryRedhatCVE {
	return v.value
}

func (v *NullableAdvisoryRedhatCVE) Set(val *AdvisoryRedhatCVE) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRedhatCVE) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRedhatCVE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRedhatCVE(val *AdvisoryRedhatCVE) *NullableAdvisoryRedhatCVE {
	return &NullableAdvisoryRedhatCVE{value: val, isSet: true}
}

func (v NullableAdvisoryRedhatCVE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRedhatCVE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


