/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryDell type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryDell{}

// AdvisoryDell struct for AdvisoryDell
type AdvisoryDell struct {
	ArticleNumber *string `json:"articleNumber,omitempty"`
	CombinedProductList *string `json:"combinedProductList,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DellCves []AdvisoryDellCVE `json:"dell_cves,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryDell instantiates a new AdvisoryDell object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryDell() *AdvisoryDell {
	this := AdvisoryDell{}
	return &this
}

// NewAdvisoryDellWithDefaults instantiates a new AdvisoryDell object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryDellWithDefaults() *AdvisoryDell {
	this := AdvisoryDell{}
	return &this
}

// GetArticleNumber returns the ArticleNumber field value if set, zero value otherwise.
func (o *AdvisoryDell) GetArticleNumber() string {
	if o == nil || IsNil(o.ArticleNumber) {
		var ret string
		return ret
	}
	return *o.ArticleNumber
}

// GetArticleNumberOk returns a tuple with the ArticleNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetArticleNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleNumber) {
		return nil, false
	}
	return o.ArticleNumber, true
}

// HasArticleNumber returns a boolean if a field has been set.
func (o *AdvisoryDell) HasArticleNumber() bool {
	if o != nil && !IsNil(o.ArticleNumber) {
		return true
	}

	return false
}

// SetArticleNumber gets a reference to the given string and assigns it to the ArticleNumber field.
func (o *AdvisoryDell) SetArticleNumber(v string) {
	o.ArticleNumber = &v
}

// GetCombinedProductList returns the CombinedProductList field value if set, zero value otherwise.
func (o *AdvisoryDell) GetCombinedProductList() string {
	if o == nil || IsNil(o.CombinedProductList) {
		var ret string
		return ret
	}
	return *o.CombinedProductList
}

// GetCombinedProductListOk returns a tuple with the CombinedProductList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetCombinedProductListOk() (*string, bool) {
	if o == nil || IsNil(o.CombinedProductList) {
		return nil, false
	}
	return o.CombinedProductList, true
}

// HasCombinedProductList returns a boolean if a field has been set.
func (o *AdvisoryDell) HasCombinedProductList() bool {
	if o != nil && !IsNil(o.CombinedProductList) {
		return true
	}

	return false
}

// SetCombinedProductList gets a reference to the given string and assigns it to the CombinedProductList field.
func (o *AdvisoryDell) SetCombinedProductList(v string) {
	o.CombinedProductList = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryDell) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryDell) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryDell) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryDell) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryDell) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryDell) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDellCves returns the DellCves field value if set, zero value otherwise.
func (o *AdvisoryDell) GetDellCves() []AdvisoryDellCVE {
	if o == nil || IsNil(o.DellCves) {
		var ret []AdvisoryDellCVE
		return ret
	}
	return o.DellCves
}

// GetDellCvesOk returns a tuple with the DellCves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetDellCvesOk() ([]AdvisoryDellCVE, bool) {
	if o == nil || IsNil(o.DellCves) {
		return nil, false
	}
	return o.DellCves, true
}

// HasDellCves returns a boolean if a field has been set.
func (o *AdvisoryDell) HasDellCves() bool {
	if o != nil && !IsNil(o.DellCves) {
		return true
	}

	return false
}

// SetDellCves gets a reference to the given []AdvisoryDellCVE and assigns it to the DellCves field.
func (o *AdvisoryDell) SetDellCves(v []AdvisoryDellCVE) {
	o.DellCves = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryDell) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryDell) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryDell) SetSeverity(v string) {
	o.Severity = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryDell) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryDell) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryDell) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryDell) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryDell) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryDell) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryDell) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryDell) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryDell) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryDell) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryDell) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryDell) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArticleNumber) {
		toSerialize["articleNumber"] = o.ArticleNumber
	}
	if !IsNil(o.CombinedProductList) {
		toSerialize["combinedProductList"] = o.CombinedProductList
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DellCves) {
		toSerialize["dell_cves"] = o.DellCves
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryDell struct {
	value *AdvisoryDell
	isSet bool
}

func (v NullableAdvisoryDell) Get() *AdvisoryDell {
	return v.value
}

func (v *NullableAdvisoryDell) Set(val *AdvisoryDell) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryDell) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryDell) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryDell(val *AdvisoryDell) *NullableAdvisoryDell {
	return &NullableAdvisoryDell{value: val, isSet: true}
}

func (v NullableAdvisoryDell) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryDell) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


