/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensGenerator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensGenerator{}

// AdvisorySiemensGenerator struct for AdvisorySiemensGenerator
type AdvisorySiemensGenerator struct {
	Engine *AdvisorySiemensEngine `json:"engine,omitempty"`
}

// NewAdvisorySiemensGenerator instantiates a new AdvisorySiemensGenerator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensGenerator() *AdvisorySiemensGenerator {
	this := AdvisorySiemensGenerator{}
	return &this
}

// NewAdvisorySiemensGeneratorWithDefaults instantiates a new AdvisorySiemensGenerator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensGeneratorWithDefaults() *AdvisorySiemensGenerator {
	this := AdvisorySiemensGenerator{}
	return &this
}

// GetEngine returns the Engine field value if set, zero value otherwise.
func (o *AdvisorySiemensGenerator) GetEngine() AdvisorySiemensEngine {
	if o == nil || IsNil(o.Engine) {
		var ret AdvisorySiemensEngine
		return ret
	}
	return *o.Engine
}

// GetEngineOk returns a tuple with the Engine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensGenerator) GetEngineOk() (*AdvisorySiemensEngine, bool) {
	if o == nil || IsNil(o.Engine) {
		return nil, false
	}
	return o.Engine, true
}

// HasEngine returns a boolean if a field has been set.
func (o *AdvisorySiemensGenerator) HasEngine() bool {
	if o != nil && !IsNil(o.Engine) {
		return true
	}

	return false
}

// SetEngine gets a reference to the given AdvisorySiemensEngine and assigns it to the Engine field.
func (o *AdvisorySiemensGenerator) SetEngine(v AdvisorySiemensEngine) {
	o.Engine = &v
}

func (o AdvisorySiemensGenerator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensGenerator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Engine) {
		toSerialize["engine"] = o.Engine
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensGenerator struct {
	value *AdvisorySiemensGenerator
	isSet bool
}

func (v NullableAdvisorySiemensGenerator) Get() *AdvisorySiemensGenerator {
	return v.value
}

func (v *NullableAdvisorySiemensGenerator) Set(val *AdvisorySiemensGenerator) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensGenerator) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensGenerator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensGenerator(val *AdvisorySiemensGenerator) *NullableAdvisorySiemensGenerator {
	return &NullableAdvisorySiemensGenerator{value: val, isSet: true}
}

func (v NullableAdvisorySiemensGenerator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensGenerator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


