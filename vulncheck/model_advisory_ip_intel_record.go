/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryIpIntelRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryIpIntelRecord{}

// AdvisoryIpIntelRecord struct for AdvisoryIpIntelRecord
type AdvisoryIpIntelRecord struct {
	Asn *string `json:"asn,omitempty"`
	City *string `json:"city,omitempty"`
	Country *string `json:"country,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	Cve []string `json:"cve,omitempty"`
	FeedIds []string `json:"feed_ids,omitempty"`
	Hostnames []string `json:"hostnames,omitempty"`
	Ip *string `json:"ip,omitempty"`
	LastSeen *string `json:"lastSeen,omitempty"`
	Matches []string `json:"matches,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Ssl *bool `json:"ssl,omitempty"`
	Type *AdvisoryRecordType `json:"type,omitempty"`
}

// NewAdvisoryIpIntelRecord instantiates a new AdvisoryIpIntelRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryIpIntelRecord() *AdvisoryIpIntelRecord {
	this := AdvisoryIpIntelRecord{}
	return &this
}

// NewAdvisoryIpIntelRecordWithDefaults instantiates a new AdvisoryIpIntelRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryIpIntelRecordWithDefaults() *AdvisoryIpIntelRecord {
	this := AdvisoryIpIntelRecord{}
	return &this
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetAsn() string {
	if o == nil || IsNil(o.Asn) {
		var ret string
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetAsnOk() (*string, bool) {
	if o == nil || IsNil(o.Asn) {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasAsn() bool {
	if o != nil && !IsNil(o.Asn) {
		return true
	}

	return false
}

// SetAsn gets a reference to the given string and assigns it to the Asn field.
func (o *AdvisoryIpIntelRecord) SetAsn(v string) {
	o.Asn = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *AdvisoryIpIntelRecord) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AdvisoryIpIntelRecord) SetCountry(v string) {
	o.Country = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *AdvisoryIpIntelRecord) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryIpIntelRecord) SetCve(v []string) {
	o.Cve = v
}

// GetFeedIds returns the FeedIds field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetFeedIds() []string {
	if o == nil || IsNil(o.FeedIds) {
		var ret []string
		return ret
	}
	return o.FeedIds
}

// GetFeedIdsOk returns a tuple with the FeedIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetFeedIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FeedIds) {
		return nil, false
	}
	return o.FeedIds, true
}

// HasFeedIds returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasFeedIds() bool {
	if o != nil && !IsNil(o.FeedIds) {
		return true
	}

	return false
}

// SetFeedIds gets a reference to the given []string and assigns it to the FeedIds field.
func (o *AdvisoryIpIntelRecord) SetFeedIds(v []string) {
	o.FeedIds = v
}

// GetHostnames returns the Hostnames field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetHostnames() []string {
	if o == nil || IsNil(o.Hostnames) {
		var ret []string
		return ret
	}
	return o.Hostnames
}

// GetHostnamesOk returns a tuple with the Hostnames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetHostnamesOk() ([]string, bool) {
	if o == nil || IsNil(o.Hostnames) {
		return nil, false
	}
	return o.Hostnames, true
}

// HasHostnames returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasHostnames() bool {
	if o != nil && !IsNil(o.Hostnames) {
		return true
	}

	return false
}

// SetHostnames gets a reference to the given []string and assigns it to the Hostnames field.
func (o *AdvisoryIpIntelRecord) SetHostnames(v []string) {
	o.Hostnames = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *AdvisoryIpIntelRecord) SetIp(v string) {
	o.Ip = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetLastSeen() string {
	if o == nil || IsNil(o.LastSeen) {
		var ret string
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetLastSeenOk() (*string, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given string and assigns it to the LastSeen field.
func (o *AdvisoryIpIntelRecord) SetLastSeen(v string) {
	o.LastSeen = &v
}

// GetMatches returns the Matches field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetMatches() []string {
	if o == nil || IsNil(o.Matches) {
		var ret []string
		return ret
	}
	return o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetMatchesOk() ([]string, bool) {
	if o == nil || IsNil(o.Matches) {
		return nil, false
	}
	return o.Matches, true
}

// HasMatches returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasMatches() bool {
	if o != nil && !IsNil(o.Matches) {
		return true
	}

	return false
}

// SetMatches gets a reference to the given []string and assigns it to the Matches field.
func (o *AdvisoryIpIntelRecord) SetMatches(v []string) {
	o.Matches = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *AdvisoryIpIntelRecord) SetPort(v int32) {
	o.Port = &v
}

// GetSsl returns the Ssl field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetSsl() bool {
	if o == nil || IsNil(o.Ssl) {
		var ret bool
		return ret
	}
	return *o.Ssl
}

// GetSslOk returns a tuple with the Ssl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetSslOk() (*bool, bool) {
	if o == nil || IsNil(o.Ssl) {
		return nil, false
	}
	return o.Ssl, true
}

// HasSsl returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasSsl() bool {
	if o != nil && !IsNil(o.Ssl) {
		return true
	}

	return false
}

// SetSsl gets a reference to the given bool and assigns it to the Ssl field.
func (o *AdvisoryIpIntelRecord) SetSsl(v bool) {
	o.Ssl = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryIpIntelRecord) GetType() AdvisoryRecordType {
	if o == nil || IsNil(o.Type) {
		var ret AdvisoryRecordType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIpIntelRecord) GetTypeOk() (*AdvisoryRecordType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryIpIntelRecord) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AdvisoryRecordType and assigns it to the Type field.
func (o *AdvisoryIpIntelRecord) SetType(v AdvisoryRecordType) {
	o.Type = &v
}

func (o AdvisoryIpIntelRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryIpIntelRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asn) {
		toSerialize["asn"] = o.Asn
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.FeedIds) {
		toSerialize["feed_ids"] = o.FeedIds
	}
	if !IsNil(o.Hostnames) {
		toSerialize["hostnames"] = o.Hostnames
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.LastSeen) {
		toSerialize["lastSeen"] = o.LastSeen
	}
	if !IsNil(o.Matches) {
		toSerialize["matches"] = o.Matches
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Ssl) {
		toSerialize["ssl"] = o.Ssl
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisoryIpIntelRecord struct {
	value *AdvisoryIpIntelRecord
	isSet bool
}

func (v NullableAdvisoryIpIntelRecord) Get() *AdvisoryIpIntelRecord {
	return v.value
}

func (v *NullableAdvisoryIpIntelRecord) Set(val *AdvisoryIpIntelRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryIpIntelRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryIpIntelRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryIpIntelRecord(val *AdvisoryIpIntelRecord) *NullableAdvisoryIpIntelRecord {
	return &NullableAdvisoryIpIntelRecord{value: val, isSet: true}
}

func (v NullableAdvisoryIpIntelRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryIpIntelRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


