/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRScoreSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRScoreSet{}

// AdvisoryRScoreSet struct for AdvisoryRScoreSet
type AdvisoryRScoreSet struct {
	BaseScore *string `json:"base_score,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	TemporalScore *string `json:"temporal_score,omitempty"`
	Vector *string `json:"vector,omitempty"`
}

// NewAdvisoryRScoreSet instantiates a new AdvisoryRScoreSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRScoreSet() *AdvisoryRScoreSet {
	this := AdvisoryRScoreSet{}
	return &this
}

// NewAdvisoryRScoreSetWithDefaults instantiates a new AdvisoryRScoreSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRScoreSetWithDefaults() *AdvisoryRScoreSet {
	this := AdvisoryRScoreSet{}
	return &this
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *AdvisoryRScoreSet) GetBaseScore() string {
	if o == nil || IsNil(o.BaseScore) {
		var ret string
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRScoreSet) GetBaseScoreOk() (*string, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *AdvisoryRScoreSet) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given string and assigns it to the BaseScore field.
func (o *AdvisoryRScoreSet) SetBaseScore(v string) {
	o.BaseScore = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *AdvisoryRScoreSet) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRScoreSet) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *AdvisoryRScoreSet) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *AdvisoryRScoreSet) SetProductId(v string) {
	o.ProductId = &v
}

// GetTemporalScore returns the TemporalScore field value if set, zero value otherwise.
func (o *AdvisoryRScoreSet) GetTemporalScore() string {
	if o == nil || IsNil(o.TemporalScore) {
		var ret string
		return ret
	}
	return *o.TemporalScore
}

// GetTemporalScoreOk returns a tuple with the TemporalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRScoreSet) GetTemporalScoreOk() (*string, bool) {
	if o == nil || IsNil(o.TemporalScore) {
		return nil, false
	}
	return o.TemporalScore, true
}

// HasTemporalScore returns a boolean if a field has been set.
func (o *AdvisoryRScoreSet) HasTemporalScore() bool {
	if o != nil && !IsNil(o.TemporalScore) {
		return true
	}

	return false
}

// SetTemporalScore gets a reference to the given string and assigns it to the TemporalScore field.
func (o *AdvisoryRScoreSet) SetTemporalScore(v string) {
	o.TemporalScore = &v
}

// GetVector returns the Vector field value if set, zero value otherwise.
func (o *AdvisoryRScoreSet) GetVector() string {
	if o == nil || IsNil(o.Vector) {
		var ret string
		return ret
	}
	return *o.Vector
}

// GetVectorOk returns a tuple with the Vector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRScoreSet) GetVectorOk() (*string, bool) {
	if o == nil || IsNil(o.Vector) {
		return nil, false
	}
	return o.Vector, true
}

// HasVector returns a boolean if a field has been set.
func (o *AdvisoryRScoreSet) HasVector() bool {
	if o != nil && !IsNil(o.Vector) {
		return true
	}

	return false
}

// SetVector gets a reference to the given string and assigns it to the Vector field.
func (o *AdvisoryRScoreSet) SetVector(v string) {
	o.Vector = &v
}

func (o AdvisoryRScoreSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRScoreSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseScore) {
		toSerialize["base_score"] = o.BaseScore
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.TemporalScore) {
		toSerialize["temporal_score"] = o.TemporalScore
	}
	if !IsNil(o.Vector) {
		toSerialize["vector"] = o.Vector
	}
	return toSerialize, nil
}

type NullableAdvisoryRScoreSet struct {
	value *AdvisoryRScoreSet
	isSet bool
}

func (v NullableAdvisoryRScoreSet) Get() *AdvisoryRScoreSet {
	return v.value
}

func (v *NullableAdvisoryRScoreSet) Set(val *AdvisoryRScoreSet) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRScoreSet) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRScoreSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRScoreSet(val *AdvisoryRScoreSet) *NullableAdvisoryRScoreSet {
	return &NullableAdvisoryRScoreSet{value: val, isSet: true}
}

func (v NullableAdvisoryRScoreSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRScoreSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


