/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryImpact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryImpact{}

// AdvisoryImpact struct for AdvisoryImpact
type AdvisoryImpact struct {
	CapecId *string `json:"capecId,omitempty"`
	Descriptions []AdvisoryMDescriptions `json:"descriptions,omitempty"`
}

// NewAdvisoryImpact instantiates a new AdvisoryImpact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryImpact() *AdvisoryImpact {
	this := AdvisoryImpact{}
	return &this
}

// NewAdvisoryImpactWithDefaults instantiates a new AdvisoryImpact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryImpactWithDefaults() *AdvisoryImpact {
	this := AdvisoryImpact{}
	return &this
}

// GetCapecId returns the CapecId field value if set, zero value otherwise.
func (o *AdvisoryImpact) GetCapecId() string {
	if o == nil || IsNil(o.CapecId) {
		var ret string
		return ret
	}
	return *o.CapecId
}

// GetCapecIdOk returns a tuple with the CapecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryImpact) GetCapecIdOk() (*string, bool) {
	if o == nil || IsNil(o.CapecId) {
		return nil, false
	}
	return o.CapecId, true
}

// HasCapecId returns a boolean if a field has been set.
func (o *AdvisoryImpact) HasCapecId() bool {
	if o != nil && !IsNil(o.CapecId) {
		return true
	}

	return false
}

// SetCapecId gets a reference to the given string and assigns it to the CapecId field.
func (o *AdvisoryImpact) SetCapecId(v string) {
	o.CapecId = &v
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *AdvisoryImpact) GetDescriptions() []AdvisoryMDescriptions {
	if o == nil || IsNil(o.Descriptions) {
		var ret []AdvisoryMDescriptions
		return ret
	}
	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryImpact) GetDescriptionsOk() ([]AdvisoryMDescriptions, bool) {
	if o == nil || IsNil(o.Descriptions) {
		return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *AdvisoryImpact) HasDescriptions() bool {
	if o != nil && !IsNil(o.Descriptions) {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []AdvisoryMDescriptions and assigns it to the Descriptions field.
func (o *AdvisoryImpact) SetDescriptions(v []AdvisoryMDescriptions) {
	o.Descriptions = v
}

func (o AdvisoryImpact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryImpact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CapecId) {
		toSerialize["capecId"] = o.CapecId
	}
	if !IsNil(o.Descriptions) {
		toSerialize["descriptions"] = o.Descriptions
	}
	return toSerialize, nil
}

type NullableAdvisoryImpact struct {
	value *AdvisoryImpact
	isSet bool
}

func (v NullableAdvisoryImpact) Get() *AdvisoryImpact {
	return v.value
}

func (v *NullableAdvisoryImpact) Set(val *AdvisoryImpact) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryImpact) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryImpact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryImpact(val *AdvisoryImpact) *NullableAdvisoryImpact {
	return &NullableAdvisoryImpact{value: val, isSet: true}
}

func (v NullableAdvisoryImpact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryImpact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


