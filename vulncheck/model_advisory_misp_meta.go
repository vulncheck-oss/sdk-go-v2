/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMispMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMispMeta{}

// AdvisoryMispMeta struct for AdvisoryMispMeta
type AdvisoryMispMeta struct {
	AttributionConfidence *string `json:"attribution-confidence,omitempty"`
	CfrSuspectedStateSponsor *string `json:"cfr-suspected-state-sponsor,omitempty"`
	CfrSuspectedVictims []string `json:"cfr-suspected-victims,omitempty"`
	CfrTargetCategory []string `json:"cfr-target-category,omitempty"`
	CfrTypeOfIncident []string `json:"cfr-type-of-incident,omitempty"`
	Country *string `json:"country,omitempty"`
	Refs []string `json:"refs,omitempty"`
	Synonyms []string `json:"synonyms,omitempty"`
}

// NewAdvisoryMispMeta instantiates a new AdvisoryMispMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMispMeta() *AdvisoryMispMeta {
	this := AdvisoryMispMeta{}
	return &this
}

// NewAdvisoryMispMetaWithDefaults instantiates a new AdvisoryMispMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMispMetaWithDefaults() *AdvisoryMispMeta {
	this := AdvisoryMispMeta{}
	return &this
}

// GetAttributionConfidence returns the AttributionConfidence field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetAttributionConfidence() string {
	if o == nil || IsNil(o.AttributionConfidence) {
		var ret string
		return ret
	}
	return *o.AttributionConfidence
}

// GetAttributionConfidenceOk returns a tuple with the AttributionConfidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetAttributionConfidenceOk() (*string, bool) {
	if o == nil || IsNil(o.AttributionConfidence) {
		return nil, false
	}
	return o.AttributionConfidence, true
}

// HasAttributionConfidence returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasAttributionConfidence() bool {
	if o != nil && !IsNil(o.AttributionConfidence) {
		return true
	}

	return false
}

// SetAttributionConfidence gets a reference to the given string and assigns it to the AttributionConfidence field.
func (o *AdvisoryMispMeta) SetAttributionConfidence(v string) {
	o.AttributionConfidence = &v
}

// GetCfrSuspectedStateSponsor returns the CfrSuspectedStateSponsor field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetCfrSuspectedStateSponsor() string {
	if o == nil || IsNil(o.CfrSuspectedStateSponsor) {
		var ret string
		return ret
	}
	return *o.CfrSuspectedStateSponsor
}

// GetCfrSuspectedStateSponsorOk returns a tuple with the CfrSuspectedStateSponsor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetCfrSuspectedStateSponsorOk() (*string, bool) {
	if o == nil || IsNil(o.CfrSuspectedStateSponsor) {
		return nil, false
	}
	return o.CfrSuspectedStateSponsor, true
}

// HasCfrSuspectedStateSponsor returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasCfrSuspectedStateSponsor() bool {
	if o != nil && !IsNil(o.CfrSuspectedStateSponsor) {
		return true
	}

	return false
}

// SetCfrSuspectedStateSponsor gets a reference to the given string and assigns it to the CfrSuspectedStateSponsor field.
func (o *AdvisoryMispMeta) SetCfrSuspectedStateSponsor(v string) {
	o.CfrSuspectedStateSponsor = &v
}

// GetCfrSuspectedVictims returns the CfrSuspectedVictims field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetCfrSuspectedVictims() []string {
	if o == nil || IsNil(o.CfrSuspectedVictims) {
		var ret []string
		return ret
	}
	return o.CfrSuspectedVictims
}

// GetCfrSuspectedVictimsOk returns a tuple with the CfrSuspectedVictims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetCfrSuspectedVictimsOk() ([]string, bool) {
	if o == nil || IsNil(o.CfrSuspectedVictims) {
		return nil, false
	}
	return o.CfrSuspectedVictims, true
}

// HasCfrSuspectedVictims returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasCfrSuspectedVictims() bool {
	if o != nil && !IsNil(o.CfrSuspectedVictims) {
		return true
	}

	return false
}

// SetCfrSuspectedVictims gets a reference to the given []string and assigns it to the CfrSuspectedVictims field.
func (o *AdvisoryMispMeta) SetCfrSuspectedVictims(v []string) {
	o.CfrSuspectedVictims = v
}

// GetCfrTargetCategory returns the CfrTargetCategory field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetCfrTargetCategory() []string {
	if o == nil || IsNil(o.CfrTargetCategory) {
		var ret []string
		return ret
	}
	return o.CfrTargetCategory
}

// GetCfrTargetCategoryOk returns a tuple with the CfrTargetCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetCfrTargetCategoryOk() ([]string, bool) {
	if o == nil || IsNil(o.CfrTargetCategory) {
		return nil, false
	}
	return o.CfrTargetCategory, true
}

// HasCfrTargetCategory returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasCfrTargetCategory() bool {
	if o != nil && !IsNil(o.CfrTargetCategory) {
		return true
	}

	return false
}

// SetCfrTargetCategory gets a reference to the given []string and assigns it to the CfrTargetCategory field.
func (o *AdvisoryMispMeta) SetCfrTargetCategory(v []string) {
	o.CfrTargetCategory = v
}

// GetCfrTypeOfIncident returns the CfrTypeOfIncident field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetCfrTypeOfIncident() []string {
	if o == nil || IsNil(o.CfrTypeOfIncident) {
		var ret []string
		return ret
	}
	return o.CfrTypeOfIncident
}

// GetCfrTypeOfIncidentOk returns a tuple with the CfrTypeOfIncident field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetCfrTypeOfIncidentOk() ([]string, bool) {
	if o == nil || IsNil(o.CfrTypeOfIncident) {
		return nil, false
	}
	return o.CfrTypeOfIncident, true
}

// HasCfrTypeOfIncident returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasCfrTypeOfIncident() bool {
	if o != nil && !IsNil(o.CfrTypeOfIncident) {
		return true
	}

	return false
}

// SetCfrTypeOfIncident gets a reference to the given []string and assigns it to the CfrTypeOfIncident field.
func (o *AdvisoryMispMeta) SetCfrTypeOfIncident(v []string) {
	o.CfrTypeOfIncident = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AdvisoryMispMeta) SetCountry(v string) {
	o.Country = &v
}

// GetRefs returns the Refs field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetRefs() []string {
	if o == nil || IsNil(o.Refs) {
		var ret []string
		return ret
	}
	return o.Refs
}

// GetRefsOk returns a tuple with the Refs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetRefsOk() ([]string, bool) {
	if o == nil || IsNil(o.Refs) {
		return nil, false
	}
	return o.Refs, true
}

// HasRefs returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasRefs() bool {
	if o != nil && !IsNil(o.Refs) {
		return true
	}

	return false
}

// SetRefs gets a reference to the given []string and assigns it to the Refs field.
func (o *AdvisoryMispMeta) SetRefs(v []string) {
	o.Refs = v
}

// GetSynonyms returns the Synonyms field value if set, zero value otherwise.
func (o *AdvisoryMispMeta) GetSynonyms() []string {
	if o == nil || IsNil(o.Synonyms) {
		var ret []string
		return ret
	}
	return o.Synonyms
}

// GetSynonymsOk returns a tuple with the Synonyms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMispMeta) GetSynonymsOk() ([]string, bool) {
	if o == nil || IsNil(o.Synonyms) {
		return nil, false
	}
	return o.Synonyms, true
}

// HasSynonyms returns a boolean if a field has been set.
func (o *AdvisoryMispMeta) HasSynonyms() bool {
	if o != nil && !IsNil(o.Synonyms) {
		return true
	}

	return false
}

// SetSynonyms gets a reference to the given []string and assigns it to the Synonyms field.
func (o *AdvisoryMispMeta) SetSynonyms(v []string) {
	o.Synonyms = v
}

func (o AdvisoryMispMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMispMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributionConfidence) {
		toSerialize["attribution-confidence"] = o.AttributionConfidence
	}
	if !IsNil(o.CfrSuspectedStateSponsor) {
		toSerialize["cfr-suspected-state-sponsor"] = o.CfrSuspectedStateSponsor
	}
	if !IsNil(o.CfrSuspectedVictims) {
		toSerialize["cfr-suspected-victims"] = o.CfrSuspectedVictims
	}
	if !IsNil(o.CfrTargetCategory) {
		toSerialize["cfr-target-category"] = o.CfrTargetCategory
	}
	if !IsNil(o.CfrTypeOfIncident) {
		toSerialize["cfr-type-of-incident"] = o.CfrTypeOfIncident
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Refs) {
		toSerialize["refs"] = o.Refs
	}
	if !IsNil(o.Synonyms) {
		toSerialize["synonyms"] = o.Synonyms
	}
	return toSerialize, nil
}

type NullableAdvisoryMispMeta struct {
	value *AdvisoryMispMeta
	isSet bool
}

func (v NullableAdvisoryMispMeta) Get() *AdvisoryMispMeta {
	return v.value
}

func (v *NullableAdvisoryMispMeta) Set(val *AdvisoryMispMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMispMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMispMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMispMeta(val *AdvisoryMispMeta) *NullableAdvisoryMispMeta {
	return &NullableAdvisoryMispMeta{value: val, isSet: true}
}

func (v NullableAdvisoryMispMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMispMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


