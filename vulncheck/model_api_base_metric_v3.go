/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiBaseMetricV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiBaseMetricV3{}

// ApiBaseMetricV3 struct for ApiBaseMetricV3
type ApiBaseMetricV3 struct {
	CvssV3 *ApiCVSSV3 `json:"cvssV3,omitempty"`
	ExploitabilityScore *float32 `json:"exploitabilityScore,omitempty"`
	ImpactScore *float32 `json:"impactScore,omitempty"`
}

// NewApiBaseMetricV3 instantiates a new ApiBaseMetricV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBaseMetricV3() *ApiBaseMetricV3 {
	this := ApiBaseMetricV3{}
	return &this
}

// NewApiBaseMetricV3WithDefaults instantiates a new ApiBaseMetricV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBaseMetricV3WithDefaults() *ApiBaseMetricV3 {
	this := ApiBaseMetricV3{}
	return &this
}

// GetCvssV3 returns the CvssV3 field value if set, zero value otherwise.
func (o *ApiBaseMetricV3) GetCvssV3() ApiCVSSV3 {
	if o == nil || IsNil(o.CvssV3) {
		var ret ApiCVSSV3
		return ret
	}
	return *o.CvssV3
}

// GetCvssV3Ok returns a tuple with the CvssV3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV3) GetCvssV3Ok() (*ApiCVSSV3, bool) {
	if o == nil || IsNil(o.CvssV3) {
		return nil, false
	}
	return o.CvssV3, true
}

// HasCvssV3 returns a boolean if a field has been set.
func (o *ApiBaseMetricV3) HasCvssV3() bool {
	if o != nil && !IsNil(o.CvssV3) {
		return true
	}

	return false
}

// SetCvssV3 gets a reference to the given ApiCVSSV3 and assigns it to the CvssV3 field.
func (o *ApiBaseMetricV3) SetCvssV3(v ApiCVSSV3) {
	o.CvssV3 = &v
}

// GetExploitabilityScore returns the ExploitabilityScore field value if set, zero value otherwise.
func (o *ApiBaseMetricV3) GetExploitabilityScore() float32 {
	if o == nil || IsNil(o.ExploitabilityScore) {
		var ret float32
		return ret
	}
	return *o.ExploitabilityScore
}

// GetExploitabilityScoreOk returns a tuple with the ExploitabilityScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV3) GetExploitabilityScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ExploitabilityScore) {
		return nil, false
	}
	return o.ExploitabilityScore, true
}

// HasExploitabilityScore returns a boolean if a field has been set.
func (o *ApiBaseMetricV3) HasExploitabilityScore() bool {
	if o != nil && !IsNil(o.ExploitabilityScore) {
		return true
	}

	return false
}

// SetExploitabilityScore gets a reference to the given float32 and assigns it to the ExploitabilityScore field.
func (o *ApiBaseMetricV3) SetExploitabilityScore(v float32) {
	o.ExploitabilityScore = &v
}

// GetImpactScore returns the ImpactScore field value if set, zero value otherwise.
func (o *ApiBaseMetricV3) GetImpactScore() float32 {
	if o == nil || IsNil(o.ImpactScore) {
		var ret float32
		return ret
	}
	return *o.ImpactScore
}

// GetImpactScoreOk returns a tuple with the ImpactScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV3) GetImpactScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ImpactScore) {
		return nil, false
	}
	return o.ImpactScore, true
}

// HasImpactScore returns a boolean if a field has been set.
func (o *ApiBaseMetricV3) HasImpactScore() bool {
	if o != nil && !IsNil(o.ImpactScore) {
		return true
	}

	return false
}

// SetImpactScore gets a reference to the given float32 and assigns it to the ImpactScore field.
func (o *ApiBaseMetricV3) SetImpactScore(v float32) {
	o.ImpactScore = &v
}

func (o ApiBaseMetricV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiBaseMetricV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CvssV3) {
		toSerialize["cvssV3"] = o.CvssV3
	}
	if !IsNil(o.ExploitabilityScore) {
		toSerialize["exploitabilityScore"] = o.ExploitabilityScore
	}
	if !IsNil(o.ImpactScore) {
		toSerialize["impactScore"] = o.ImpactScore
	}
	return toSerialize, nil
}

type NullableApiBaseMetricV3 struct {
	value *ApiBaseMetricV3
	isSet bool
}

func (v NullableApiBaseMetricV3) Get() *ApiBaseMetricV3 {
	return v.value
}

func (v *NullableApiBaseMetricV3) Set(val *ApiBaseMetricV3) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBaseMetricV3) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBaseMetricV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBaseMetricV3(val *ApiBaseMetricV3) *NullableApiBaseMetricV3 {
	return &NullableApiBaseMetricV3{value: val, isSet: true}
}

func (v NullableApiBaseMetricV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBaseMetricV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


