/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryNZAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryNZAdvisory{}

// AdvisoryNZAdvisory struct for AdvisoryNZAdvisory
type AdvisoryNZAdvisory struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Happening *string `json:"happening,omitempty"`
	Link *string `json:"link,omitempty"`
	LookFor *string `json:"lookFor,omitempty"`
	References []string `json:"references,omitempty"`
	Title *string `json:"title,omitempty"`
	WhatToDo *string `json:"whatToDo,omitempty"`
}

// NewAdvisoryNZAdvisory instantiates a new AdvisoryNZAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryNZAdvisory() *AdvisoryNZAdvisory {
	this := AdvisoryNZAdvisory{}
	return &this
}

// NewAdvisoryNZAdvisoryWithDefaults instantiates a new AdvisoryNZAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryNZAdvisoryWithDefaults() *AdvisoryNZAdvisory {
	this := AdvisoryNZAdvisory{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryNZAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryNZAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryNZAdvisory) SetDescription(v string) {
	o.Description = &v
}

// GetHappening returns the Happening field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetHappening() string {
	if o == nil || IsNil(o.Happening) {
		var ret string
		return ret
	}
	return *o.Happening
}

// GetHappeningOk returns a tuple with the Happening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetHappeningOk() (*string, bool) {
	if o == nil || IsNil(o.Happening) {
		return nil, false
	}
	return o.Happening, true
}

// HasHappening returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasHappening() bool {
	if o != nil && !IsNil(o.Happening) {
		return true
	}

	return false
}

// SetHappening gets a reference to the given string and assigns it to the Happening field.
func (o *AdvisoryNZAdvisory) SetHappening(v string) {
	o.Happening = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryNZAdvisory) SetLink(v string) {
	o.Link = &v
}

// GetLookFor returns the LookFor field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetLookFor() string {
	if o == nil || IsNil(o.LookFor) {
		var ret string
		return ret
	}
	return *o.LookFor
}

// GetLookForOk returns a tuple with the LookFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetLookForOk() (*string, bool) {
	if o == nil || IsNil(o.LookFor) {
		return nil, false
	}
	return o.LookFor, true
}

// HasLookFor returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasLookFor() bool {
	if o != nil && !IsNil(o.LookFor) {
		return true
	}

	return false
}

// SetLookFor gets a reference to the given string and assigns it to the LookFor field.
func (o *AdvisoryNZAdvisory) SetLookFor(v string) {
	o.LookFor = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryNZAdvisory) SetReferences(v []string) {
	o.References = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryNZAdvisory) SetTitle(v string) {
	o.Title = &v
}

// GetWhatToDo returns the WhatToDo field value if set, zero value otherwise.
func (o *AdvisoryNZAdvisory) GetWhatToDo() string {
	if o == nil || IsNil(o.WhatToDo) {
		var ret string
		return ret
	}
	return *o.WhatToDo
}

// GetWhatToDoOk returns a tuple with the WhatToDo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNZAdvisory) GetWhatToDoOk() (*string, bool) {
	if o == nil || IsNil(o.WhatToDo) {
		return nil, false
	}
	return o.WhatToDo, true
}

// HasWhatToDo returns a boolean if a field has been set.
func (o *AdvisoryNZAdvisory) HasWhatToDo() bool {
	if o != nil && !IsNil(o.WhatToDo) {
		return true
	}

	return false
}

// SetWhatToDo gets a reference to the given string and assigns it to the WhatToDo field.
func (o *AdvisoryNZAdvisory) SetWhatToDo(v string) {
	o.WhatToDo = &v
}

func (o AdvisoryNZAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryNZAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Happening) {
		toSerialize["happening"] = o.Happening
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.LookFor) {
		toSerialize["lookFor"] = o.LookFor
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.WhatToDo) {
		toSerialize["whatToDo"] = o.WhatToDo
	}
	return toSerialize, nil
}

type NullableAdvisoryNZAdvisory struct {
	value *AdvisoryNZAdvisory
	isSet bool
}

func (v NullableAdvisoryNZAdvisory) Get() *AdvisoryNZAdvisory {
	return v.value
}

func (v *NullableAdvisoryNZAdvisory) Set(val *AdvisoryNZAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryNZAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryNZAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryNZAdvisory(val *AdvisoryNZAdvisory) *NullableAdvisoryNZAdvisory {
	return &NullableAdvisoryNZAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryNZAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryNZAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


