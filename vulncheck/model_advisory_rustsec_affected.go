/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRustsecAffected type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRustsecAffected{}

// AdvisoryRustsecAffected struct for AdvisoryRustsecAffected
type AdvisoryRustsecAffected struct {
	Arch []string `json:"arch,omitempty"`
	Functions *string `json:"functions,omitempty"`
	Os []string `json:"os,omitempty"`
}

// NewAdvisoryRustsecAffected instantiates a new AdvisoryRustsecAffected object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRustsecAffected() *AdvisoryRustsecAffected {
	this := AdvisoryRustsecAffected{}
	return &this
}

// NewAdvisoryRustsecAffectedWithDefaults instantiates a new AdvisoryRustsecAffected object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRustsecAffectedWithDefaults() *AdvisoryRustsecAffected {
	this := AdvisoryRustsecAffected{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *AdvisoryRustsecAffected) GetArch() []string {
	if o == nil || IsNil(o.Arch) {
		var ret []string
		return ret
	}
	return o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAffected) GetArchOk() ([]string, bool) {
	if o == nil || IsNil(o.Arch) {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *AdvisoryRustsecAffected) HasArch() bool {
	if o != nil && !IsNil(o.Arch) {
		return true
	}

	return false
}

// SetArch gets a reference to the given []string and assigns it to the Arch field.
func (o *AdvisoryRustsecAffected) SetArch(v []string) {
	o.Arch = v
}

// GetFunctions returns the Functions field value if set, zero value otherwise.
func (o *AdvisoryRustsecAffected) GetFunctions() string {
	if o == nil || IsNil(o.Functions) {
		var ret string
		return ret
	}
	return *o.Functions
}

// GetFunctionsOk returns a tuple with the Functions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAffected) GetFunctionsOk() (*string, bool) {
	if o == nil || IsNil(o.Functions) {
		return nil, false
	}
	return o.Functions, true
}

// HasFunctions returns a boolean if a field has been set.
func (o *AdvisoryRustsecAffected) HasFunctions() bool {
	if o != nil && !IsNil(o.Functions) {
		return true
	}

	return false
}

// SetFunctions gets a reference to the given string and assigns it to the Functions field.
func (o *AdvisoryRustsecAffected) SetFunctions(v string) {
	o.Functions = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *AdvisoryRustsecAffected) GetOs() []string {
	if o == nil || IsNil(o.Os) {
		var ret []string
		return ret
	}
	return o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAffected) GetOsOk() ([]string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *AdvisoryRustsecAffected) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given []string and assigns it to the Os field.
func (o *AdvisoryRustsecAffected) SetOs(v []string) {
	o.Os = v
}

func (o AdvisoryRustsecAffected) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRustsecAffected) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arch) {
		toSerialize["arch"] = o.Arch
	}
	if !IsNil(o.Functions) {
		toSerialize["functions"] = o.Functions
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	return toSerialize, nil
}

type NullableAdvisoryRustsecAffected struct {
	value *AdvisoryRustsecAffected
	isSet bool
}

func (v NullableAdvisoryRustsecAffected) Get() *AdvisoryRustsecAffected {
	return v.value
}

func (v *NullableAdvisoryRustsecAffected) Set(val *AdvisoryRustsecAffected) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRustsecAffected) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRustsecAffected) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRustsecAffected(val *AdvisoryRustsecAffected) *NullableAdvisoryRustsecAffected {
	return &NullableAdvisoryRustsecAffected{value: val, isSet: true}
}

func (v NullableAdvisoryRustsecAffected) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRustsecAffected) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


