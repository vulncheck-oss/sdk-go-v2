/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAlmaObjectID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAlmaObjectID{}

// AdvisoryAlmaObjectID struct for AdvisoryAlmaObjectID
type AdvisoryAlmaObjectID struct {
	Oid *string `json:"$oid,omitempty"`
}

// NewAdvisoryAlmaObjectID instantiates a new AdvisoryAlmaObjectID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAlmaObjectID() *AdvisoryAlmaObjectID {
	this := AdvisoryAlmaObjectID{}
	return &this
}

// NewAdvisoryAlmaObjectIDWithDefaults instantiates a new AdvisoryAlmaObjectID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAlmaObjectIDWithDefaults() *AdvisoryAlmaObjectID {
	this := AdvisoryAlmaObjectID{}
	return &this
}

// GetOid returns the Oid field value if set, zero value otherwise.
func (o *AdvisoryAlmaObjectID) GetOid() string {
	if o == nil || IsNil(o.Oid) {
		var ret string
		return ret
	}
	return *o.Oid
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaObjectID) GetOidOk() (*string, bool) {
	if o == nil || IsNil(o.Oid) {
		return nil, false
	}
	return o.Oid, true
}

// HasOid returns a boolean if a field has been set.
func (o *AdvisoryAlmaObjectID) HasOid() bool {
	if o != nil && !IsNil(o.Oid) {
		return true
	}

	return false
}

// SetOid gets a reference to the given string and assigns it to the Oid field.
func (o *AdvisoryAlmaObjectID) SetOid(v string) {
	o.Oid = &v
}

func (o AdvisoryAlmaObjectID) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAlmaObjectID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Oid) {
		toSerialize["$oid"] = o.Oid
	}
	return toSerialize, nil
}

type NullableAdvisoryAlmaObjectID struct {
	value *AdvisoryAlmaObjectID
	isSet bool
}

func (v NullableAdvisoryAlmaObjectID) Get() *AdvisoryAlmaObjectID {
	return v.value
}

func (v *NullableAdvisoryAlmaObjectID) Set(val *AdvisoryAlmaObjectID) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAlmaObjectID) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAlmaObjectID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAlmaObjectID(val *AdvisoryAlmaObjectID) *NullableAdvisoryAlmaObjectID {
	return &NullableAdvisoryAlmaObjectID{value: val, isSet: true}
}

func (v NullableAdvisoryAlmaObjectID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAlmaObjectID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


