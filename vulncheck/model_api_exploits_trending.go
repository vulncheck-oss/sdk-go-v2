/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiExploitsTrending type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExploitsTrending{}

// ApiExploitsTrending struct for ApiExploitsTrending
type ApiExploitsTrending struct {
	Github *bool `json:"github,omitempty"`
}

// NewApiExploitsTrending instantiates a new ApiExploitsTrending object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExploitsTrending() *ApiExploitsTrending {
	this := ApiExploitsTrending{}
	return &this
}

// NewApiExploitsTrendingWithDefaults instantiates a new ApiExploitsTrending object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExploitsTrendingWithDefaults() *ApiExploitsTrending {
	this := ApiExploitsTrending{}
	return &this
}

// GetGithub returns the Github field value if set, zero value otherwise.
func (o *ApiExploitsTrending) GetGithub() bool {
	if o == nil || IsNil(o.Github) {
		var ret bool
		return ret
	}
	return *o.Github
}

// GetGithubOk returns a tuple with the Github field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitsTrending) GetGithubOk() (*bool, bool) {
	if o == nil || IsNil(o.Github) {
		return nil, false
	}
	return o.Github, true
}

// HasGithub returns a boolean if a field has been set.
func (o *ApiExploitsTrending) HasGithub() bool {
	if o != nil && !IsNil(o.Github) {
		return true
	}

	return false
}

// SetGithub gets a reference to the given bool and assigns it to the Github field.
func (o *ApiExploitsTrending) SetGithub(v bool) {
	o.Github = &v
}

func (o ApiExploitsTrending) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiExploitsTrending) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Github) {
		toSerialize["github"] = o.Github
	}
	return toSerialize, nil
}

type NullableApiExploitsTrending struct {
	value *ApiExploitsTrending
	isSet bool
}

func (v NullableApiExploitsTrending) Get() *ApiExploitsTrending {
	return v.value
}

func (v *NullableApiExploitsTrending) Set(val *ApiExploitsTrending) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExploitsTrending) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExploitsTrending) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExploitsTrending(val *ApiExploitsTrending) *NullableApiExploitsTrending {
	return &NullableApiExploitsTrending{value: val, isSet: true}
}

func (v NullableApiExploitsTrending) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExploitsTrending) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


