/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryZDI type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryZDI{}

// AdvisoryZDI struct for AdvisoryZDI
type AdvisoryZDI struct {
	Cves []string `json:"cves,omitempty"`
	CvssScore *string `json:"cvss_score,omitempty"`
	CvssVector *string `json:"cvss_vector,omitempty"`
	CvssVersion *string `json:"cvss_version,omitempty"`
	Discoverers []string `json:"discoverers,omitempty"`
	FilterIdsDv []string `json:"filter_ids_dv,omitempty"`
	LastUpdatedAt *string `json:"last_updated_at,omitempty"`
	Products []AdvisoryZDIProduct `json:"products,omitempty"`
	PublicAdvisory *string `json:"public_advisory,omitempty"`
	PublishedDate *string `json:"published_date,omitempty"`
	Responses []AdvisoryZDIResponse `json:"responses,omitempty"`
	Title *string `json:"title,omitempty"`
	ZdiCan *string `json:"zdi_can,omitempty"`
	ZdiPublic *string `json:"zdi_public,omitempty"`
}

// NewAdvisoryZDI instantiates a new AdvisoryZDI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryZDI() *AdvisoryZDI {
	this := AdvisoryZDI{}
	return &this
}

// NewAdvisoryZDIWithDefaults instantiates a new AdvisoryZDI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryZDIWithDefaults() *AdvisoryZDI {
	this := AdvisoryZDI{}
	return &this
}

// GetCves returns the Cves field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetCves() []string {
	if o == nil || IsNil(o.Cves) {
		var ret []string
		return ret
	}
	return o.Cves
}

// GetCvesOk returns a tuple with the Cves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetCvesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cves) {
		return nil, false
	}
	return o.Cves, true
}

// HasCves returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasCves() bool {
	if o != nil && !IsNil(o.Cves) {
		return true
	}

	return false
}

// SetCves gets a reference to the given []string and assigns it to the Cves field.
func (o *AdvisoryZDI) SetCves(v []string) {
	o.Cves = v
}

// GetCvssScore returns the CvssScore field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetCvssScore() string {
	if o == nil || IsNil(o.CvssScore) {
		var ret string
		return ret
	}
	return *o.CvssScore
}

// GetCvssScoreOk returns a tuple with the CvssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetCvssScoreOk() (*string, bool) {
	if o == nil || IsNil(o.CvssScore) {
		return nil, false
	}
	return o.CvssScore, true
}

// HasCvssScore returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasCvssScore() bool {
	if o != nil && !IsNil(o.CvssScore) {
		return true
	}

	return false
}

// SetCvssScore gets a reference to the given string and assigns it to the CvssScore field.
func (o *AdvisoryZDI) SetCvssScore(v string) {
	o.CvssScore = &v
}

// GetCvssVector returns the CvssVector field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetCvssVector() string {
	if o == nil || IsNil(o.CvssVector) {
		var ret string
		return ret
	}
	return *o.CvssVector
}

// GetCvssVectorOk returns a tuple with the CvssVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetCvssVectorOk() (*string, bool) {
	if o == nil || IsNil(o.CvssVector) {
		return nil, false
	}
	return o.CvssVector, true
}

// HasCvssVector returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasCvssVector() bool {
	if o != nil && !IsNil(o.CvssVector) {
		return true
	}

	return false
}

// SetCvssVector gets a reference to the given string and assigns it to the CvssVector field.
func (o *AdvisoryZDI) SetCvssVector(v string) {
	o.CvssVector = &v
}

// GetCvssVersion returns the CvssVersion field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetCvssVersion() string {
	if o == nil || IsNil(o.CvssVersion) {
		var ret string
		return ret
	}
	return *o.CvssVersion
}

// GetCvssVersionOk returns a tuple with the CvssVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetCvssVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CvssVersion) {
		return nil, false
	}
	return o.CvssVersion, true
}

// HasCvssVersion returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasCvssVersion() bool {
	if o != nil && !IsNil(o.CvssVersion) {
		return true
	}

	return false
}

// SetCvssVersion gets a reference to the given string and assigns it to the CvssVersion field.
func (o *AdvisoryZDI) SetCvssVersion(v string) {
	o.CvssVersion = &v
}

// GetDiscoverers returns the Discoverers field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetDiscoverers() []string {
	if o == nil || IsNil(o.Discoverers) {
		var ret []string
		return ret
	}
	return o.Discoverers
}

// GetDiscoverersOk returns a tuple with the Discoverers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetDiscoverersOk() ([]string, bool) {
	if o == nil || IsNil(o.Discoverers) {
		return nil, false
	}
	return o.Discoverers, true
}

// HasDiscoverers returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasDiscoverers() bool {
	if o != nil && !IsNil(o.Discoverers) {
		return true
	}

	return false
}

// SetDiscoverers gets a reference to the given []string and assigns it to the Discoverers field.
func (o *AdvisoryZDI) SetDiscoverers(v []string) {
	o.Discoverers = v
}

// GetFilterIdsDv returns the FilterIdsDv field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetFilterIdsDv() []string {
	if o == nil || IsNil(o.FilterIdsDv) {
		var ret []string
		return ret
	}
	return o.FilterIdsDv
}

// GetFilterIdsDvOk returns a tuple with the FilterIdsDv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetFilterIdsDvOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterIdsDv) {
		return nil, false
	}
	return o.FilterIdsDv, true
}

// HasFilterIdsDv returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasFilterIdsDv() bool {
	if o != nil && !IsNil(o.FilterIdsDv) {
		return true
	}

	return false
}

// SetFilterIdsDv gets a reference to the given []string and assigns it to the FilterIdsDv field.
func (o *AdvisoryZDI) SetFilterIdsDv(v []string) {
	o.FilterIdsDv = v
}

// GetLastUpdatedAt returns the LastUpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetLastUpdatedAt() string {
	if o == nil || IsNil(o.LastUpdatedAt) {
		var ret string
		return ret
	}
	return *o.LastUpdatedAt
}

// GetLastUpdatedAtOk returns a tuple with the LastUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetLastUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedAt) {
		return nil, false
	}
	return o.LastUpdatedAt, true
}

// HasLastUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasLastUpdatedAt() bool {
	if o != nil && !IsNil(o.LastUpdatedAt) {
		return true
	}

	return false
}

// SetLastUpdatedAt gets a reference to the given string and assigns it to the LastUpdatedAt field.
func (o *AdvisoryZDI) SetLastUpdatedAt(v string) {
	o.LastUpdatedAt = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetProducts() []AdvisoryZDIProduct {
	if o == nil || IsNil(o.Products) {
		var ret []AdvisoryZDIProduct
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetProductsOk() ([]AdvisoryZDIProduct, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []AdvisoryZDIProduct and assigns it to the Products field.
func (o *AdvisoryZDI) SetProducts(v []AdvisoryZDIProduct) {
	o.Products = v
}

// GetPublicAdvisory returns the PublicAdvisory field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetPublicAdvisory() string {
	if o == nil || IsNil(o.PublicAdvisory) {
		var ret string
		return ret
	}
	return *o.PublicAdvisory
}

// GetPublicAdvisoryOk returns a tuple with the PublicAdvisory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetPublicAdvisoryOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAdvisory) {
		return nil, false
	}
	return o.PublicAdvisory, true
}

// HasPublicAdvisory returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasPublicAdvisory() bool {
	if o != nil && !IsNil(o.PublicAdvisory) {
		return true
	}

	return false
}

// SetPublicAdvisory gets a reference to the given string and assigns it to the PublicAdvisory field.
func (o *AdvisoryZDI) SetPublicAdvisory(v string) {
	o.PublicAdvisory = &v
}

// GetPublishedDate returns the PublishedDate field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetPublishedDate() string {
	if o == nil || IsNil(o.PublishedDate) {
		var ret string
		return ret
	}
	return *o.PublishedDate
}

// GetPublishedDateOk returns a tuple with the PublishedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetPublishedDateOk() (*string, bool) {
	if o == nil || IsNil(o.PublishedDate) {
		return nil, false
	}
	return o.PublishedDate, true
}

// HasPublishedDate returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasPublishedDate() bool {
	if o != nil && !IsNil(o.PublishedDate) {
		return true
	}

	return false
}

// SetPublishedDate gets a reference to the given string and assigns it to the PublishedDate field.
func (o *AdvisoryZDI) SetPublishedDate(v string) {
	o.PublishedDate = &v
}

// GetResponses returns the Responses field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetResponses() []AdvisoryZDIResponse {
	if o == nil || IsNil(o.Responses) {
		var ret []AdvisoryZDIResponse
		return ret
	}
	return o.Responses
}

// GetResponsesOk returns a tuple with the Responses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetResponsesOk() ([]AdvisoryZDIResponse, bool) {
	if o == nil || IsNil(o.Responses) {
		return nil, false
	}
	return o.Responses, true
}

// HasResponses returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasResponses() bool {
	if o != nil && !IsNil(o.Responses) {
		return true
	}

	return false
}

// SetResponses gets a reference to the given []AdvisoryZDIResponse and assigns it to the Responses field.
func (o *AdvisoryZDI) SetResponses(v []AdvisoryZDIResponse) {
	o.Responses = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryZDI) SetTitle(v string) {
	o.Title = &v
}

// GetZdiCan returns the ZdiCan field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetZdiCan() string {
	if o == nil || IsNil(o.ZdiCan) {
		var ret string
		return ret
	}
	return *o.ZdiCan
}

// GetZdiCanOk returns a tuple with the ZdiCan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetZdiCanOk() (*string, bool) {
	if o == nil || IsNil(o.ZdiCan) {
		return nil, false
	}
	return o.ZdiCan, true
}

// HasZdiCan returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasZdiCan() bool {
	if o != nil && !IsNil(o.ZdiCan) {
		return true
	}

	return false
}

// SetZdiCan gets a reference to the given string and assigns it to the ZdiCan field.
func (o *AdvisoryZDI) SetZdiCan(v string) {
	o.ZdiCan = &v
}

// GetZdiPublic returns the ZdiPublic field value if set, zero value otherwise.
func (o *AdvisoryZDI) GetZdiPublic() string {
	if o == nil || IsNil(o.ZdiPublic) {
		var ret string
		return ret
	}
	return *o.ZdiPublic
}

// GetZdiPublicOk returns a tuple with the ZdiPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZDI) GetZdiPublicOk() (*string, bool) {
	if o == nil || IsNil(o.ZdiPublic) {
		return nil, false
	}
	return o.ZdiPublic, true
}

// HasZdiPublic returns a boolean if a field has been set.
func (o *AdvisoryZDI) HasZdiPublic() bool {
	if o != nil && !IsNil(o.ZdiPublic) {
		return true
	}

	return false
}

// SetZdiPublic gets a reference to the given string and assigns it to the ZdiPublic field.
func (o *AdvisoryZDI) SetZdiPublic(v string) {
	o.ZdiPublic = &v
}

func (o AdvisoryZDI) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryZDI) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cves) {
		toSerialize["cves"] = o.Cves
	}
	if !IsNil(o.CvssScore) {
		toSerialize["cvss_score"] = o.CvssScore
	}
	if !IsNil(o.CvssVector) {
		toSerialize["cvss_vector"] = o.CvssVector
	}
	if !IsNil(o.CvssVersion) {
		toSerialize["cvss_version"] = o.CvssVersion
	}
	if !IsNil(o.Discoverers) {
		toSerialize["discoverers"] = o.Discoverers
	}
	if !IsNil(o.FilterIdsDv) {
		toSerialize["filter_ids_dv"] = o.FilterIdsDv
	}
	if !IsNil(o.LastUpdatedAt) {
		toSerialize["last_updated_at"] = o.LastUpdatedAt
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.PublicAdvisory) {
		toSerialize["public_advisory"] = o.PublicAdvisory
	}
	if !IsNil(o.PublishedDate) {
		toSerialize["published_date"] = o.PublishedDate
	}
	if !IsNil(o.Responses) {
		toSerialize["responses"] = o.Responses
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ZdiCan) {
		toSerialize["zdi_can"] = o.ZdiCan
	}
	if !IsNil(o.ZdiPublic) {
		toSerialize["zdi_public"] = o.ZdiPublic
	}
	return toSerialize, nil
}

type NullableAdvisoryZDI struct {
	value *AdvisoryZDI
	isSet bool
}

func (v NullableAdvisoryZDI) Get() *AdvisoryZDI {
	return v.value
}

func (v *NullableAdvisoryZDI) Set(val *AdvisoryZDI) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryZDI) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryZDI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryZDI(val *AdvisoryZDI) *NullableAdvisoryZDI {
	return &NullableAdvisoryZDI{value: val, isSet: true}
}

func (v NullableAdvisoryZDI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryZDI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


