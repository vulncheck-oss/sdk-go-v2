/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNormalizedExploitV3Entry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNormalizedExploitV3Entry{}

// ApiNormalizedExploitV3Entry struct for ApiNormalizedExploitV3Entry
type ApiNormalizedExploitV3Entry struct {
	CloneSshUrl *string `json:"clone_ssh_url,omitempty"`
	CloneSshUrlCached *string `json:"clone_ssh_url_cached,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	ExploitAvailability *string `json:"exploit_availability,omitempty"`
	ExploitMaturity *string `json:"exploit_maturity,omitempty"`
	ExploitType *string `json:"exploit_type,omitempty"`
	Name *string `json:"name,omitempty"`
	ReferenceUrl *string `json:"reference_url,omitempty"`
	Refsource *string `json:"refsource,omitempty"`
	RepoId *string `json:"repo_id,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewApiNormalizedExploitV3Entry instantiates a new ApiNormalizedExploitV3Entry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNormalizedExploitV3Entry() *ApiNormalizedExploitV3Entry {
	this := ApiNormalizedExploitV3Entry{}
	return &this
}

// NewApiNormalizedExploitV3EntryWithDefaults instantiates a new ApiNormalizedExploitV3Entry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNormalizedExploitV3EntryWithDefaults() *ApiNormalizedExploitV3Entry {
	this := ApiNormalizedExploitV3Entry{}
	return &this
}

// GetCloneSshUrl returns the CloneSshUrl field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetCloneSshUrl() string {
	if o == nil || IsNil(o.CloneSshUrl) {
		var ret string
		return ret
	}
	return *o.CloneSshUrl
}

// GetCloneSshUrlOk returns a tuple with the CloneSshUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetCloneSshUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CloneSshUrl) {
		return nil, false
	}
	return o.CloneSshUrl, true
}

// HasCloneSshUrl returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasCloneSshUrl() bool {
	if o != nil && !IsNil(o.CloneSshUrl) {
		return true
	}

	return false
}

// SetCloneSshUrl gets a reference to the given string and assigns it to the CloneSshUrl field.
func (o *ApiNormalizedExploitV3Entry) SetCloneSshUrl(v string) {
	o.CloneSshUrl = &v
}

// GetCloneSshUrlCached returns the CloneSshUrlCached field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetCloneSshUrlCached() string {
	if o == nil || IsNil(o.CloneSshUrlCached) {
		var ret string
		return ret
	}
	return *o.CloneSshUrlCached
}

// GetCloneSshUrlCachedOk returns a tuple with the CloneSshUrlCached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetCloneSshUrlCachedOk() (*string, bool) {
	if o == nil || IsNil(o.CloneSshUrlCached) {
		return nil, false
	}
	return o.CloneSshUrlCached, true
}

// HasCloneSshUrlCached returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasCloneSshUrlCached() bool {
	if o != nil && !IsNil(o.CloneSshUrlCached) {
		return true
	}

	return false
}

// SetCloneSshUrlCached gets a reference to the given string and assigns it to the CloneSshUrlCached field.
func (o *ApiNormalizedExploitV3Entry) SetCloneSshUrlCached(v string) {
	o.CloneSshUrlCached = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *ApiNormalizedExploitV3Entry) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetExploitAvailability returns the ExploitAvailability field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetExploitAvailability() string {
	if o == nil || IsNil(o.ExploitAvailability) {
		var ret string
		return ret
	}
	return *o.ExploitAvailability
}

// GetExploitAvailabilityOk returns a tuple with the ExploitAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetExploitAvailabilityOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitAvailability) {
		return nil, false
	}
	return o.ExploitAvailability, true
}

// HasExploitAvailability returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasExploitAvailability() bool {
	if o != nil && !IsNil(o.ExploitAvailability) {
		return true
	}

	return false
}

// SetExploitAvailability gets a reference to the given string and assigns it to the ExploitAvailability field.
func (o *ApiNormalizedExploitV3Entry) SetExploitAvailability(v string) {
	o.ExploitAvailability = &v
}

// GetExploitMaturity returns the ExploitMaturity field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetExploitMaturity() string {
	if o == nil || IsNil(o.ExploitMaturity) {
		var ret string
		return ret
	}
	return *o.ExploitMaturity
}

// GetExploitMaturityOk returns a tuple with the ExploitMaturity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetExploitMaturityOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitMaturity) {
		return nil, false
	}
	return o.ExploitMaturity, true
}

// HasExploitMaturity returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasExploitMaturity() bool {
	if o != nil && !IsNil(o.ExploitMaturity) {
		return true
	}

	return false
}

// SetExploitMaturity gets a reference to the given string and assigns it to the ExploitMaturity field.
func (o *ApiNormalizedExploitV3Entry) SetExploitMaturity(v string) {
	o.ExploitMaturity = &v
}

// GetExploitType returns the ExploitType field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetExploitType() string {
	if o == nil || IsNil(o.ExploitType) {
		var ret string
		return ret
	}
	return *o.ExploitType
}

// GetExploitTypeOk returns a tuple with the ExploitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetExploitTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitType) {
		return nil, false
	}
	return o.ExploitType, true
}

// HasExploitType returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasExploitType() bool {
	if o != nil && !IsNil(o.ExploitType) {
		return true
	}

	return false
}

// SetExploitType gets a reference to the given string and assigns it to the ExploitType field.
func (o *ApiNormalizedExploitV3Entry) SetExploitType(v string) {
	o.ExploitType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiNormalizedExploitV3Entry) SetName(v string) {
	o.Name = &v
}

// GetReferenceUrl returns the ReferenceUrl field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetReferenceUrl() string {
	if o == nil || IsNil(o.ReferenceUrl) {
		var ret string
		return ret
	}
	return *o.ReferenceUrl
}

// GetReferenceUrlOk returns a tuple with the ReferenceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetReferenceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceUrl) {
		return nil, false
	}
	return o.ReferenceUrl, true
}

// HasReferenceUrl returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasReferenceUrl() bool {
	if o != nil && !IsNil(o.ReferenceUrl) {
		return true
	}

	return false
}

// SetReferenceUrl gets a reference to the given string and assigns it to the ReferenceUrl field.
func (o *ApiNormalizedExploitV3Entry) SetReferenceUrl(v string) {
	o.ReferenceUrl = &v
}

// GetRefsource returns the Refsource field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetRefsource() string {
	if o == nil || IsNil(o.Refsource) {
		var ret string
		return ret
	}
	return *o.Refsource
}

// GetRefsourceOk returns a tuple with the Refsource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetRefsourceOk() (*string, bool) {
	if o == nil || IsNil(o.Refsource) {
		return nil, false
	}
	return o.Refsource, true
}

// HasRefsource returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasRefsource() bool {
	if o != nil && !IsNil(o.Refsource) {
		return true
	}

	return false
}

// SetRefsource gets a reference to the given string and assigns it to the Refsource field.
func (o *ApiNormalizedExploitV3Entry) SetRefsource(v string) {
	o.Refsource = &v
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetRepoId() string {
	if o == nil || IsNil(o.RepoId) {
		var ret string
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetRepoIdOk() (*string, bool) {
	if o == nil || IsNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasRepoId() bool {
	if o != nil && !IsNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given string and assigns it to the RepoId field.
func (o *ApiNormalizedExploitV3Entry) SetRepoId(v string) {
	o.RepoId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiNormalizedExploitV3Entry) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedExploitV3Entry) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiNormalizedExploitV3Entry) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiNormalizedExploitV3Entry) SetUrl(v string) {
	o.Url = &v
}

func (o ApiNormalizedExploitV3Entry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNormalizedExploitV3Entry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloneSshUrl) {
		toSerialize["clone_ssh_url"] = o.CloneSshUrl
	}
	if !IsNil(o.CloneSshUrlCached) {
		toSerialize["clone_ssh_url_cached"] = o.CloneSshUrlCached
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.ExploitAvailability) {
		toSerialize["exploit_availability"] = o.ExploitAvailability
	}
	if !IsNil(o.ExploitMaturity) {
		toSerialize["exploit_maturity"] = o.ExploitMaturity
	}
	if !IsNil(o.ExploitType) {
		toSerialize["exploit_type"] = o.ExploitType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReferenceUrl) {
		toSerialize["reference_url"] = o.ReferenceUrl
	}
	if !IsNil(o.Refsource) {
		toSerialize["refsource"] = o.Refsource
	}
	if !IsNil(o.RepoId) {
		toSerialize["repo_id"] = o.RepoId
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableApiNormalizedExploitV3Entry struct {
	value *ApiNormalizedExploitV3Entry
	isSet bool
}

func (v NullableApiNormalizedExploitV3Entry) Get() *ApiNormalizedExploitV3Entry {
	return v.value
}

func (v *NullableApiNormalizedExploitV3Entry) Set(val *ApiNormalizedExploitV3Entry) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNormalizedExploitV3Entry) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNormalizedExploitV3Entry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNormalizedExploitV3Entry(val *ApiNormalizedExploitV3Entry) *NullableApiNormalizedExploitV3Entry {
	return &NullableApiNormalizedExploitV3Entry{value: val, isSet: true}
}

func (v NullableApiNormalizedExploitV3Entry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNormalizedExploitV3Entry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


