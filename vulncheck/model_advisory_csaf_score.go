/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCSAFScore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCSAFScore{}

// AdvisoryCSAFScore struct for AdvisoryCSAFScore
type AdvisoryCSAFScore struct {
	CvssV2 *AdvisoryCVSSV2 `json:"cvss_v2,omitempty"`
	CvssV3 *AdvisoryCVSSV3 `json:"cvss_v3,omitempty"`
	Products []string `json:"products,omitempty"`
}

// NewAdvisoryCSAFScore instantiates a new AdvisoryCSAFScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCSAFScore() *AdvisoryCSAFScore {
	this := AdvisoryCSAFScore{}
	return &this
}

// NewAdvisoryCSAFScoreWithDefaults instantiates a new AdvisoryCSAFScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCSAFScoreWithDefaults() *AdvisoryCSAFScore {
	this := AdvisoryCSAFScore{}
	return &this
}

// GetCvssV2 returns the CvssV2 field value if set, zero value otherwise.
func (o *AdvisoryCSAFScore) GetCvssV2() AdvisoryCVSSV2 {
	if o == nil || IsNil(o.CvssV2) {
		var ret AdvisoryCVSSV2
		return ret
	}
	return *o.CvssV2
}

// GetCvssV2Ok returns a tuple with the CvssV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFScore) GetCvssV2Ok() (*AdvisoryCVSSV2, bool) {
	if o == nil || IsNil(o.CvssV2) {
		return nil, false
	}
	return o.CvssV2, true
}

// HasCvssV2 returns a boolean if a field has been set.
func (o *AdvisoryCSAFScore) HasCvssV2() bool {
	if o != nil && !IsNil(o.CvssV2) {
		return true
	}

	return false
}

// SetCvssV2 gets a reference to the given AdvisoryCVSSV2 and assigns it to the CvssV2 field.
func (o *AdvisoryCSAFScore) SetCvssV2(v AdvisoryCVSSV2) {
	o.CvssV2 = &v
}

// GetCvssV3 returns the CvssV3 field value if set, zero value otherwise.
func (o *AdvisoryCSAFScore) GetCvssV3() AdvisoryCVSSV3 {
	if o == nil || IsNil(o.CvssV3) {
		var ret AdvisoryCVSSV3
		return ret
	}
	return *o.CvssV3
}

// GetCvssV3Ok returns a tuple with the CvssV3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFScore) GetCvssV3Ok() (*AdvisoryCVSSV3, bool) {
	if o == nil || IsNil(o.CvssV3) {
		return nil, false
	}
	return o.CvssV3, true
}

// HasCvssV3 returns a boolean if a field has been set.
func (o *AdvisoryCSAFScore) HasCvssV3() bool {
	if o != nil && !IsNil(o.CvssV3) {
		return true
	}

	return false
}

// SetCvssV3 gets a reference to the given AdvisoryCVSSV3 and assigns it to the CvssV3 field.
func (o *AdvisoryCSAFScore) SetCvssV3(v AdvisoryCVSSV3) {
	o.CvssV3 = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *AdvisoryCSAFScore) GetProducts() []string {
	if o == nil || IsNil(o.Products) {
		var ret []string
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAFScore) GetProductsOk() ([]string, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *AdvisoryCSAFScore) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []string and assigns it to the Products field.
func (o *AdvisoryCSAFScore) SetProducts(v []string) {
	o.Products = v
}

func (o AdvisoryCSAFScore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCSAFScore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CvssV2) {
		toSerialize["cvss_v2"] = o.CvssV2
	}
	if !IsNil(o.CvssV3) {
		toSerialize["cvss_v3"] = o.CvssV3
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	return toSerialize, nil
}

type NullableAdvisoryCSAFScore struct {
	value *AdvisoryCSAFScore
	isSet bool
}

func (v NullableAdvisoryCSAFScore) Get() *AdvisoryCSAFScore {
	return v.value
}

func (v *NullableAdvisoryCSAFScore) Set(val *AdvisoryCSAFScore) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCSAFScore) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCSAFScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCSAFScore(val *AdvisoryCSAFScore) *NullableAdvisoryCSAFScore {
	return &NullableAdvisoryCSAFScore{value: val, isSet: true}
}

func (v NullableAdvisoryCSAFScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCSAFScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


