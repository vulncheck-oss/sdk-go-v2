/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiExploitV3Result type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExploitV3Result{}

// ApiExploitV3Result struct for ApiExploitV3Result
type ApiExploitV3Result struct {
	// ignore this field when checking for differences/changes
	Timestamp *string `json:"_timestamp,omitempty"`
	CommercialExploitFound *bool `json:"commercial_exploit_found,omitempty"`
	Counts *ApiExploitsV3Count `json:"counts,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	// exclude EPSS from changelog
	Epss *ApiEPSS `json:"epss,omitempty"`
	Exploits []ApiNormalizedExploitV3Entry `json:"exploits,omitempty"`
	Id *string `json:"id,omitempty"`
	InKEV *bool `json:"inKEV,omitempty"`
	InVCKEV *bool `json:"inVCKEV,omitempty"`
	MaxExploitMaturity *string `json:"max_exploit_maturity,omitempty"`
	PublicExploitFound *bool `json:"public_exploit_found,omitempty"`
	ReportedExploitation []ApiNormalizedReportV3Entry `json:"reported_exploitation,omitempty"`
	ReportedExploited *bool `json:"reported_exploited,omitempty"`
	ReportedExploitedByBotnets *bool `json:"reported_exploited_by_botnets,omitempty"`
	ReportedExploitedByRansomware *bool `json:"reported_exploited_by_ransomware,omitempty"`
	ReportedExploitedByThreatActors *bool `json:"reported_exploited_by_threat_actors,omitempty"`
	Timeline *ApiExploitsV3Timeline `json:"timeline,omitempty"`
	Trending *ApiExploitsTrending `json:"trending,omitempty"`
	WeaponizedExploitFound *bool `json:"weaponized_exploit_found,omitempty"`
}

// NewApiExploitV3Result instantiates a new ApiExploitV3Result object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExploitV3Result() *ApiExploitV3Result {
	this := ApiExploitV3Result{}
	return &this
}

// NewApiExploitV3ResultWithDefaults instantiates a new ApiExploitV3Result object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExploitV3ResultWithDefaults() *ApiExploitV3Result {
	this := ApiExploitV3Result{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ApiExploitV3Result) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetCommercialExploitFound returns the CommercialExploitFound field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetCommercialExploitFound() bool {
	if o == nil || IsNil(o.CommercialExploitFound) {
		var ret bool
		return ret
	}
	return *o.CommercialExploitFound
}

// GetCommercialExploitFoundOk returns a tuple with the CommercialExploitFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetCommercialExploitFoundOk() (*bool, bool) {
	if o == nil || IsNil(o.CommercialExploitFound) {
		return nil, false
	}
	return o.CommercialExploitFound, true
}

// HasCommercialExploitFound returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasCommercialExploitFound() bool {
	if o != nil && !IsNil(o.CommercialExploitFound) {
		return true
	}

	return false
}

// SetCommercialExploitFound gets a reference to the given bool and assigns it to the CommercialExploitFound field.
func (o *ApiExploitV3Result) SetCommercialExploitFound(v bool) {
	o.CommercialExploitFound = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetCounts() ApiExploitsV3Count {
	if o == nil || IsNil(o.Counts) {
		var ret ApiExploitsV3Count
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetCountsOk() (*ApiExploitsV3Count, bool) {
	if o == nil || IsNil(o.Counts) {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasCounts() bool {
	if o != nil && !IsNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given ApiExploitsV3Count and assigns it to the Counts field.
func (o *ApiExploitV3Result) SetCounts(v ApiExploitsV3Count) {
	o.Counts = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *ApiExploitV3Result) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetEpss returns the Epss field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetEpss() ApiEPSS {
	if o == nil || IsNil(o.Epss) {
		var ret ApiEPSS
		return ret
	}
	return *o.Epss
}

// GetEpssOk returns a tuple with the Epss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetEpssOk() (*ApiEPSS, bool) {
	if o == nil || IsNil(o.Epss) {
		return nil, false
	}
	return o.Epss, true
}

// HasEpss returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasEpss() bool {
	if o != nil && !IsNil(o.Epss) {
		return true
	}

	return false
}

// SetEpss gets a reference to the given ApiEPSS and assigns it to the Epss field.
func (o *ApiExploitV3Result) SetEpss(v ApiEPSS) {
	o.Epss = &v
}

// GetExploits returns the Exploits field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetExploits() []ApiNormalizedExploitV3Entry {
	if o == nil || IsNil(o.Exploits) {
		var ret []ApiNormalizedExploitV3Entry
		return ret
	}
	return o.Exploits
}

// GetExploitsOk returns a tuple with the Exploits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetExploitsOk() ([]ApiNormalizedExploitV3Entry, bool) {
	if o == nil || IsNil(o.Exploits) {
		return nil, false
	}
	return o.Exploits, true
}

// HasExploits returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasExploits() bool {
	if o != nil && !IsNil(o.Exploits) {
		return true
	}

	return false
}

// SetExploits gets a reference to the given []ApiNormalizedExploitV3Entry and assigns it to the Exploits field.
func (o *ApiExploitV3Result) SetExploits(v []ApiNormalizedExploitV3Entry) {
	o.Exploits = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiExploitV3Result) SetId(v string) {
	o.Id = &v
}

// GetInKEV returns the InKEV field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetInKEV() bool {
	if o == nil || IsNil(o.InKEV) {
		var ret bool
		return ret
	}
	return *o.InKEV
}

// GetInKEVOk returns a tuple with the InKEV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetInKEVOk() (*bool, bool) {
	if o == nil || IsNil(o.InKEV) {
		return nil, false
	}
	return o.InKEV, true
}

// HasInKEV returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasInKEV() bool {
	if o != nil && !IsNil(o.InKEV) {
		return true
	}

	return false
}

// SetInKEV gets a reference to the given bool and assigns it to the InKEV field.
func (o *ApiExploitV3Result) SetInKEV(v bool) {
	o.InKEV = &v
}

// GetInVCKEV returns the InVCKEV field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetInVCKEV() bool {
	if o == nil || IsNil(o.InVCKEV) {
		var ret bool
		return ret
	}
	return *o.InVCKEV
}

// GetInVCKEVOk returns a tuple with the InVCKEV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetInVCKEVOk() (*bool, bool) {
	if o == nil || IsNil(o.InVCKEV) {
		return nil, false
	}
	return o.InVCKEV, true
}

// HasInVCKEV returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasInVCKEV() bool {
	if o != nil && !IsNil(o.InVCKEV) {
		return true
	}

	return false
}

// SetInVCKEV gets a reference to the given bool and assigns it to the InVCKEV field.
func (o *ApiExploitV3Result) SetInVCKEV(v bool) {
	o.InVCKEV = &v
}

// GetMaxExploitMaturity returns the MaxExploitMaturity field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetMaxExploitMaturity() string {
	if o == nil || IsNil(o.MaxExploitMaturity) {
		var ret string
		return ret
	}
	return *o.MaxExploitMaturity
}

// GetMaxExploitMaturityOk returns a tuple with the MaxExploitMaturity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetMaxExploitMaturityOk() (*string, bool) {
	if o == nil || IsNil(o.MaxExploitMaturity) {
		return nil, false
	}
	return o.MaxExploitMaturity, true
}

// HasMaxExploitMaturity returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasMaxExploitMaturity() bool {
	if o != nil && !IsNil(o.MaxExploitMaturity) {
		return true
	}

	return false
}

// SetMaxExploitMaturity gets a reference to the given string and assigns it to the MaxExploitMaturity field.
func (o *ApiExploitV3Result) SetMaxExploitMaturity(v string) {
	o.MaxExploitMaturity = &v
}

// GetPublicExploitFound returns the PublicExploitFound field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetPublicExploitFound() bool {
	if o == nil || IsNil(o.PublicExploitFound) {
		var ret bool
		return ret
	}
	return *o.PublicExploitFound
}

// GetPublicExploitFoundOk returns a tuple with the PublicExploitFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetPublicExploitFoundOk() (*bool, bool) {
	if o == nil || IsNil(o.PublicExploitFound) {
		return nil, false
	}
	return o.PublicExploitFound, true
}

// HasPublicExploitFound returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasPublicExploitFound() bool {
	if o != nil && !IsNil(o.PublicExploitFound) {
		return true
	}

	return false
}

// SetPublicExploitFound gets a reference to the given bool and assigns it to the PublicExploitFound field.
func (o *ApiExploitV3Result) SetPublicExploitFound(v bool) {
	o.PublicExploitFound = &v
}

// GetReportedExploitation returns the ReportedExploitation field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetReportedExploitation() []ApiNormalizedReportV3Entry {
	if o == nil || IsNil(o.ReportedExploitation) {
		var ret []ApiNormalizedReportV3Entry
		return ret
	}
	return o.ReportedExploitation
}

// GetReportedExploitationOk returns a tuple with the ReportedExploitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetReportedExploitationOk() ([]ApiNormalizedReportV3Entry, bool) {
	if o == nil || IsNil(o.ReportedExploitation) {
		return nil, false
	}
	return o.ReportedExploitation, true
}

// HasReportedExploitation returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasReportedExploitation() bool {
	if o != nil && !IsNil(o.ReportedExploitation) {
		return true
	}

	return false
}

// SetReportedExploitation gets a reference to the given []ApiNormalizedReportV3Entry and assigns it to the ReportedExploitation field.
func (o *ApiExploitV3Result) SetReportedExploitation(v []ApiNormalizedReportV3Entry) {
	o.ReportedExploitation = v
}

// GetReportedExploited returns the ReportedExploited field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetReportedExploited() bool {
	if o == nil || IsNil(o.ReportedExploited) {
		var ret bool
		return ret
	}
	return *o.ReportedExploited
}

// GetReportedExploitedOk returns a tuple with the ReportedExploited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetReportedExploitedOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportedExploited) {
		return nil, false
	}
	return o.ReportedExploited, true
}

// HasReportedExploited returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasReportedExploited() bool {
	if o != nil && !IsNil(o.ReportedExploited) {
		return true
	}

	return false
}

// SetReportedExploited gets a reference to the given bool and assigns it to the ReportedExploited field.
func (o *ApiExploitV3Result) SetReportedExploited(v bool) {
	o.ReportedExploited = &v
}

// GetReportedExploitedByBotnets returns the ReportedExploitedByBotnets field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetReportedExploitedByBotnets() bool {
	if o == nil || IsNil(o.ReportedExploitedByBotnets) {
		var ret bool
		return ret
	}
	return *o.ReportedExploitedByBotnets
}

// GetReportedExploitedByBotnetsOk returns a tuple with the ReportedExploitedByBotnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetReportedExploitedByBotnetsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportedExploitedByBotnets) {
		return nil, false
	}
	return o.ReportedExploitedByBotnets, true
}

// HasReportedExploitedByBotnets returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasReportedExploitedByBotnets() bool {
	if o != nil && !IsNil(o.ReportedExploitedByBotnets) {
		return true
	}

	return false
}

// SetReportedExploitedByBotnets gets a reference to the given bool and assigns it to the ReportedExploitedByBotnets field.
func (o *ApiExploitV3Result) SetReportedExploitedByBotnets(v bool) {
	o.ReportedExploitedByBotnets = &v
}

// GetReportedExploitedByRansomware returns the ReportedExploitedByRansomware field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetReportedExploitedByRansomware() bool {
	if o == nil || IsNil(o.ReportedExploitedByRansomware) {
		var ret bool
		return ret
	}
	return *o.ReportedExploitedByRansomware
}

// GetReportedExploitedByRansomwareOk returns a tuple with the ReportedExploitedByRansomware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetReportedExploitedByRansomwareOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportedExploitedByRansomware) {
		return nil, false
	}
	return o.ReportedExploitedByRansomware, true
}

// HasReportedExploitedByRansomware returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasReportedExploitedByRansomware() bool {
	if o != nil && !IsNil(o.ReportedExploitedByRansomware) {
		return true
	}

	return false
}

// SetReportedExploitedByRansomware gets a reference to the given bool and assigns it to the ReportedExploitedByRansomware field.
func (o *ApiExploitV3Result) SetReportedExploitedByRansomware(v bool) {
	o.ReportedExploitedByRansomware = &v
}

// GetReportedExploitedByThreatActors returns the ReportedExploitedByThreatActors field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetReportedExploitedByThreatActors() bool {
	if o == nil || IsNil(o.ReportedExploitedByThreatActors) {
		var ret bool
		return ret
	}
	return *o.ReportedExploitedByThreatActors
}

// GetReportedExploitedByThreatActorsOk returns a tuple with the ReportedExploitedByThreatActors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetReportedExploitedByThreatActorsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportedExploitedByThreatActors) {
		return nil, false
	}
	return o.ReportedExploitedByThreatActors, true
}

// HasReportedExploitedByThreatActors returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasReportedExploitedByThreatActors() bool {
	if o != nil && !IsNil(o.ReportedExploitedByThreatActors) {
		return true
	}

	return false
}

// SetReportedExploitedByThreatActors gets a reference to the given bool and assigns it to the ReportedExploitedByThreatActors field.
func (o *ApiExploitV3Result) SetReportedExploitedByThreatActors(v bool) {
	o.ReportedExploitedByThreatActors = &v
}

// GetTimeline returns the Timeline field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetTimeline() ApiExploitsV3Timeline {
	if o == nil || IsNil(o.Timeline) {
		var ret ApiExploitsV3Timeline
		return ret
	}
	return *o.Timeline
}

// GetTimelineOk returns a tuple with the Timeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetTimelineOk() (*ApiExploitsV3Timeline, bool) {
	if o == nil || IsNil(o.Timeline) {
		return nil, false
	}
	return o.Timeline, true
}

// HasTimeline returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasTimeline() bool {
	if o != nil && !IsNil(o.Timeline) {
		return true
	}

	return false
}

// SetTimeline gets a reference to the given ApiExploitsV3Timeline and assigns it to the Timeline field.
func (o *ApiExploitV3Result) SetTimeline(v ApiExploitsV3Timeline) {
	o.Timeline = &v
}

// GetTrending returns the Trending field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetTrending() ApiExploitsTrending {
	if o == nil || IsNil(o.Trending) {
		var ret ApiExploitsTrending
		return ret
	}
	return *o.Trending
}

// GetTrendingOk returns a tuple with the Trending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetTrendingOk() (*ApiExploitsTrending, bool) {
	if o == nil || IsNil(o.Trending) {
		return nil, false
	}
	return o.Trending, true
}

// HasTrending returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasTrending() bool {
	if o != nil && !IsNil(o.Trending) {
		return true
	}

	return false
}

// SetTrending gets a reference to the given ApiExploitsTrending and assigns it to the Trending field.
func (o *ApiExploitV3Result) SetTrending(v ApiExploitsTrending) {
	o.Trending = &v
}

// GetWeaponizedExploitFound returns the WeaponizedExploitFound field value if set, zero value otherwise.
func (o *ApiExploitV3Result) GetWeaponizedExploitFound() bool {
	if o == nil || IsNil(o.WeaponizedExploitFound) {
		var ret bool
		return ret
	}
	return *o.WeaponizedExploitFound
}

// GetWeaponizedExploitFoundOk returns a tuple with the WeaponizedExploitFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitV3Result) GetWeaponizedExploitFoundOk() (*bool, bool) {
	if o == nil || IsNil(o.WeaponizedExploitFound) {
		return nil, false
	}
	return o.WeaponizedExploitFound, true
}

// HasWeaponizedExploitFound returns a boolean if a field has been set.
func (o *ApiExploitV3Result) HasWeaponizedExploitFound() bool {
	if o != nil && !IsNil(o.WeaponizedExploitFound) {
		return true
	}

	return false
}

// SetWeaponizedExploitFound gets a reference to the given bool and assigns it to the WeaponizedExploitFound field.
func (o *ApiExploitV3Result) SetWeaponizedExploitFound(v bool) {
	o.WeaponizedExploitFound = &v
}

func (o ApiExploitV3Result) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiExploitV3Result) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["_timestamp"] = o.Timestamp
	}
	if !IsNil(o.CommercialExploitFound) {
		toSerialize["commercial_exploit_found"] = o.CommercialExploitFound
	}
	if !IsNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Epss) {
		toSerialize["epss"] = o.Epss
	}
	if !IsNil(o.Exploits) {
		toSerialize["exploits"] = o.Exploits
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InKEV) {
		toSerialize["inKEV"] = o.InKEV
	}
	if !IsNil(o.InVCKEV) {
		toSerialize["inVCKEV"] = o.InVCKEV
	}
	if !IsNil(o.MaxExploitMaturity) {
		toSerialize["max_exploit_maturity"] = o.MaxExploitMaturity
	}
	if !IsNil(o.PublicExploitFound) {
		toSerialize["public_exploit_found"] = o.PublicExploitFound
	}
	if !IsNil(o.ReportedExploitation) {
		toSerialize["reported_exploitation"] = o.ReportedExploitation
	}
	if !IsNil(o.ReportedExploited) {
		toSerialize["reported_exploited"] = o.ReportedExploited
	}
	if !IsNil(o.ReportedExploitedByBotnets) {
		toSerialize["reported_exploited_by_botnets"] = o.ReportedExploitedByBotnets
	}
	if !IsNil(o.ReportedExploitedByRansomware) {
		toSerialize["reported_exploited_by_ransomware"] = o.ReportedExploitedByRansomware
	}
	if !IsNil(o.ReportedExploitedByThreatActors) {
		toSerialize["reported_exploited_by_threat_actors"] = o.ReportedExploitedByThreatActors
	}
	if !IsNil(o.Timeline) {
		toSerialize["timeline"] = o.Timeline
	}
	if !IsNil(o.Trending) {
		toSerialize["trending"] = o.Trending
	}
	if !IsNil(o.WeaponizedExploitFound) {
		toSerialize["weaponized_exploit_found"] = o.WeaponizedExploitFound
	}
	return toSerialize, nil
}

type NullableApiExploitV3Result struct {
	value *ApiExploitV3Result
	isSet bool
}

func (v NullableApiExploitV3Result) Get() *ApiExploitV3Result {
	return v.value
}

func (v *NullableApiExploitV3Result) Set(val *ApiExploitV3Result) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExploitV3Result) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExploitV3Result) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExploitV3Result(val *ApiExploitV3Result) *NullableApiExploitV3Result {
	return &NullableApiExploitV3Result{value: val, isSet: true}
}

func (v NullableApiExploitV3Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExploitV3Result) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


