/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCVSSV40 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCVSSV40{}

// AdvisoryCVSSV40 struct for AdvisoryCVSSV40
type AdvisoryCVSSV40 struct {
	Automatable *string `json:"Automatable,omitempty"`
	Recovery *string `json:"Recovery,omitempty"`
	Safety *string `json:"Safety,omitempty"`
	AttackComplexity *string `json:"attackComplexity,omitempty"`
	AttackRequirements *string `json:"attackRequirements,omitempty"`
	AttackVector *string `json:"attackVector,omitempty"`
	AvailabilityRequirement *string `json:"availabilityRequirement,omitempty"`
	BaseScore *float32 `json:"baseScore,omitempty"`
	BaseSeverity *string `json:"baseSeverity,omitempty"`
	ConfidentialityRequirement *string `json:"confidentialityRequirement,omitempty"`
	ExploitMaturity *string `json:"exploitMaturity,omitempty"`
	IntegrityRequirement *string `json:"integrityRequirement,omitempty"`
	ModifiedAttackComplexity *string `json:"modifiedAttackComplexity,omitempty"`
	ModifiedAttackRequirements *string `json:"modifiedAttackRequirements,omitempty"`
	ModifiedAttackVector *string `json:"modifiedAttackVector,omitempty"`
	ModifiedPrivilegesRequired *string `json:"modifiedPrivilegesRequired,omitempty"`
	ModifiedSubAvailabilityImpact *string `json:"modifiedSubAvailabilityImpact,omitempty"`
	ModifiedSubConfidentialityImpact *string `json:"modifiedSubConfidentialityImpact,omitempty"`
	ModifiedSubIntegrityImpact *string `json:"modifiedSubIntegrityImpact,omitempty"`
	ModifiedUserInteraction *string `json:"modifiedUserInteraction,omitempty"`
	ModifiedVulnAvailabilityImpact *string `json:"modifiedVulnAvailabilityImpact,omitempty"`
	ModifiedVulnConfidentialityImpact *string `json:"modifiedVulnConfidentialityImpact,omitempty"`
	ModifiedVulnIntegrityImpact *string `json:"modifiedVulnIntegrityImpact,omitempty"`
	PrivilegesRequired *string `json:"privilegesRequired,omitempty"`
	ProviderUrgency *string `json:"providerUrgency,omitempty"`
	SubAvailabilityImpact *string `json:"subAvailabilityImpact,omitempty"`
	SubConfidentialityImpact *string `json:"subConfidentialityImpact,omitempty"`
	SubIntegrityImpact *string `json:"subIntegrityImpact,omitempty"`
	UserInteraction *string `json:"userInteraction,omitempty"`
	ValueDensity *string `json:"valueDensity,omitempty"`
	VectorString *string `json:"vectorString,omitempty"`
	Version *string `json:"version,omitempty"`
	VulnAvailabilityImpact *string `json:"vulnAvailabilityImpact,omitempty"`
	VulnConfidentialityImpact *string `json:"vulnConfidentialityImpact,omitempty"`
	VulnIntegrityImpact *string `json:"vulnIntegrityImpact,omitempty"`
	VulnerabilityResponseEffort *string `json:"vulnerabilityResponseEffort,omitempty"`
}

// NewAdvisoryCVSSV40 instantiates a new AdvisoryCVSSV40 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCVSSV40() *AdvisoryCVSSV40 {
	this := AdvisoryCVSSV40{}
	return &this
}

// NewAdvisoryCVSSV40WithDefaults instantiates a new AdvisoryCVSSV40 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCVSSV40WithDefaults() *AdvisoryCVSSV40 {
	this := AdvisoryCVSSV40{}
	return &this
}

// GetAutomatable returns the Automatable field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetAutomatable() string {
	if o == nil || IsNil(o.Automatable) {
		var ret string
		return ret
	}
	return *o.Automatable
}

// GetAutomatableOk returns a tuple with the Automatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetAutomatableOk() (*string, bool) {
	if o == nil || IsNil(o.Automatable) {
		return nil, false
	}
	return o.Automatable, true
}

// HasAutomatable returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasAutomatable() bool {
	if o != nil && !IsNil(o.Automatable) {
		return true
	}

	return false
}

// SetAutomatable gets a reference to the given string and assigns it to the Automatable field.
func (o *AdvisoryCVSSV40) SetAutomatable(v string) {
	o.Automatable = &v
}

// GetRecovery returns the Recovery field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetRecovery() string {
	if o == nil || IsNil(o.Recovery) {
		var ret string
		return ret
	}
	return *o.Recovery
}

// GetRecoveryOk returns a tuple with the Recovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetRecoveryOk() (*string, bool) {
	if o == nil || IsNil(o.Recovery) {
		return nil, false
	}
	return o.Recovery, true
}

// HasRecovery returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasRecovery() bool {
	if o != nil && !IsNil(o.Recovery) {
		return true
	}

	return false
}

// SetRecovery gets a reference to the given string and assigns it to the Recovery field.
func (o *AdvisoryCVSSV40) SetRecovery(v string) {
	o.Recovery = &v
}

// GetSafety returns the Safety field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetSafety() string {
	if o == nil || IsNil(o.Safety) {
		var ret string
		return ret
	}
	return *o.Safety
}

// GetSafetyOk returns a tuple with the Safety field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetSafetyOk() (*string, bool) {
	if o == nil || IsNil(o.Safety) {
		return nil, false
	}
	return o.Safety, true
}

// HasSafety returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasSafety() bool {
	if o != nil && !IsNil(o.Safety) {
		return true
	}

	return false
}

// SetSafety gets a reference to the given string and assigns it to the Safety field.
func (o *AdvisoryCVSSV40) SetSafety(v string) {
	o.Safety = &v
}

// GetAttackComplexity returns the AttackComplexity field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetAttackComplexity() string {
	if o == nil || IsNil(o.AttackComplexity) {
		var ret string
		return ret
	}
	return *o.AttackComplexity
}

// GetAttackComplexityOk returns a tuple with the AttackComplexity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetAttackComplexityOk() (*string, bool) {
	if o == nil || IsNil(o.AttackComplexity) {
		return nil, false
	}
	return o.AttackComplexity, true
}

// HasAttackComplexity returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasAttackComplexity() bool {
	if o != nil && !IsNil(o.AttackComplexity) {
		return true
	}

	return false
}

// SetAttackComplexity gets a reference to the given string and assigns it to the AttackComplexity field.
func (o *AdvisoryCVSSV40) SetAttackComplexity(v string) {
	o.AttackComplexity = &v
}

// GetAttackRequirements returns the AttackRequirements field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetAttackRequirements() string {
	if o == nil || IsNil(o.AttackRequirements) {
		var ret string
		return ret
	}
	return *o.AttackRequirements
}

// GetAttackRequirementsOk returns a tuple with the AttackRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetAttackRequirementsOk() (*string, bool) {
	if o == nil || IsNil(o.AttackRequirements) {
		return nil, false
	}
	return o.AttackRequirements, true
}

// HasAttackRequirements returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasAttackRequirements() bool {
	if o != nil && !IsNil(o.AttackRequirements) {
		return true
	}

	return false
}

// SetAttackRequirements gets a reference to the given string and assigns it to the AttackRequirements field.
func (o *AdvisoryCVSSV40) SetAttackRequirements(v string) {
	o.AttackRequirements = &v
}

// GetAttackVector returns the AttackVector field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetAttackVector() string {
	if o == nil || IsNil(o.AttackVector) {
		var ret string
		return ret
	}
	return *o.AttackVector
}

// GetAttackVectorOk returns a tuple with the AttackVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetAttackVectorOk() (*string, bool) {
	if o == nil || IsNil(o.AttackVector) {
		return nil, false
	}
	return o.AttackVector, true
}

// HasAttackVector returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasAttackVector() bool {
	if o != nil && !IsNil(o.AttackVector) {
		return true
	}

	return false
}

// SetAttackVector gets a reference to the given string and assigns it to the AttackVector field.
func (o *AdvisoryCVSSV40) SetAttackVector(v string) {
	o.AttackVector = &v
}

// GetAvailabilityRequirement returns the AvailabilityRequirement field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetAvailabilityRequirement() string {
	if o == nil || IsNil(o.AvailabilityRequirement) {
		var ret string
		return ret
	}
	return *o.AvailabilityRequirement
}

// GetAvailabilityRequirementOk returns a tuple with the AvailabilityRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetAvailabilityRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityRequirement) {
		return nil, false
	}
	return o.AvailabilityRequirement, true
}

// HasAvailabilityRequirement returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasAvailabilityRequirement() bool {
	if o != nil && !IsNil(o.AvailabilityRequirement) {
		return true
	}

	return false
}

// SetAvailabilityRequirement gets a reference to the given string and assigns it to the AvailabilityRequirement field.
func (o *AdvisoryCVSSV40) SetAvailabilityRequirement(v string) {
	o.AvailabilityRequirement = &v
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetBaseScore() float32 {
	if o == nil || IsNil(o.BaseScore) {
		var ret float32
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetBaseScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given float32 and assigns it to the BaseScore field.
func (o *AdvisoryCVSSV40) SetBaseScore(v float32) {
	o.BaseScore = &v
}

// GetBaseSeverity returns the BaseSeverity field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetBaseSeverity() string {
	if o == nil || IsNil(o.BaseSeverity) {
		var ret string
		return ret
	}
	return *o.BaseSeverity
}

// GetBaseSeverityOk returns a tuple with the BaseSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetBaseSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.BaseSeverity) {
		return nil, false
	}
	return o.BaseSeverity, true
}

// HasBaseSeverity returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasBaseSeverity() bool {
	if o != nil && !IsNil(o.BaseSeverity) {
		return true
	}

	return false
}

// SetBaseSeverity gets a reference to the given string and assigns it to the BaseSeverity field.
func (o *AdvisoryCVSSV40) SetBaseSeverity(v string) {
	o.BaseSeverity = &v
}

// GetConfidentialityRequirement returns the ConfidentialityRequirement field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetConfidentialityRequirement() string {
	if o == nil || IsNil(o.ConfidentialityRequirement) {
		var ret string
		return ret
	}
	return *o.ConfidentialityRequirement
}

// GetConfidentialityRequirementOk returns a tuple with the ConfidentialityRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetConfidentialityRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.ConfidentialityRequirement) {
		return nil, false
	}
	return o.ConfidentialityRequirement, true
}

// HasConfidentialityRequirement returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasConfidentialityRequirement() bool {
	if o != nil && !IsNil(o.ConfidentialityRequirement) {
		return true
	}

	return false
}

// SetConfidentialityRequirement gets a reference to the given string and assigns it to the ConfidentialityRequirement field.
func (o *AdvisoryCVSSV40) SetConfidentialityRequirement(v string) {
	o.ConfidentialityRequirement = &v
}

// GetExploitMaturity returns the ExploitMaturity field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetExploitMaturity() string {
	if o == nil || IsNil(o.ExploitMaturity) {
		var ret string
		return ret
	}
	return *o.ExploitMaturity
}

// GetExploitMaturityOk returns a tuple with the ExploitMaturity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetExploitMaturityOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitMaturity) {
		return nil, false
	}
	return o.ExploitMaturity, true
}

// HasExploitMaturity returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasExploitMaturity() bool {
	if o != nil && !IsNil(o.ExploitMaturity) {
		return true
	}

	return false
}

// SetExploitMaturity gets a reference to the given string and assigns it to the ExploitMaturity field.
func (o *AdvisoryCVSSV40) SetExploitMaturity(v string) {
	o.ExploitMaturity = &v
}

// GetIntegrityRequirement returns the IntegrityRequirement field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetIntegrityRequirement() string {
	if o == nil || IsNil(o.IntegrityRequirement) {
		var ret string
		return ret
	}
	return *o.IntegrityRequirement
}

// GetIntegrityRequirementOk returns a tuple with the IntegrityRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetIntegrityRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrityRequirement) {
		return nil, false
	}
	return o.IntegrityRequirement, true
}

// HasIntegrityRequirement returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasIntegrityRequirement() bool {
	if o != nil && !IsNil(o.IntegrityRequirement) {
		return true
	}

	return false
}

// SetIntegrityRequirement gets a reference to the given string and assigns it to the IntegrityRequirement field.
func (o *AdvisoryCVSSV40) SetIntegrityRequirement(v string) {
	o.IntegrityRequirement = &v
}

// GetModifiedAttackComplexity returns the ModifiedAttackComplexity field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedAttackComplexity() string {
	if o == nil || IsNil(o.ModifiedAttackComplexity) {
		var ret string
		return ret
	}
	return *o.ModifiedAttackComplexity
}

// GetModifiedAttackComplexityOk returns a tuple with the ModifiedAttackComplexity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedAttackComplexityOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedAttackComplexity) {
		return nil, false
	}
	return o.ModifiedAttackComplexity, true
}

// HasModifiedAttackComplexity returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedAttackComplexity() bool {
	if o != nil && !IsNil(o.ModifiedAttackComplexity) {
		return true
	}

	return false
}

// SetModifiedAttackComplexity gets a reference to the given string and assigns it to the ModifiedAttackComplexity field.
func (o *AdvisoryCVSSV40) SetModifiedAttackComplexity(v string) {
	o.ModifiedAttackComplexity = &v
}

// GetModifiedAttackRequirements returns the ModifiedAttackRequirements field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedAttackRequirements() string {
	if o == nil || IsNil(o.ModifiedAttackRequirements) {
		var ret string
		return ret
	}
	return *o.ModifiedAttackRequirements
}

// GetModifiedAttackRequirementsOk returns a tuple with the ModifiedAttackRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedAttackRequirementsOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedAttackRequirements) {
		return nil, false
	}
	return o.ModifiedAttackRequirements, true
}

// HasModifiedAttackRequirements returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedAttackRequirements() bool {
	if o != nil && !IsNil(o.ModifiedAttackRequirements) {
		return true
	}

	return false
}

// SetModifiedAttackRequirements gets a reference to the given string and assigns it to the ModifiedAttackRequirements field.
func (o *AdvisoryCVSSV40) SetModifiedAttackRequirements(v string) {
	o.ModifiedAttackRequirements = &v
}

// GetModifiedAttackVector returns the ModifiedAttackVector field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedAttackVector() string {
	if o == nil || IsNil(o.ModifiedAttackVector) {
		var ret string
		return ret
	}
	return *o.ModifiedAttackVector
}

// GetModifiedAttackVectorOk returns a tuple with the ModifiedAttackVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedAttackVectorOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedAttackVector) {
		return nil, false
	}
	return o.ModifiedAttackVector, true
}

// HasModifiedAttackVector returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedAttackVector() bool {
	if o != nil && !IsNil(o.ModifiedAttackVector) {
		return true
	}

	return false
}

// SetModifiedAttackVector gets a reference to the given string and assigns it to the ModifiedAttackVector field.
func (o *AdvisoryCVSSV40) SetModifiedAttackVector(v string) {
	o.ModifiedAttackVector = &v
}

// GetModifiedPrivilegesRequired returns the ModifiedPrivilegesRequired field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedPrivilegesRequired() string {
	if o == nil || IsNil(o.ModifiedPrivilegesRequired) {
		var ret string
		return ret
	}
	return *o.ModifiedPrivilegesRequired
}

// GetModifiedPrivilegesRequiredOk returns a tuple with the ModifiedPrivilegesRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedPrivilegesRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedPrivilegesRequired) {
		return nil, false
	}
	return o.ModifiedPrivilegesRequired, true
}

// HasModifiedPrivilegesRequired returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedPrivilegesRequired() bool {
	if o != nil && !IsNil(o.ModifiedPrivilegesRequired) {
		return true
	}

	return false
}

// SetModifiedPrivilegesRequired gets a reference to the given string and assigns it to the ModifiedPrivilegesRequired field.
func (o *AdvisoryCVSSV40) SetModifiedPrivilegesRequired(v string) {
	o.ModifiedPrivilegesRequired = &v
}

// GetModifiedSubAvailabilityImpact returns the ModifiedSubAvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedSubAvailabilityImpact() string {
	if o == nil || IsNil(o.ModifiedSubAvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.ModifiedSubAvailabilityImpact
}

// GetModifiedSubAvailabilityImpactOk returns a tuple with the ModifiedSubAvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedSubAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedSubAvailabilityImpact) {
		return nil, false
	}
	return o.ModifiedSubAvailabilityImpact, true
}

// HasModifiedSubAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedSubAvailabilityImpact() bool {
	if o != nil && !IsNil(o.ModifiedSubAvailabilityImpact) {
		return true
	}

	return false
}

// SetModifiedSubAvailabilityImpact gets a reference to the given string and assigns it to the ModifiedSubAvailabilityImpact field.
func (o *AdvisoryCVSSV40) SetModifiedSubAvailabilityImpact(v string) {
	o.ModifiedSubAvailabilityImpact = &v
}

// GetModifiedSubConfidentialityImpact returns the ModifiedSubConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedSubConfidentialityImpact() string {
	if o == nil || IsNil(o.ModifiedSubConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.ModifiedSubConfidentialityImpact
}

// GetModifiedSubConfidentialityImpactOk returns a tuple with the ModifiedSubConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedSubConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedSubConfidentialityImpact) {
		return nil, false
	}
	return o.ModifiedSubConfidentialityImpact, true
}

// HasModifiedSubConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedSubConfidentialityImpact() bool {
	if o != nil && !IsNil(o.ModifiedSubConfidentialityImpact) {
		return true
	}

	return false
}

// SetModifiedSubConfidentialityImpact gets a reference to the given string and assigns it to the ModifiedSubConfidentialityImpact field.
func (o *AdvisoryCVSSV40) SetModifiedSubConfidentialityImpact(v string) {
	o.ModifiedSubConfidentialityImpact = &v
}

// GetModifiedSubIntegrityImpact returns the ModifiedSubIntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedSubIntegrityImpact() string {
	if o == nil || IsNil(o.ModifiedSubIntegrityImpact) {
		var ret string
		return ret
	}
	return *o.ModifiedSubIntegrityImpact
}

// GetModifiedSubIntegrityImpactOk returns a tuple with the ModifiedSubIntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedSubIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedSubIntegrityImpact) {
		return nil, false
	}
	return o.ModifiedSubIntegrityImpact, true
}

// HasModifiedSubIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedSubIntegrityImpact() bool {
	if o != nil && !IsNil(o.ModifiedSubIntegrityImpact) {
		return true
	}

	return false
}

// SetModifiedSubIntegrityImpact gets a reference to the given string and assigns it to the ModifiedSubIntegrityImpact field.
func (o *AdvisoryCVSSV40) SetModifiedSubIntegrityImpact(v string) {
	o.ModifiedSubIntegrityImpact = &v
}

// GetModifiedUserInteraction returns the ModifiedUserInteraction field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedUserInteraction() string {
	if o == nil || IsNil(o.ModifiedUserInteraction) {
		var ret string
		return ret
	}
	return *o.ModifiedUserInteraction
}

// GetModifiedUserInteractionOk returns a tuple with the ModifiedUserInteraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedUserInteractionOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedUserInteraction) {
		return nil, false
	}
	return o.ModifiedUserInteraction, true
}

// HasModifiedUserInteraction returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedUserInteraction() bool {
	if o != nil && !IsNil(o.ModifiedUserInteraction) {
		return true
	}

	return false
}

// SetModifiedUserInteraction gets a reference to the given string and assigns it to the ModifiedUserInteraction field.
func (o *AdvisoryCVSSV40) SetModifiedUserInteraction(v string) {
	o.ModifiedUserInteraction = &v
}

// GetModifiedVulnAvailabilityImpact returns the ModifiedVulnAvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedVulnAvailabilityImpact() string {
	if o == nil || IsNil(o.ModifiedVulnAvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.ModifiedVulnAvailabilityImpact
}

// GetModifiedVulnAvailabilityImpactOk returns a tuple with the ModifiedVulnAvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedVulnAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedVulnAvailabilityImpact) {
		return nil, false
	}
	return o.ModifiedVulnAvailabilityImpact, true
}

// HasModifiedVulnAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedVulnAvailabilityImpact() bool {
	if o != nil && !IsNil(o.ModifiedVulnAvailabilityImpact) {
		return true
	}

	return false
}

// SetModifiedVulnAvailabilityImpact gets a reference to the given string and assigns it to the ModifiedVulnAvailabilityImpact field.
func (o *AdvisoryCVSSV40) SetModifiedVulnAvailabilityImpact(v string) {
	o.ModifiedVulnAvailabilityImpact = &v
}

// GetModifiedVulnConfidentialityImpact returns the ModifiedVulnConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedVulnConfidentialityImpact() string {
	if o == nil || IsNil(o.ModifiedVulnConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.ModifiedVulnConfidentialityImpact
}

// GetModifiedVulnConfidentialityImpactOk returns a tuple with the ModifiedVulnConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedVulnConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedVulnConfidentialityImpact) {
		return nil, false
	}
	return o.ModifiedVulnConfidentialityImpact, true
}

// HasModifiedVulnConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedVulnConfidentialityImpact() bool {
	if o != nil && !IsNil(o.ModifiedVulnConfidentialityImpact) {
		return true
	}

	return false
}

// SetModifiedVulnConfidentialityImpact gets a reference to the given string and assigns it to the ModifiedVulnConfidentialityImpact field.
func (o *AdvisoryCVSSV40) SetModifiedVulnConfidentialityImpact(v string) {
	o.ModifiedVulnConfidentialityImpact = &v
}

// GetModifiedVulnIntegrityImpact returns the ModifiedVulnIntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetModifiedVulnIntegrityImpact() string {
	if o == nil || IsNil(o.ModifiedVulnIntegrityImpact) {
		var ret string
		return ret
	}
	return *o.ModifiedVulnIntegrityImpact
}

// GetModifiedVulnIntegrityImpactOk returns a tuple with the ModifiedVulnIntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetModifiedVulnIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedVulnIntegrityImpact) {
		return nil, false
	}
	return o.ModifiedVulnIntegrityImpact, true
}

// HasModifiedVulnIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasModifiedVulnIntegrityImpact() bool {
	if o != nil && !IsNil(o.ModifiedVulnIntegrityImpact) {
		return true
	}

	return false
}

// SetModifiedVulnIntegrityImpact gets a reference to the given string and assigns it to the ModifiedVulnIntegrityImpact field.
func (o *AdvisoryCVSSV40) SetModifiedVulnIntegrityImpact(v string) {
	o.ModifiedVulnIntegrityImpact = &v
}

// GetPrivilegesRequired returns the PrivilegesRequired field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetPrivilegesRequired() string {
	if o == nil || IsNil(o.PrivilegesRequired) {
		var ret string
		return ret
	}
	return *o.PrivilegesRequired
}

// GetPrivilegesRequiredOk returns a tuple with the PrivilegesRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetPrivilegesRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.PrivilegesRequired) {
		return nil, false
	}
	return o.PrivilegesRequired, true
}

// HasPrivilegesRequired returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasPrivilegesRequired() bool {
	if o != nil && !IsNil(o.PrivilegesRequired) {
		return true
	}

	return false
}

// SetPrivilegesRequired gets a reference to the given string and assigns it to the PrivilegesRequired field.
func (o *AdvisoryCVSSV40) SetPrivilegesRequired(v string) {
	o.PrivilegesRequired = &v
}

// GetProviderUrgency returns the ProviderUrgency field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetProviderUrgency() string {
	if o == nil || IsNil(o.ProviderUrgency) {
		var ret string
		return ret
	}
	return *o.ProviderUrgency
}

// GetProviderUrgencyOk returns a tuple with the ProviderUrgency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetProviderUrgencyOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderUrgency) {
		return nil, false
	}
	return o.ProviderUrgency, true
}

// HasProviderUrgency returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasProviderUrgency() bool {
	if o != nil && !IsNil(o.ProviderUrgency) {
		return true
	}

	return false
}

// SetProviderUrgency gets a reference to the given string and assigns it to the ProviderUrgency field.
func (o *AdvisoryCVSSV40) SetProviderUrgency(v string) {
	o.ProviderUrgency = &v
}

// GetSubAvailabilityImpact returns the SubAvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetSubAvailabilityImpact() string {
	if o == nil || IsNil(o.SubAvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.SubAvailabilityImpact
}

// GetSubAvailabilityImpactOk returns a tuple with the SubAvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetSubAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.SubAvailabilityImpact) {
		return nil, false
	}
	return o.SubAvailabilityImpact, true
}

// HasSubAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasSubAvailabilityImpact() bool {
	if o != nil && !IsNil(o.SubAvailabilityImpact) {
		return true
	}

	return false
}

// SetSubAvailabilityImpact gets a reference to the given string and assigns it to the SubAvailabilityImpact field.
func (o *AdvisoryCVSSV40) SetSubAvailabilityImpact(v string) {
	o.SubAvailabilityImpact = &v
}

// GetSubConfidentialityImpact returns the SubConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetSubConfidentialityImpact() string {
	if o == nil || IsNil(o.SubConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.SubConfidentialityImpact
}

// GetSubConfidentialityImpactOk returns a tuple with the SubConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetSubConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.SubConfidentialityImpact) {
		return nil, false
	}
	return o.SubConfidentialityImpact, true
}

// HasSubConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasSubConfidentialityImpact() bool {
	if o != nil && !IsNil(o.SubConfidentialityImpact) {
		return true
	}

	return false
}

// SetSubConfidentialityImpact gets a reference to the given string and assigns it to the SubConfidentialityImpact field.
func (o *AdvisoryCVSSV40) SetSubConfidentialityImpact(v string) {
	o.SubConfidentialityImpact = &v
}

// GetSubIntegrityImpact returns the SubIntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetSubIntegrityImpact() string {
	if o == nil || IsNil(o.SubIntegrityImpact) {
		var ret string
		return ret
	}
	return *o.SubIntegrityImpact
}

// GetSubIntegrityImpactOk returns a tuple with the SubIntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetSubIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.SubIntegrityImpact) {
		return nil, false
	}
	return o.SubIntegrityImpact, true
}

// HasSubIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasSubIntegrityImpact() bool {
	if o != nil && !IsNil(o.SubIntegrityImpact) {
		return true
	}

	return false
}

// SetSubIntegrityImpact gets a reference to the given string and assigns it to the SubIntegrityImpact field.
func (o *AdvisoryCVSSV40) SetSubIntegrityImpact(v string) {
	o.SubIntegrityImpact = &v
}

// GetUserInteraction returns the UserInteraction field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetUserInteraction() string {
	if o == nil || IsNil(o.UserInteraction) {
		var ret string
		return ret
	}
	return *o.UserInteraction
}

// GetUserInteractionOk returns a tuple with the UserInteraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetUserInteractionOk() (*string, bool) {
	if o == nil || IsNil(o.UserInteraction) {
		return nil, false
	}
	return o.UserInteraction, true
}

// HasUserInteraction returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasUserInteraction() bool {
	if o != nil && !IsNil(o.UserInteraction) {
		return true
	}

	return false
}

// SetUserInteraction gets a reference to the given string and assigns it to the UserInteraction field.
func (o *AdvisoryCVSSV40) SetUserInteraction(v string) {
	o.UserInteraction = &v
}

// GetValueDensity returns the ValueDensity field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetValueDensity() string {
	if o == nil || IsNil(o.ValueDensity) {
		var ret string
		return ret
	}
	return *o.ValueDensity
}

// GetValueDensityOk returns a tuple with the ValueDensity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetValueDensityOk() (*string, bool) {
	if o == nil || IsNil(o.ValueDensity) {
		return nil, false
	}
	return o.ValueDensity, true
}

// HasValueDensity returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasValueDensity() bool {
	if o != nil && !IsNil(o.ValueDensity) {
		return true
	}

	return false
}

// SetValueDensity gets a reference to the given string and assigns it to the ValueDensity field.
func (o *AdvisoryCVSSV40) SetValueDensity(v string) {
	o.ValueDensity = &v
}

// GetVectorString returns the VectorString field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetVectorString() string {
	if o == nil || IsNil(o.VectorString) {
		var ret string
		return ret
	}
	return *o.VectorString
}

// GetVectorStringOk returns a tuple with the VectorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetVectorStringOk() (*string, bool) {
	if o == nil || IsNil(o.VectorString) {
		return nil, false
	}
	return o.VectorString, true
}

// HasVectorString returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasVectorString() bool {
	if o != nil && !IsNil(o.VectorString) {
		return true
	}

	return false
}

// SetVectorString gets a reference to the given string and assigns it to the VectorString field.
func (o *AdvisoryCVSSV40) SetVectorString(v string) {
	o.VectorString = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryCVSSV40) SetVersion(v string) {
	o.Version = &v
}

// GetVulnAvailabilityImpact returns the VulnAvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetVulnAvailabilityImpact() string {
	if o == nil || IsNil(o.VulnAvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.VulnAvailabilityImpact
}

// GetVulnAvailabilityImpactOk returns a tuple with the VulnAvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetVulnAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.VulnAvailabilityImpact) {
		return nil, false
	}
	return o.VulnAvailabilityImpact, true
}

// HasVulnAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasVulnAvailabilityImpact() bool {
	if o != nil && !IsNil(o.VulnAvailabilityImpact) {
		return true
	}

	return false
}

// SetVulnAvailabilityImpact gets a reference to the given string and assigns it to the VulnAvailabilityImpact field.
func (o *AdvisoryCVSSV40) SetVulnAvailabilityImpact(v string) {
	o.VulnAvailabilityImpact = &v
}

// GetVulnConfidentialityImpact returns the VulnConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetVulnConfidentialityImpact() string {
	if o == nil || IsNil(o.VulnConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.VulnConfidentialityImpact
}

// GetVulnConfidentialityImpactOk returns a tuple with the VulnConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetVulnConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.VulnConfidentialityImpact) {
		return nil, false
	}
	return o.VulnConfidentialityImpact, true
}

// HasVulnConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasVulnConfidentialityImpact() bool {
	if o != nil && !IsNil(o.VulnConfidentialityImpact) {
		return true
	}

	return false
}

// SetVulnConfidentialityImpact gets a reference to the given string and assigns it to the VulnConfidentialityImpact field.
func (o *AdvisoryCVSSV40) SetVulnConfidentialityImpact(v string) {
	o.VulnConfidentialityImpact = &v
}

// GetVulnIntegrityImpact returns the VulnIntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetVulnIntegrityImpact() string {
	if o == nil || IsNil(o.VulnIntegrityImpact) {
		var ret string
		return ret
	}
	return *o.VulnIntegrityImpact
}

// GetVulnIntegrityImpactOk returns a tuple with the VulnIntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetVulnIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.VulnIntegrityImpact) {
		return nil, false
	}
	return o.VulnIntegrityImpact, true
}

// HasVulnIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasVulnIntegrityImpact() bool {
	if o != nil && !IsNil(o.VulnIntegrityImpact) {
		return true
	}

	return false
}

// SetVulnIntegrityImpact gets a reference to the given string and assigns it to the VulnIntegrityImpact field.
func (o *AdvisoryCVSSV40) SetVulnIntegrityImpact(v string) {
	o.VulnIntegrityImpact = &v
}

// GetVulnerabilityResponseEffort returns the VulnerabilityResponseEffort field value if set, zero value otherwise.
func (o *AdvisoryCVSSV40) GetVulnerabilityResponseEffort() string {
	if o == nil || IsNil(o.VulnerabilityResponseEffort) {
		var ret string
		return ret
	}
	return *o.VulnerabilityResponseEffort
}

// GetVulnerabilityResponseEffortOk returns a tuple with the VulnerabilityResponseEffort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV40) GetVulnerabilityResponseEffortOk() (*string, bool) {
	if o == nil || IsNil(o.VulnerabilityResponseEffort) {
		return nil, false
	}
	return o.VulnerabilityResponseEffort, true
}

// HasVulnerabilityResponseEffort returns a boolean if a field has been set.
func (o *AdvisoryCVSSV40) HasVulnerabilityResponseEffort() bool {
	if o != nil && !IsNil(o.VulnerabilityResponseEffort) {
		return true
	}

	return false
}

// SetVulnerabilityResponseEffort gets a reference to the given string and assigns it to the VulnerabilityResponseEffort field.
func (o *AdvisoryCVSSV40) SetVulnerabilityResponseEffort(v string) {
	o.VulnerabilityResponseEffort = &v
}

func (o AdvisoryCVSSV40) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCVSSV40) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Automatable) {
		toSerialize["Automatable"] = o.Automatable
	}
	if !IsNil(o.Recovery) {
		toSerialize["Recovery"] = o.Recovery
	}
	if !IsNil(o.Safety) {
		toSerialize["Safety"] = o.Safety
	}
	if !IsNil(o.AttackComplexity) {
		toSerialize["attackComplexity"] = o.AttackComplexity
	}
	if !IsNil(o.AttackRequirements) {
		toSerialize["attackRequirements"] = o.AttackRequirements
	}
	if !IsNil(o.AttackVector) {
		toSerialize["attackVector"] = o.AttackVector
	}
	if !IsNil(o.AvailabilityRequirement) {
		toSerialize["availabilityRequirement"] = o.AvailabilityRequirement
	}
	if !IsNil(o.BaseScore) {
		toSerialize["baseScore"] = o.BaseScore
	}
	if !IsNil(o.BaseSeverity) {
		toSerialize["baseSeverity"] = o.BaseSeverity
	}
	if !IsNil(o.ConfidentialityRequirement) {
		toSerialize["confidentialityRequirement"] = o.ConfidentialityRequirement
	}
	if !IsNil(o.ExploitMaturity) {
		toSerialize["exploitMaturity"] = o.ExploitMaturity
	}
	if !IsNil(o.IntegrityRequirement) {
		toSerialize["integrityRequirement"] = o.IntegrityRequirement
	}
	if !IsNil(o.ModifiedAttackComplexity) {
		toSerialize["modifiedAttackComplexity"] = o.ModifiedAttackComplexity
	}
	if !IsNil(o.ModifiedAttackRequirements) {
		toSerialize["modifiedAttackRequirements"] = o.ModifiedAttackRequirements
	}
	if !IsNil(o.ModifiedAttackVector) {
		toSerialize["modifiedAttackVector"] = o.ModifiedAttackVector
	}
	if !IsNil(o.ModifiedPrivilegesRequired) {
		toSerialize["modifiedPrivilegesRequired"] = o.ModifiedPrivilegesRequired
	}
	if !IsNil(o.ModifiedSubAvailabilityImpact) {
		toSerialize["modifiedSubAvailabilityImpact"] = o.ModifiedSubAvailabilityImpact
	}
	if !IsNil(o.ModifiedSubConfidentialityImpact) {
		toSerialize["modifiedSubConfidentialityImpact"] = o.ModifiedSubConfidentialityImpact
	}
	if !IsNil(o.ModifiedSubIntegrityImpact) {
		toSerialize["modifiedSubIntegrityImpact"] = o.ModifiedSubIntegrityImpact
	}
	if !IsNil(o.ModifiedUserInteraction) {
		toSerialize["modifiedUserInteraction"] = o.ModifiedUserInteraction
	}
	if !IsNil(o.ModifiedVulnAvailabilityImpact) {
		toSerialize["modifiedVulnAvailabilityImpact"] = o.ModifiedVulnAvailabilityImpact
	}
	if !IsNil(o.ModifiedVulnConfidentialityImpact) {
		toSerialize["modifiedVulnConfidentialityImpact"] = o.ModifiedVulnConfidentialityImpact
	}
	if !IsNil(o.ModifiedVulnIntegrityImpact) {
		toSerialize["modifiedVulnIntegrityImpact"] = o.ModifiedVulnIntegrityImpact
	}
	if !IsNil(o.PrivilegesRequired) {
		toSerialize["privilegesRequired"] = o.PrivilegesRequired
	}
	if !IsNil(o.ProviderUrgency) {
		toSerialize["providerUrgency"] = o.ProviderUrgency
	}
	if !IsNil(o.SubAvailabilityImpact) {
		toSerialize["subAvailabilityImpact"] = o.SubAvailabilityImpact
	}
	if !IsNil(o.SubConfidentialityImpact) {
		toSerialize["subConfidentialityImpact"] = o.SubConfidentialityImpact
	}
	if !IsNil(o.SubIntegrityImpact) {
		toSerialize["subIntegrityImpact"] = o.SubIntegrityImpact
	}
	if !IsNil(o.UserInteraction) {
		toSerialize["userInteraction"] = o.UserInteraction
	}
	if !IsNil(o.ValueDensity) {
		toSerialize["valueDensity"] = o.ValueDensity
	}
	if !IsNil(o.VectorString) {
		toSerialize["vectorString"] = o.VectorString
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VulnAvailabilityImpact) {
		toSerialize["vulnAvailabilityImpact"] = o.VulnAvailabilityImpact
	}
	if !IsNil(o.VulnConfidentialityImpact) {
		toSerialize["vulnConfidentialityImpact"] = o.VulnConfidentialityImpact
	}
	if !IsNil(o.VulnIntegrityImpact) {
		toSerialize["vulnIntegrityImpact"] = o.VulnIntegrityImpact
	}
	if !IsNil(o.VulnerabilityResponseEffort) {
		toSerialize["vulnerabilityResponseEffort"] = o.VulnerabilityResponseEffort
	}
	return toSerialize, nil
}

type NullableAdvisoryCVSSV40 struct {
	value *AdvisoryCVSSV40
	isSet bool
}

func (v NullableAdvisoryCVSSV40) Get() *AdvisoryCVSSV40 {
	return v.value
}

func (v *NullableAdvisoryCVSSV40) Set(val *AdvisoryCVSSV40) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCVSSV40) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCVSSV40) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCVSSV40(val *AdvisoryCVSSV40) *NullableAdvisoryCVSSV40 {
	return &NullableAdvisoryCVSSV40{value: val, isSet: true}
}

func (v NullableAdvisoryCVSSV40) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCVSSV40) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


