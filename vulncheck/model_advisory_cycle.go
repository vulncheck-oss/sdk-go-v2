/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCycle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCycle{}

// AdvisoryCycle struct for AdvisoryCycle
type AdvisoryCycle struct {
	Codename *string `json:"codename,omitempty"`
	Cycle *string `json:"cycle,omitempty"`
	Discontinued map[string]interface{} `json:"discontinued,omitempty"`
	Eol map[string]interface{} `json:"eol,omitempty"`
	ExtendedSupport map[string]interface{} `json:"extendedSupport,omitempty"`
	Latest *string `json:"latest,omitempty"`
	LatestReleaseDate *string `json:"latestReleaseDate,omitempty"`
	Link *string `json:"link,omitempty"`
	Lts map[string]interface{} `json:"lts,omitempty"`
	ReleaseDate *string `json:"releaseDate,omitempty"`
	ReleaseLabel *string `json:"releaseLabel,omitempty"`
	Support map[string]interface{} `json:"support,omitempty"`
}

// NewAdvisoryCycle instantiates a new AdvisoryCycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCycle() *AdvisoryCycle {
	this := AdvisoryCycle{}
	return &this
}

// NewAdvisoryCycleWithDefaults instantiates a new AdvisoryCycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCycleWithDefaults() *AdvisoryCycle {
	this := AdvisoryCycle{}
	return &this
}

// GetCodename returns the Codename field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetCodename() string {
	if o == nil || IsNil(o.Codename) {
		var ret string
		return ret
	}
	return *o.Codename
}

// GetCodenameOk returns a tuple with the Codename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetCodenameOk() (*string, bool) {
	if o == nil || IsNil(o.Codename) {
		return nil, false
	}
	return o.Codename, true
}

// HasCodename returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasCodename() bool {
	if o != nil && !IsNil(o.Codename) {
		return true
	}

	return false
}

// SetCodename gets a reference to the given string and assigns it to the Codename field.
func (o *AdvisoryCycle) SetCodename(v string) {
	o.Codename = &v
}

// GetCycle returns the Cycle field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetCycle() string {
	if o == nil || IsNil(o.Cycle) {
		var ret string
		return ret
	}
	return *o.Cycle
}

// GetCycleOk returns a tuple with the Cycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetCycleOk() (*string, bool) {
	if o == nil || IsNil(o.Cycle) {
		return nil, false
	}
	return o.Cycle, true
}

// HasCycle returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasCycle() bool {
	if o != nil && !IsNil(o.Cycle) {
		return true
	}

	return false
}

// SetCycle gets a reference to the given string and assigns it to the Cycle field.
func (o *AdvisoryCycle) SetCycle(v string) {
	o.Cycle = &v
}

// GetDiscontinued returns the Discontinued field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetDiscontinued() map[string]interface{} {
	if o == nil || IsNil(o.Discontinued) {
		var ret map[string]interface{}
		return ret
	}
	return o.Discontinued
}

// GetDiscontinuedOk returns a tuple with the Discontinued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetDiscontinuedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Discontinued) {
		return map[string]interface{}{}, false
	}
	return o.Discontinued, true
}

// HasDiscontinued returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasDiscontinued() bool {
	if o != nil && !IsNil(o.Discontinued) {
		return true
	}

	return false
}

// SetDiscontinued gets a reference to the given map[string]interface{} and assigns it to the Discontinued field.
func (o *AdvisoryCycle) SetDiscontinued(v map[string]interface{}) {
	o.Discontinued = v
}

// GetEol returns the Eol field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetEol() map[string]interface{} {
	if o == nil || IsNil(o.Eol) {
		var ret map[string]interface{}
		return ret
	}
	return o.Eol
}

// GetEolOk returns a tuple with the Eol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetEolOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Eol) {
		return map[string]interface{}{}, false
	}
	return o.Eol, true
}

// HasEol returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasEol() bool {
	if o != nil && !IsNil(o.Eol) {
		return true
	}

	return false
}

// SetEol gets a reference to the given map[string]interface{} and assigns it to the Eol field.
func (o *AdvisoryCycle) SetEol(v map[string]interface{}) {
	o.Eol = v
}

// GetExtendedSupport returns the ExtendedSupport field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetExtendedSupport() map[string]interface{} {
	if o == nil || IsNil(o.ExtendedSupport) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtendedSupport
}

// GetExtendedSupportOk returns a tuple with the ExtendedSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetExtendedSupportOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtendedSupport) {
		return map[string]interface{}{}, false
	}
	return o.ExtendedSupport, true
}

// HasExtendedSupport returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasExtendedSupport() bool {
	if o != nil && !IsNil(o.ExtendedSupport) {
		return true
	}

	return false
}

// SetExtendedSupport gets a reference to the given map[string]interface{} and assigns it to the ExtendedSupport field.
func (o *AdvisoryCycle) SetExtendedSupport(v map[string]interface{}) {
	o.ExtendedSupport = v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetLatest() string {
	if o == nil || IsNil(o.Latest) {
		var ret string
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetLatestOk() (*string, bool) {
	if o == nil || IsNil(o.Latest) {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasLatest() bool {
	if o != nil && !IsNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given string and assigns it to the Latest field.
func (o *AdvisoryCycle) SetLatest(v string) {
	o.Latest = &v
}

// GetLatestReleaseDate returns the LatestReleaseDate field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetLatestReleaseDate() string {
	if o == nil || IsNil(o.LatestReleaseDate) {
		var ret string
		return ret
	}
	return *o.LatestReleaseDate
}

// GetLatestReleaseDateOk returns a tuple with the LatestReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetLatestReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.LatestReleaseDate) {
		return nil, false
	}
	return o.LatestReleaseDate, true
}

// HasLatestReleaseDate returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasLatestReleaseDate() bool {
	if o != nil && !IsNil(o.LatestReleaseDate) {
		return true
	}

	return false
}

// SetLatestReleaseDate gets a reference to the given string and assigns it to the LatestReleaseDate field.
func (o *AdvisoryCycle) SetLatestReleaseDate(v string) {
	o.LatestReleaseDate = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryCycle) SetLink(v string) {
	o.Link = &v
}

// GetLts returns the Lts field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetLts() map[string]interface{} {
	if o == nil || IsNil(o.Lts) {
		var ret map[string]interface{}
		return ret
	}
	return o.Lts
}

// GetLtsOk returns a tuple with the Lts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetLtsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Lts) {
		return map[string]interface{}{}, false
	}
	return o.Lts, true
}

// HasLts returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasLts() bool {
	if o != nil && !IsNil(o.Lts) {
		return true
	}

	return false
}

// SetLts gets a reference to the given map[string]interface{} and assigns it to the Lts field.
func (o *AdvisoryCycle) SetLts(v map[string]interface{}) {
	o.Lts = v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *AdvisoryCycle) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetReleaseLabel returns the ReleaseLabel field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetReleaseLabel() string {
	if o == nil || IsNil(o.ReleaseLabel) {
		var ret string
		return ret
	}
	return *o.ReleaseLabel
}

// GetReleaseLabelOk returns a tuple with the ReleaseLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetReleaseLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseLabel) {
		return nil, false
	}
	return o.ReleaseLabel, true
}

// HasReleaseLabel returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasReleaseLabel() bool {
	if o != nil && !IsNil(o.ReleaseLabel) {
		return true
	}

	return false
}

// SetReleaseLabel gets a reference to the given string and assigns it to the ReleaseLabel field.
func (o *AdvisoryCycle) SetReleaseLabel(v string) {
	o.ReleaseLabel = &v
}

// GetSupport returns the Support field value if set, zero value otherwise.
func (o *AdvisoryCycle) GetSupport() map[string]interface{} {
	if o == nil || IsNil(o.Support) {
		var ret map[string]interface{}
		return ret
	}
	return o.Support
}

// GetSupportOk returns a tuple with the Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCycle) GetSupportOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Support) {
		return map[string]interface{}{}, false
	}
	return o.Support, true
}

// HasSupport returns a boolean if a field has been set.
func (o *AdvisoryCycle) HasSupport() bool {
	if o != nil && !IsNil(o.Support) {
		return true
	}

	return false
}

// SetSupport gets a reference to the given map[string]interface{} and assigns it to the Support field.
func (o *AdvisoryCycle) SetSupport(v map[string]interface{}) {
	o.Support = v
}

func (o AdvisoryCycle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCycle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Codename) {
		toSerialize["codename"] = o.Codename
	}
	if !IsNil(o.Cycle) {
		toSerialize["cycle"] = o.Cycle
	}
	if !IsNil(o.Discontinued) {
		toSerialize["discontinued"] = o.Discontinued
	}
	if !IsNil(o.Eol) {
		toSerialize["eol"] = o.Eol
	}
	if !IsNil(o.ExtendedSupport) {
		toSerialize["extendedSupport"] = o.ExtendedSupport
	}
	if !IsNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	if !IsNil(o.LatestReleaseDate) {
		toSerialize["latestReleaseDate"] = o.LatestReleaseDate
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Lts) {
		toSerialize["lts"] = o.Lts
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["releaseDate"] = o.ReleaseDate
	}
	if !IsNil(o.ReleaseLabel) {
		toSerialize["releaseLabel"] = o.ReleaseLabel
	}
	if !IsNil(o.Support) {
		toSerialize["support"] = o.Support
	}
	return toSerialize, nil
}

type NullableAdvisoryCycle struct {
	value *AdvisoryCycle
	isSet bool
}

func (v NullableAdvisoryCycle) Get() *AdvisoryCycle {
	return v.value
}

func (v *NullableAdvisoryCycle) Set(val *AdvisoryCycle) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCycle) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCycle(val *AdvisoryCycle) *NullableAdvisoryCycle {
	return &NullableAdvisoryCycle{value: val, isSet: true}
}

func (v NullableAdvisoryCycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


