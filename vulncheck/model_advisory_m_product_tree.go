/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMProductTree type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMProductTree{}

// AdvisoryMProductTree struct for AdvisoryMProductTree
type AdvisoryMProductTree struct {
	Branch []AdvisoryMBranch `json:"Branch,omitempty"`
	FullProductName []AdvisoryMFullProductName `json:"FullProductName,omitempty"`
}

// NewAdvisoryMProductTree instantiates a new AdvisoryMProductTree object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMProductTree() *AdvisoryMProductTree {
	this := AdvisoryMProductTree{}
	return &this
}

// NewAdvisoryMProductTreeWithDefaults instantiates a new AdvisoryMProductTree object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMProductTreeWithDefaults() *AdvisoryMProductTree {
	this := AdvisoryMProductTree{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *AdvisoryMProductTree) GetBranch() []AdvisoryMBranch {
	if o == nil || IsNil(o.Branch) {
		var ret []AdvisoryMBranch
		return ret
	}
	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMProductTree) GetBranchOk() ([]AdvisoryMBranch, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *AdvisoryMProductTree) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given []AdvisoryMBranch and assigns it to the Branch field.
func (o *AdvisoryMProductTree) SetBranch(v []AdvisoryMBranch) {
	o.Branch = v
}

// GetFullProductName returns the FullProductName field value if set, zero value otherwise.
func (o *AdvisoryMProductTree) GetFullProductName() []AdvisoryMFullProductName {
	if o == nil || IsNil(o.FullProductName) {
		var ret []AdvisoryMFullProductName
		return ret
	}
	return o.FullProductName
}

// GetFullProductNameOk returns a tuple with the FullProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMProductTree) GetFullProductNameOk() ([]AdvisoryMFullProductName, bool) {
	if o == nil || IsNil(o.FullProductName) {
		return nil, false
	}
	return o.FullProductName, true
}

// HasFullProductName returns a boolean if a field has been set.
func (o *AdvisoryMProductTree) HasFullProductName() bool {
	if o != nil && !IsNil(o.FullProductName) {
		return true
	}

	return false
}

// SetFullProductName gets a reference to the given []AdvisoryMFullProductName and assigns it to the FullProductName field.
func (o *AdvisoryMProductTree) SetFullProductName(v []AdvisoryMFullProductName) {
	o.FullProductName = v
}

func (o AdvisoryMProductTree) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMProductTree) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branch) {
		toSerialize["Branch"] = o.Branch
	}
	if !IsNil(o.FullProductName) {
		toSerialize["FullProductName"] = o.FullProductName
	}
	return toSerialize, nil
}

type NullableAdvisoryMProductTree struct {
	value *AdvisoryMProductTree
	isSet bool
}

func (v NullableAdvisoryMProductTree) Get() *AdvisoryMProductTree {
	return v.value
}

func (v *NullableAdvisoryMProductTree) Set(val *AdvisoryMProductTree) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMProductTree) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMProductTree) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMProductTree(val *AdvisoryMProductTree) *NullableAdvisoryMProductTree {
	return &NullableAdvisoryMProductTree{value: val, isSet: true}
}

func (v NullableAdvisoryMProductTree) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMProductTree) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


