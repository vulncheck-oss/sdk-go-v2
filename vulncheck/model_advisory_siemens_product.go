/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensProduct{}

// AdvisorySiemensProduct struct for AdvisorySiemensProduct
type AdvisorySiemensProduct struct {
	Name *string `json:"name,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	ProductIdentificationHelper *AdvisorySiemensProductIdentificationHelper `json:"product_identification_helper,omitempty"`
}

// NewAdvisorySiemensProduct instantiates a new AdvisorySiemensProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensProduct() *AdvisorySiemensProduct {
	this := AdvisorySiemensProduct{}
	return &this
}

// NewAdvisorySiemensProductWithDefaults instantiates a new AdvisorySiemensProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensProductWithDefaults() *AdvisorySiemensProduct {
	this := AdvisorySiemensProduct{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisorySiemensProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisorySiemensProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisorySiemensProduct) SetName(v string) {
	o.Name = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *AdvisorySiemensProduct) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensProduct) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *AdvisorySiemensProduct) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *AdvisorySiemensProduct) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductIdentificationHelper returns the ProductIdentificationHelper field value if set, zero value otherwise.
func (o *AdvisorySiemensProduct) GetProductIdentificationHelper() AdvisorySiemensProductIdentificationHelper {
	if o == nil || IsNil(o.ProductIdentificationHelper) {
		var ret AdvisorySiemensProductIdentificationHelper
		return ret
	}
	return *o.ProductIdentificationHelper
}

// GetProductIdentificationHelperOk returns a tuple with the ProductIdentificationHelper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensProduct) GetProductIdentificationHelperOk() (*AdvisorySiemensProductIdentificationHelper, bool) {
	if o == nil || IsNil(o.ProductIdentificationHelper) {
		return nil, false
	}
	return o.ProductIdentificationHelper, true
}

// HasProductIdentificationHelper returns a boolean if a field has been set.
func (o *AdvisorySiemensProduct) HasProductIdentificationHelper() bool {
	if o != nil && !IsNil(o.ProductIdentificationHelper) {
		return true
	}

	return false
}

// SetProductIdentificationHelper gets a reference to the given AdvisorySiemensProductIdentificationHelper and assigns it to the ProductIdentificationHelper field.
func (o *AdvisorySiemensProduct) SetProductIdentificationHelper(v AdvisorySiemensProductIdentificationHelper) {
	o.ProductIdentificationHelper = &v
}

func (o AdvisorySiemensProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductIdentificationHelper) {
		toSerialize["product_identification_helper"] = o.ProductIdentificationHelper
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensProduct struct {
	value *AdvisorySiemensProduct
	isSet bool
}

func (v NullableAdvisorySiemensProduct) Get() *AdvisorySiemensProduct {
	return v.value
}

func (v *NullableAdvisorySiemensProduct) Set(val *AdvisorySiemensProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensProduct(val *AdvisorySiemensProduct) *NullableAdvisorySiemensProduct {
	return &NullableAdvisorySiemensProduct{value: val, isSet: true}
}

func (v NullableAdvisorySiemensProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


