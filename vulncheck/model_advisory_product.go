/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryProduct{}

// AdvisoryProduct struct for AdvisoryProduct
type AdvisoryProduct struct {
	Name *string `json:"name,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	ProductIdentificationHelper *map[string]string `json:"product_identification_helper,omitempty"`
}

// NewAdvisoryProduct instantiates a new AdvisoryProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryProduct() *AdvisoryProduct {
	this := AdvisoryProduct{}
	return &this
}

// NewAdvisoryProductWithDefaults instantiates a new AdvisoryProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryProductWithDefaults() *AdvisoryProduct {
	this := AdvisoryProduct{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryProduct) SetName(v string) {
	o.Name = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *AdvisoryProduct) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryProduct) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *AdvisoryProduct) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *AdvisoryProduct) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductIdentificationHelper returns the ProductIdentificationHelper field value if set, zero value otherwise.
func (o *AdvisoryProduct) GetProductIdentificationHelper() map[string]string {
	if o == nil || IsNil(o.ProductIdentificationHelper) {
		var ret map[string]string
		return ret
	}
	return *o.ProductIdentificationHelper
}

// GetProductIdentificationHelperOk returns a tuple with the ProductIdentificationHelper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryProduct) GetProductIdentificationHelperOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProductIdentificationHelper) {
		return nil, false
	}
	return o.ProductIdentificationHelper, true
}

// HasProductIdentificationHelper returns a boolean if a field has been set.
func (o *AdvisoryProduct) HasProductIdentificationHelper() bool {
	if o != nil && !IsNil(o.ProductIdentificationHelper) {
		return true
	}

	return false
}

// SetProductIdentificationHelper gets a reference to the given map[string]string and assigns it to the ProductIdentificationHelper field.
func (o *AdvisoryProduct) SetProductIdentificationHelper(v map[string]string) {
	o.ProductIdentificationHelper = &v
}

func (o AdvisoryProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductIdentificationHelper) {
		toSerialize["product_identification_helper"] = o.ProductIdentificationHelper
	}
	return toSerialize, nil
}

type NullableAdvisoryProduct struct {
	value *AdvisoryProduct
	isSet bool
}

func (v NullableAdvisoryProduct) Get() *AdvisoryProduct {
	return v.value
}

func (v *NullableAdvisoryProduct) Set(val *AdvisoryProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryProduct(val *AdvisoryProduct) *NullableAdvisoryProduct {
	return &NullableAdvisoryProduct{value: val, isSet: true}
}

func (v NullableAdvisoryProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


