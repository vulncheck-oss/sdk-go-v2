/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryEnisaIDProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryEnisaIDProduct{}

// AdvisoryEnisaIDProduct struct for AdvisoryEnisaIDProduct
type AdvisoryEnisaIDProduct struct {
	Id *string `json:"id,omitempty"`
	ProductName *string `json:"product_name,omitempty"`
	ProductVersion *string `json:"product_version,omitempty"`
}

// NewAdvisoryEnisaIDProduct instantiates a new AdvisoryEnisaIDProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryEnisaIDProduct() *AdvisoryEnisaIDProduct {
	this := AdvisoryEnisaIDProduct{}
	return &this
}

// NewAdvisoryEnisaIDProductWithDefaults instantiates a new AdvisoryEnisaIDProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryEnisaIDProductWithDefaults() *AdvisoryEnisaIDProduct {
	this := AdvisoryEnisaIDProduct{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryEnisaIDProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEnisaIDProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryEnisaIDProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryEnisaIDProduct) SetId(v string) {
	o.Id = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *AdvisoryEnisaIDProduct) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEnisaIDProduct) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *AdvisoryEnisaIDProduct) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *AdvisoryEnisaIDProduct) SetProductName(v string) {
	o.ProductName = &v
}

// GetProductVersion returns the ProductVersion field value if set, zero value otherwise.
func (o *AdvisoryEnisaIDProduct) GetProductVersion() string {
	if o == nil || IsNil(o.ProductVersion) {
		var ret string
		return ret
	}
	return *o.ProductVersion
}

// GetProductVersionOk returns a tuple with the ProductVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEnisaIDProduct) GetProductVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVersion) {
		return nil, false
	}
	return o.ProductVersion, true
}

// HasProductVersion returns a boolean if a field has been set.
func (o *AdvisoryEnisaIDProduct) HasProductVersion() bool {
	if o != nil && !IsNil(o.ProductVersion) {
		return true
	}

	return false
}

// SetProductVersion gets a reference to the given string and assigns it to the ProductVersion field.
func (o *AdvisoryEnisaIDProduct) SetProductVersion(v string) {
	o.ProductVersion = &v
}

func (o AdvisoryEnisaIDProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryEnisaIDProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProductName) {
		toSerialize["product_name"] = o.ProductName
	}
	if !IsNil(o.ProductVersion) {
		toSerialize["product_version"] = o.ProductVersion
	}
	return toSerialize, nil
}

type NullableAdvisoryEnisaIDProduct struct {
	value *AdvisoryEnisaIDProduct
	isSet bool
}

func (v NullableAdvisoryEnisaIDProduct) Get() *AdvisoryEnisaIDProduct {
	return v.value
}

func (v *NullableAdvisoryEnisaIDProduct) Set(val *AdvisoryEnisaIDProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryEnisaIDProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryEnisaIDProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryEnisaIDProduct(val *AdvisoryEnisaIDProduct) *NullableAdvisoryEnisaIDProduct {
	return &NullableAdvisoryEnisaIDProduct{value: val, isSet: true}
}

func (v NullableAdvisoryEnisaIDProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryEnisaIDProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


