/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAstra type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAstra{}

// AdvisoryAstra struct for AdvisoryAstra
type AdvisoryAstra struct {
	Bdu []string `json:"bdu,omitempty"`
	BulletinId *string `json:"bulletin_id,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	References []string `json:"references,omitempty"`
	SummaryRu *string `json:"summary_ru,omitempty"`
	TitleRu *string `json:"title_ru,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryAstra instantiates a new AdvisoryAstra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAstra() *AdvisoryAstra {
	this := AdvisoryAstra{}
	return &this
}

// NewAdvisoryAstraWithDefaults instantiates a new AdvisoryAstra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAstraWithDefaults() *AdvisoryAstra {
	this := AdvisoryAstra{}
	return &this
}

// GetBdu returns the Bdu field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetBdu() []string {
	if o == nil || IsNil(o.Bdu) {
		var ret []string
		return ret
	}
	return o.Bdu
}

// GetBduOk returns a tuple with the Bdu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetBduOk() ([]string, bool) {
	if o == nil || IsNil(o.Bdu) {
		return nil, false
	}
	return o.Bdu, true
}

// HasBdu returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasBdu() bool {
	if o != nil && !IsNil(o.Bdu) {
		return true
	}

	return false
}

// SetBdu gets a reference to the given []string and assigns it to the Bdu field.
func (o *AdvisoryAstra) SetBdu(v []string) {
	o.Bdu = v
}

// GetBulletinId returns the BulletinId field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetBulletinId() string {
	if o == nil || IsNil(o.BulletinId) {
		var ret string
		return ret
	}
	return *o.BulletinId
}

// GetBulletinIdOk returns a tuple with the BulletinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetBulletinIdOk() (*string, bool) {
	if o == nil || IsNil(o.BulletinId) {
		return nil, false
	}
	return o.BulletinId, true
}

// HasBulletinId returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasBulletinId() bool {
	if o != nil && !IsNil(o.BulletinId) {
		return true
	}

	return false
}

// SetBulletinId gets a reference to the given string and assigns it to the BulletinId field.
func (o *AdvisoryAstra) SetBulletinId(v string) {
	o.BulletinId = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryAstra) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryAstra) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryAstra) SetReferences(v []string) {
	o.References = v
}

// GetSummaryRu returns the SummaryRu field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetSummaryRu() string {
	if o == nil || IsNil(o.SummaryRu) {
		var ret string
		return ret
	}
	return *o.SummaryRu
}

// GetSummaryRuOk returns a tuple with the SummaryRu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetSummaryRuOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryRu) {
		return nil, false
	}
	return o.SummaryRu, true
}

// HasSummaryRu returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasSummaryRu() bool {
	if o != nil && !IsNil(o.SummaryRu) {
		return true
	}

	return false
}

// SetSummaryRu gets a reference to the given string and assigns it to the SummaryRu field.
func (o *AdvisoryAstra) SetSummaryRu(v string) {
	o.SummaryRu = &v
}

// GetTitleRu returns the TitleRu field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetTitleRu() string {
	if o == nil || IsNil(o.TitleRu) {
		var ret string
		return ret
	}
	return *o.TitleRu
}

// GetTitleRuOk returns a tuple with the TitleRu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetTitleRuOk() (*string, bool) {
	if o == nil || IsNil(o.TitleRu) {
		return nil, false
	}
	return o.TitleRu, true
}

// HasTitleRu returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasTitleRu() bool {
	if o != nil && !IsNil(o.TitleRu) {
		return true
	}

	return false
}

// SetTitleRu gets a reference to the given string and assigns it to the TitleRu field.
func (o *AdvisoryAstra) SetTitleRu(v string) {
	o.TitleRu = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryAstra) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAstra) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryAstra) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryAstra) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryAstra) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAstra) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bdu) {
		toSerialize["bdu"] = o.Bdu
	}
	if !IsNil(o.BulletinId) {
		toSerialize["bulletin_id"] = o.BulletinId
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.SummaryRu) {
		toSerialize["summary_ru"] = o.SummaryRu
	}
	if !IsNil(o.TitleRu) {
		toSerialize["title_ru"] = o.TitleRu
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryAstra struct {
	value *AdvisoryAstra
	isSet bool
}

func (v NullableAdvisoryAstra) Get() *AdvisoryAstra {
	return v.value
}

func (v *NullableAdvisoryAstra) Set(val *AdvisoryAstra) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAstra) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAstra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAstra(val *AdvisoryAstra) *NullableAdvisoryAstra {
	return &NullableAdvisoryAstra{value: val, isSet: true}
}

func (v NullableAdvisoryAstra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAstra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


