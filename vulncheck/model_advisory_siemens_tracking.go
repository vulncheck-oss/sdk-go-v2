/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensTracking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensTracking{}

// AdvisorySiemensTracking struct for AdvisorySiemensTracking
type AdvisorySiemensTracking struct {
	CurrentReleaseDate *string `json:"current_release_date,omitempty"`
	Generator *AdvisorySiemensGenerator `json:"generator,omitempty"`
	Id *string `json:"id,omitempty"`
	InitialReleaseDate *string `json:"initial_release_date,omitempty"`
	RevisionHistory []AdvisorySiemensRevisionHistory `json:"revision_history,omitempty"`
	Status *string `json:"status,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisorySiemensTracking instantiates a new AdvisorySiemensTracking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensTracking() *AdvisorySiemensTracking {
	this := AdvisorySiemensTracking{}
	return &this
}

// NewAdvisorySiemensTrackingWithDefaults instantiates a new AdvisorySiemensTracking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensTrackingWithDefaults() *AdvisorySiemensTracking {
	this := AdvisorySiemensTracking{}
	return &this
}

// GetCurrentReleaseDate returns the CurrentReleaseDate field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetCurrentReleaseDate() string {
	if o == nil || IsNil(o.CurrentReleaseDate) {
		var ret string
		return ret
	}
	return *o.CurrentReleaseDate
}

// GetCurrentReleaseDateOk returns a tuple with the CurrentReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetCurrentReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentReleaseDate) {
		return nil, false
	}
	return o.CurrentReleaseDate, true
}

// HasCurrentReleaseDate returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasCurrentReleaseDate() bool {
	if o != nil && !IsNil(o.CurrentReleaseDate) {
		return true
	}

	return false
}

// SetCurrentReleaseDate gets a reference to the given string and assigns it to the CurrentReleaseDate field.
func (o *AdvisorySiemensTracking) SetCurrentReleaseDate(v string) {
	o.CurrentReleaseDate = &v
}

// GetGenerator returns the Generator field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetGenerator() AdvisorySiemensGenerator {
	if o == nil || IsNil(o.Generator) {
		var ret AdvisorySiemensGenerator
		return ret
	}
	return *o.Generator
}

// GetGeneratorOk returns a tuple with the Generator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetGeneratorOk() (*AdvisorySiemensGenerator, bool) {
	if o == nil || IsNil(o.Generator) {
		return nil, false
	}
	return o.Generator, true
}

// HasGenerator returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasGenerator() bool {
	if o != nil && !IsNil(o.Generator) {
		return true
	}

	return false
}

// SetGenerator gets a reference to the given AdvisorySiemensGenerator and assigns it to the Generator field.
func (o *AdvisorySiemensTracking) SetGenerator(v AdvisorySiemensGenerator) {
	o.Generator = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisorySiemensTracking) SetId(v string) {
	o.Id = &v
}

// GetInitialReleaseDate returns the InitialReleaseDate field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetInitialReleaseDate() string {
	if o == nil || IsNil(o.InitialReleaseDate) {
		var ret string
		return ret
	}
	return *o.InitialReleaseDate
}

// GetInitialReleaseDateOk returns a tuple with the InitialReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetInitialReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.InitialReleaseDate) {
		return nil, false
	}
	return o.InitialReleaseDate, true
}

// HasInitialReleaseDate returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasInitialReleaseDate() bool {
	if o != nil && !IsNil(o.InitialReleaseDate) {
		return true
	}

	return false
}

// SetInitialReleaseDate gets a reference to the given string and assigns it to the InitialReleaseDate field.
func (o *AdvisorySiemensTracking) SetInitialReleaseDate(v string) {
	o.InitialReleaseDate = &v
}

// GetRevisionHistory returns the RevisionHistory field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetRevisionHistory() []AdvisorySiemensRevisionHistory {
	if o == nil || IsNil(o.RevisionHistory) {
		var ret []AdvisorySiemensRevisionHistory
		return ret
	}
	return o.RevisionHistory
}

// GetRevisionHistoryOk returns a tuple with the RevisionHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetRevisionHistoryOk() ([]AdvisorySiemensRevisionHistory, bool) {
	if o == nil || IsNil(o.RevisionHistory) {
		return nil, false
	}
	return o.RevisionHistory, true
}

// HasRevisionHistory returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasRevisionHistory() bool {
	if o != nil && !IsNil(o.RevisionHistory) {
		return true
	}

	return false
}

// SetRevisionHistory gets a reference to the given []AdvisorySiemensRevisionHistory and assigns it to the RevisionHistory field.
func (o *AdvisorySiemensTracking) SetRevisionHistory(v []AdvisorySiemensRevisionHistory) {
	o.RevisionHistory = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdvisorySiemensTracking) SetStatus(v string) {
	o.Status = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisorySiemensTracking) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensTracking) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisorySiemensTracking) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisorySiemensTracking) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisorySiemensTracking) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensTracking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentReleaseDate) {
		toSerialize["current_release_date"] = o.CurrentReleaseDate
	}
	if !IsNil(o.Generator) {
		toSerialize["generator"] = o.Generator
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InitialReleaseDate) {
		toSerialize["initial_release_date"] = o.InitialReleaseDate
	}
	if !IsNil(o.RevisionHistory) {
		toSerialize["revision_history"] = o.RevisionHistory
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensTracking struct {
	value *AdvisorySiemensTracking
	isSet bool
}

func (v NullableAdvisorySiemensTracking) Get() *AdvisorySiemensTracking {
	return v.value
}

func (v *NullableAdvisorySiemensTracking) Set(val *AdvisorySiemensTracking) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensTracking) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensTracking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensTracking(val *AdvisorySiemensTracking) *NullableAdvisorySiemensTracking {
	return &NullableAdvisorySiemensTracking{value: val, isSet: true}
}

func (v NullableAdvisorySiemensTracking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensTracking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


