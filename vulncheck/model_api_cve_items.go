/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCveItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCveItems{}

// ApiCveItems struct for ApiCveItems
type ApiCveItems struct {
	Configurations *ApiConfigurations `json:"configurations,omitempty"`
	Cve *ApiCVE `json:"cve,omitempty"`
	Impact *ApiImpact `json:"impact,omitempty"`
	LastModifiedDate *string `json:"lastModifiedDate,omitempty"`
	PublishedDate *string `json:"publishedDate,omitempty"`
	VcConfigurations *ApiConfigurations `json:"vcConfigurations,omitempty"`
	VcVulnerableCPEs []string `json:"vcVulnerableCPEs,omitempty"`
}

// NewApiCveItems instantiates a new ApiCveItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCveItems() *ApiCveItems {
	this := ApiCveItems{}
	return &this
}

// NewApiCveItemsWithDefaults instantiates a new ApiCveItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCveItemsWithDefaults() *ApiCveItems {
	this := ApiCveItems{}
	return &this
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *ApiCveItems) GetConfigurations() ApiConfigurations {
	if o == nil || IsNil(o.Configurations) {
		var ret ApiConfigurations
		return ret
	}
	return *o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetConfigurationsOk() (*ApiConfigurations, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *ApiCveItems) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given ApiConfigurations and assigns it to the Configurations field.
func (o *ApiCveItems) SetConfigurations(v ApiConfigurations) {
	o.Configurations = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiCveItems) GetCve() ApiCVE {
	if o == nil || IsNil(o.Cve) {
		var ret ApiCVE
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetCveOk() (*ApiCVE, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiCveItems) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given ApiCVE and assigns it to the Cve field.
func (o *ApiCveItems) SetCve(v ApiCVE) {
	o.Cve = &v
}

// GetImpact returns the Impact field value if set, zero value otherwise.
func (o *ApiCveItems) GetImpact() ApiImpact {
	if o == nil || IsNil(o.Impact) {
		var ret ApiImpact
		return ret
	}
	return *o.Impact
}

// GetImpactOk returns a tuple with the Impact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetImpactOk() (*ApiImpact, bool) {
	if o == nil || IsNil(o.Impact) {
		return nil, false
	}
	return o.Impact, true
}

// HasImpact returns a boolean if a field has been set.
func (o *ApiCveItems) HasImpact() bool {
	if o != nil && !IsNil(o.Impact) {
		return true
	}

	return false
}

// SetImpact gets a reference to the given ApiImpact and assigns it to the Impact field.
func (o *ApiCveItems) SetImpact(v ApiImpact) {
	o.Impact = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *ApiCveItems) GetLastModifiedDate() string {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *ApiCveItems) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *ApiCveItems) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

// GetPublishedDate returns the PublishedDate field value if set, zero value otherwise.
func (o *ApiCveItems) GetPublishedDate() string {
	if o == nil || IsNil(o.PublishedDate) {
		var ret string
		return ret
	}
	return *o.PublishedDate
}

// GetPublishedDateOk returns a tuple with the PublishedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetPublishedDateOk() (*string, bool) {
	if o == nil || IsNil(o.PublishedDate) {
		return nil, false
	}
	return o.PublishedDate, true
}

// HasPublishedDate returns a boolean if a field has been set.
func (o *ApiCveItems) HasPublishedDate() bool {
	if o != nil && !IsNil(o.PublishedDate) {
		return true
	}

	return false
}

// SetPublishedDate gets a reference to the given string and assigns it to the PublishedDate field.
func (o *ApiCveItems) SetPublishedDate(v string) {
	o.PublishedDate = &v
}

// GetVcConfigurations returns the VcConfigurations field value if set, zero value otherwise.
func (o *ApiCveItems) GetVcConfigurations() ApiConfigurations {
	if o == nil || IsNil(o.VcConfigurations) {
		var ret ApiConfigurations
		return ret
	}
	return *o.VcConfigurations
}

// GetVcConfigurationsOk returns a tuple with the VcConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetVcConfigurationsOk() (*ApiConfigurations, bool) {
	if o == nil || IsNil(o.VcConfigurations) {
		return nil, false
	}
	return o.VcConfigurations, true
}

// HasVcConfigurations returns a boolean if a field has been set.
func (o *ApiCveItems) HasVcConfigurations() bool {
	if o != nil && !IsNil(o.VcConfigurations) {
		return true
	}

	return false
}

// SetVcConfigurations gets a reference to the given ApiConfigurations and assigns it to the VcConfigurations field.
func (o *ApiCveItems) SetVcConfigurations(v ApiConfigurations) {
	o.VcConfigurations = &v
}

// GetVcVulnerableCPEs returns the VcVulnerableCPEs field value if set, zero value otherwise.
func (o *ApiCveItems) GetVcVulnerableCPEs() []string {
	if o == nil || IsNil(o.VcVulnerableCPEs) {
		var ret []string
		return ret
	}
	return o.VcVulnerableCPEs
}

// GetVcVulnerableCPEsOk returns a tuple with the VcVulnerableCPEs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItems) GetVcVulnerableCPEsOk() ([]string, bool) {
	if o == nil || IsNil(o.VcVulnerableCPEs) {
		return nil, false
	}
	return o.VcVulnerableCPEs, true
}

// HasVcVulnerableCPEs returns a boolean if a field has been set.
func (o *ApiCveItems) HasVcVulnerableCPEs() bool {
	if o != nil && !IsNil(o.VcVulnerableCPEs) {
		return true
	}

	return false
}

// SetVcVulnerableCPEs gets a reference to the given []string and assigns it to the VcVulnerableCPEs field.
func (o *ApiCveItems) SetVcVulnerableCPEs(v []string) {
	o.VcVulnerableCPEs = v
}

func (o ApiCveItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCveItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Impact) {
		toSerialize["impact"] = o.Impact
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.PublishedDate) {
		toSerialize["publishedDate"] = o.PublishedDate
	}
	if !IsNil(o.VcConfigurations) {
		toSerialize["vcConfigurations"] = o.VcConfigurations
	}
	if !IsNil(o.VcVulnerableCPEs) {
		toSerialize["vcVulnerableCPEs"] = o.VcVulnerableCPEs
	}
	return toSerialize, nil
}

type NullableApiCveItems struct {
	value *ApiCveItems
	isSet bool
}

func (v NullableApiCveItems) Get() *ApiCveItems {
	return v.value
}

func (v *NullableApiCveItems) Set(val *ApiCveItems) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCveItems) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCveItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCveItems(val *ApiCveItems) *NullableApiCveItems {
	return &NullableApiCveItems{value: val, isSet: true}
}

func (v NullableApiCveItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCveItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


