/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMITREAttackGroupNoID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMITREAttackGroupNoID{}

// AdvisoryMITREAttackGroupNoID struct for AdvisoryMITREAttackGroupNoID
type AdvisoryMITREAttackGroupNoID struct {
	Aliases []string `json:"aliases,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Techniques []AdvisoryMitreAttackTechnique `json:"techniques,omitempty"`
}

// NewAdvisoryMITREAttackGroupNoID instantiates a new AdvisoryMITREAttackGroupNoID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMITREAttackGroupNoID() *AdvisoryMITREAttackGroupNoID {
	this := AdvisoryMITREAttackGroupNoID{}
	return &this
}

// NewAdvisoryMITREAttackGroupNoIDWithDefaults instantiates a new AdvisoryMITREAttackGroupNoID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMITREAttackGroupNoIDWithDefaults() *AdvisoryMITREAttackGroupNoID {
	this := AdvisoryMITREAttackGroupNoID{}
	return &this
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *AdvisoryMITREAttackGroupNoID) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMITREAttackGroupNoID) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *AdvisoryMITREAttackGroupNoID) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *AdvisoryMITREAttackGroupNoID) SetAliases(v []string) {
	o.Aliases = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryMITREAttackGroupNoID) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMITREAttackGroupNoID) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryMITREAttackGroupNoID) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryMITREAttackGroupNoID) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryMITREAttackGroupNoID) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMITREAttackGroupNoID) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryMITREAttackGroupNoID) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryMITREAttackGroupNoID) SetName(v string) {
	o.Name = &v
}

// GetTechniques returns the Techniques field value if set, zero value otherwise.
func (o *AdvisoryMITREAttackGroupNoID) GetTechniques() []AdvisoryMitreAttackTechnique {
	if o == nil || IsNil(o.Techniques) {
		var ret []AdvisoryMitreAttackTechnique
		return ret
	}
	return o.Techniques
}

// GetTechniquesOk returns a tuple with the Techniques field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMITREAttackGroupNoID) GetTechniquesOk() ([]AdvisoryMitreAttackTechnique, bool) {
	if o == nil || IsNil(o.Techniques) {
		return nil, false
	}
	return o.Techniques, true
}

// HasTechniques returns a boolean if a field has been set.
func (o *AdvisoryMITREAttackGroupNoID) HasTechniques() bool {
	if o != nil && !IsNil(o.Techniques) {
		return true
	}

	return false
}

// SetTechniques gets a reference to the given []AdvisoryMitreAttackTechnique and assigns it to the Techniques field.
func (o *AdvisoryMITREAttackGroupNoID) SetTechniques(v []AdvisoryMitreAttackTechnique) {
	o.Techniques = v
}

func (o AdvisoryMITREAttackGroupNoID) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMITREAttackGroupNoID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Techniques) {
		toSerialize["techniques"] = o.Techniques
	}
	return toSerialize, nil
}

type NullableAdvisoryMITREAttackGroupNoID struct {
	value *AdvisoryMITREAttackGroupNoID
	isSet bool
}

func (v NullableAdvisoryMITREAttackGroupNoID) Get() *AdvisoryMITREAttackGroupNoID {
	return v.value
}

func (v *NullableAdvisoryMITREAttackGroupNoID) Set(val *AdvisoryMITREAttackGroupNoID) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMITREAttackGroupNoID) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMITREAttackGroupNoID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMITREAttackGroupNoID(val *AdvisoryMITREAttackGroupNoID) *NullableAdvisoryMITREAttackGroupNoID {
	return &NullableAdvisoryMITREAttackGroupNoID{value: val, isSet: true}
}

func (v NullableAdvisoryMITREAttackGroupNoID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMITREAttackGroupNoID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


