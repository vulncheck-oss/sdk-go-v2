/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCPE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCPE{}

// ApiCPE struct for ApiCPE
type ApiCPE struct {
	Edition *string `json:"edition,omitempty"`
	Language *string `json:"language,omitempty"`
	Other *string `json:"other,omitempty"`
	Part *string `json:"part,omitempty"`
	Product *string `json:"product,omitempty"`
	SwEdition *string `json:"sw_edition,omitempty"`
	TargetHw *string `json:"target_hw,omitempty"`
	TargetSw *string `json:"target_sw,omitempty"`
	Update *string `json:"update,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewApiCPE instantiates a new ApiCPE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCPE() *ApiCPE {
	this := ApiCPE{}
	return &this
}

// NewApiCPEWithDefaults instantiates a new ApiCPE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCPEWithDefaults() *ApiCPE {
	this := ApiCPE{}
	return &this
}

// GetEdition returns the Edition field value if set, zero value otherwise.
func (o *ApiCPE) GetEdition() string {
	if o == nil || IsNil(o.Edition) {
		var ret string
		return ret
	}
	return *o.Edition
}

// GetEditionOk returns a tuple with the Edition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetEditionOk() (*string, bool) {
	if o == nil || IsNil(o.Edition) {
		return nil, false
	}
	return o.Edition, true
}

// HasEdition returns a boolean if a field has been set.
func (o *ApiCPE) HasEdition() bool {
	if o != nil && !IsNil(o.Edition) {
		return true
	}

	return false
}

// SetEdition gets a reference to the given string and assigns it to the Edition field.
func (o *ApiCPE) SetEdition(v string) {
	o.Edition = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ApiCPE) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ApiCPE) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ApiCPE) SetLanguage(v string) {
	o.Language = &v
}

// GetOther returns the Other field value if set, zero value otherwise.
func (o *ApiCPE) GetOther() string {
	if o == nil || IsNil(o.Other) {
		var ret string
		return ret
	}
	return *o.Other
}

// GetOtherOk returns a tuple with the Other field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetOtherOk() (*string, bool) {
	if o == nil || IsNil(o.Other) {
		return nil, false
	}
	return o.Other, true
}

// HasOther returns a boolean if a field has been set.
func (o *ApiCPE) HasOther() bool {
	if o != nil && !IsNil(o.Other) {
		return true
	}

	return false
}

// SetOther gets a reference to the given string and assigns it to the Other field.
func (o *ApiCPE) SetOther(v string) {
	o.Other = &v
}

// GetPart returns the Part field value if set, zero value otherwise.
func (o *ApiCPE) GetPart() string {
	if o == nil || IsNil(o.Part) {
		var ret string
		return ret
	}
	return *o.Part
}

// GetPartOk returns a tuple with the Part field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetPartOk() (*string, bool) {
	if o == nil || IsNil(o.Part) {
		return nil, false
	}
	return o.Part, true
}

// HasPart returns a boolean if a field has been set.
func (o *ApiCPE) HasPart() bool {
	if o != nil && !IsNil(o.Part) {
		return true
	}

	return false
}

// SetPart gets a reference to the given string and assigns it to the Part field.
func (o *ApiCPE) SetPart(v string) {
	o.Part = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ApiCPE) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ApiCPE) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *ApiCPE) SetProduct(v string) {
	o.Product = &v
}

// GetSwEdition returns the SwEdition field value if set, zero value otherwise.
func (o *ApiCPE) GetSwEdition() string {
	if o == nil || IsNil(o.SwEdition) {
		var ret string
		return ret
	}
	return *o.SwEdition
}

// GetSwEditionOk returns a tuple with the SwEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetSwEditionOk() (*string, bool) {
	if o == nil || IsNil(o.SwEdition) {
		return nil, false
	}
	return o.SwEdition, true
}

// HasSwEdition returns a boolean if a field has been set.
func (o *ApiCPE) HasSwEdition() bool {
	if o != nil && !IsNil(o.SwEdition) {
		return true
	}

	return false
}

// SetSwEdition gets a reference to the given string and assigns it to the SwEdition field.
func (o *ApiCPE) SetSwEdition(v string) {
	o.SwEdition = &v
}

// GetTargetHw returns the TargetHw field value if set, zero value otherwise.
func (o *ApiCPE) GetTargetHw() string {
	if o == nil || IsNil(o.TargetHw) {
		var ret string
		return ret
	}
	return *o.TargetHw
}

// GetTargetHwOk returns a tuple with the TargetHw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetTargetHwOk() (*string, bool) {
	if o == nil || IsNil(o.TargetHw) {
		return nil, false
	}
	return o.TargetHw, true
}

// HasTargetHw returns a boolean if a field has been set.
func (o *ApiCPE) HasTargetHw() bool {
	if o != nil && !IsNil(o.TargetHw) {
		return true
	}

	return false
}

// SetTargetHw gets a reference to the given string and assigns it to the TargetHw field.
func (o *ApiCPE) SetTargetHw(v string) {
	o.TargetHw = &v
}

// GetTargetSw returns the TargetSw field value if set, zero value otherwise.
func (o *ApiCPE) GetTargetSw() string {
	if o == nil || IsNil(o.TargetSw) {
		var ret string
		return ret
	}
	return *o.TargetSw
}

// GetTargetSwOk returns a tuple with the TargetSw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetTargetSwOk() (*string, bool) {
	if o == nil || IsNil(o.TargetSw) {
		return nil, false
	}
	return o.TargetSw, true
}

// HasTargetSw returns a boolean if a field has been set.
func (o *ApiCPE) HasTargetSw() bool {
	if o != nil && !IsNil(o.TargetSw) {
		return true
	}

	return false
}

// SetTargetSw gets a reference to the given string and assigns it to the TargetSw field.
func (o *ApiCPE) SetTargetSw(v string) {
	o.TargetSw = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ApiCPE) GetUpdate() string {
	if o == nil || IsNil(o.Update) {
		var ret string
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ApiCPE) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given string and assigns it to the Update field.
func (o *ApiCPE) SetUpdate(v string) {
	o.Update = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ApiCPE) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ApiCPE) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ApiCPE) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApiCPE) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPE) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApiCPE) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ApiCPE) SetVersion(v string) {
	o.Version = &v
}

func (o ApiCPE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCPE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Edition) {
		toSerialize["edition"] = o.Edition
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Other) {
		toSerialize["other"] = o.Other
	}
	if !IsNil(o.Part) {
		toSerialize["part"] = o.Part
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.SwEdition) {
		toSerialize["sw_edition"] = o.SwEdition
	}
	if !IsNil(o.TargetHw) {
		toSerialize["target_hw"] = o.TargetHw
	}
	if !IsNil(o.TargetSw) {
		toSerialize["target_sw"] = o.TargetSw
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableApiCPE struct {
	value *ApiCPE
	isSet bool
}

func (v NullableApiCPE) Get() *ApiCPE {
	return v.value
}

func (v *NullableApiCPE) Set(val *ApiCPE) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCPE) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCPE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCPE(val *ApiCPE) *NullableApiCPE {
	return &NullableApiCPE{value: val, isSet: true}
}

func (v NullableApiCPE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCPE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


