/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryHardwareUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryHardwareUpdate{}

// AdvisoryHardwareUpdate struct for AdvisoryHardwareUpdate
type AdvisoryHardwareUpdate struct {
	AffectedVersions *string `json:"affectedVersions,omitempty"`
	Cves []string `json:"cves,omitempty"`
	HardwarePlatform *string `json:"hardwarePlatform,omitempty"`
	System *string `json:"system,omitempty"`
	UpdatedVersion *string `json:"updatedVersion,omitempty"`
}

// NewAdvisoryHardwareUpdate instantiates a new AdvisoryHardwareUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryHardwareUpdate() *AdvisoryHardwareUpdate {
	this := AdvisoryHardwareUpdate{}
	return &this
}

// NewAdvisoryHardwareUpdateWithDefaults instantiates a new AdvisoryHardwareUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryHardwareUpdateWithDefaults() *AdvisoryHardwareUpdate {
	this := AdvisoryHardwareUpdate{}
	return &this
}

// GetAffectedVersions returns the AffectedVersions field value if set, zero value otherwise.
func (o *AdvisoryHardwareUpdate) GetAffectedVersions() string {
	if o == nil || IsNil(o.AffectedVersions) {
		var ret string
		return ret
	}
	return *o.AffectedVersions
}

// GetAffectedVersionsOk returns a tuple with the AffectedVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHardwareUpdate) GetAffectedVersionsOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedVersions) {
		return nil, false
	}
	return o.AffectedVersions, true
}

// HasAffectedVersions returns a boolean if a field has been set.
func (o *AdvisoryHardwareUpdate) HasAffectedVersions() bool {
	if o != nil && !IsNil(o.AffectedVersions) {
		return true
	}

	return false
}

// SetAffectedVersions gets a reference to the given string and assigns it to the AffectedVersions field.
func (o *AdvisoryHardwareUpdate) SetAffectedVersions(v string) {
	o.AffectedVersions = &v
}

// GetCves returns the Cves field value if set, zero value otherwise.
func (o *AdvisoryHardwareUpdate) GetCves() []string {
	if o == nil || IsNil(o.Cves) {
		var ret []string
		return ret
	}
	return o.Cves
}

// GetCvesOk returns a tuple with the Cves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHardwareUpdate) GetCvesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cves) {
		return nil, false
	}
	return o.Cves, true
}

// HasCves returns a boolean if a field has been set.
func (o *AdvisoryHardwareUpdate) HasCves() bool {
	if o != nil && !IsNil(o.Cves) {
		return true
	}

	return false
}

// SetCves gets a reference to the given []string and assigns it to the Cves field.
func (o *AdvisoryHardwareUpdate) SetCves(v []string) {
	o.Cves = v
}

// GetHardwarePlatform returns the HardwarePlatform field value if set, zero value otherwise.
func (o *AdvisoryHardwareUpdate) GetHardwarePlatform() string {
	if o == nil || IsNil(o.HardwarePlatform) {
		var ret string
		return ret
	}
	return *o.HardwarePlatform
}

// GetHardwarePlatformOk returns a tuple with the HardwarePlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHardwareUpdate) GetHardwarePlatformOk() (*string, bool) {
	if o == nil || IsNil(o.HardwarePlatform) {
		return nil, false
	}
	return o.HardwarePlatform, true
}

// HasHardwarePlatform returns a boolean if a field has been set.
func (o *AdvisoryHardwareUpdate) HasHardwarePlatform() bool {
	if o != nil && !IsNil(o.HardwarePlatform) {
		return true
	}

	return false
}

// SetHardwarePlatform gets a reference to the given string and assigns it to the HardwarePlatform field.
func (o *AdvisoryHardwareUpdate) SetHardwarePlatform(v string) {
	o.HardwarePlatform = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *AdvisoryHardwareUpdate) GetSystem() string {
	if o == nil || IsNil(o.System) {
		var ret string
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHardwareUpdate) GetSystemOk() (*string, bool) {
	if o == nil || IsNil(o.System) {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *AdvisoryHardwareUpdate) HasSystem() bool {
	if o != nil && !IsNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given string and assigns it to the System field.
func (o *AdvisoryHardwareUpdate) SetSystem(v string) {
	o.System = &v
}

// GetUpdatedVersion returns the UpdatedVersion field value if set, zero value otherwise.
func (o *AdvisoryHardwareUpdate) GetUpdatedVersion() string {
	if o == nil || IsNil(o.UpdatedVersion) {
		var ret string
		return ret
	}
	return *o.UpdatedVersion
}

// GetUpdatedVersionOk returns a tuple with the UpdatedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHardwareUpdate) GetUpdatedVersionOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedVersion) {
		return nil, false
	}
	return o.UpdatedVersion, true
}

// HasUpdatedVersion returns a boolean if a field has been set.
func (o *AdvisoryHardwareUpdate) HasUpdatedVersion() bool {
	if o != nil && !IsNil(o.UpdatedVersion) {
		return true
	}

	return false
}

// SetUpdatedVersion gets a reference to the given string and assigns it to the UpdatedVersion field.
func (o *AdvisoryHardwareUpdate) SetUpdatedVersion(v string) {
	o.UpdatedVersion = &v
}

func (o AdvisoryHardwareUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryHardwareUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedVersions) {
		toSerialize["affectedVersions"] = o.AffectedVersions
	}
	if !IsNil(o.Cves) {
		toSerialize["cves"] = o.Cves
	}
	if !IsNil(o.HardwarePlatform) {
		toSerialize["hardwarePlatform"] = o.HardwarePlatform
	}
	if !IsNil(o.System) {
		toSerialize["system"] = o.System
	}
	if !IsNil(o.UpdatedVersion) {
		toSerialize["updatedVersion"] = o.UpdatedVersion
	}
	return toSerialize, nil
}

type NullableAdvisoryHardwareUpdate struct {
	value *AdvisoryHardwareUpdate
	isSet bool
}

func (v NullableAdvisoryHardwareUpdate) Get() *AdvisoryHardwareUpdate {
	return v.value
}

func (v *NullableAdvisoryHardwareUpdate) Set(val *AdvisoryHardwareUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryHardwareUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryHardwareUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryHardwareUpdate(val *AdvisoryHardwareUpdate) *NullableAdvisoryHardwareUpdate {
	return &NullableAdvisoryHardwareUpdate{value: val, isSet: true}
}

func (v NullableAdvisoryHardwareUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryHardwareUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


