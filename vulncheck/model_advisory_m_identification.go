/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMIdentification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMIdentification{}

// AdvisoryMIdentification struct for AdvisoryMIdentification
type AdvisoryMIdentification struct {
	Alias *AdvisoryIVal `json:"alias,omitempty"`
	Id *AdvisoryIVal `json:"id,omitempty"`
}

// NewAdvisoryMIdentification instantiates a new AdvisoryMIdentification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMIdentification() *AdvisoryMIdentification {
	this := AdvisoryMIdentification{}
	return &this
}

// NewAdvisoryMIdentificationWithDefaults instantiates a new AdvisoryMIdentification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMIdentificationWithDefaults() *AdvisoryMIdentification {
	this := AdvisoryMIdentification{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *AdvisoryMIdentification) GetAlias() AdvisoryIVal {
	if o == nil || IsNil(o.Alias) {
		var ret AdvisoryIVal
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMIdentification) GetAliasOk() (*AdvisoryIVal, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *AdvisoryMIdentification) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given AdvisoryIVal and assigns it to the Alias field.
func (o *AdvisoryMIdentification) SetAlias(v AdvisoryIVal) {
	o.Alias = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryMIdentification) GetId() AdvisoryIVal {
	if o == nil || IsNil(o.Id) {
		var ret AdvisoryIVal
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMIdentification) GetIdOk() (*AdvisoryIVal, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryMIdentification) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given AdvisoryIVal and assigns it to the Id field.
func (o *AdvisoryMIdentification) SetId(v AdvisoryIVal) {
	o.Id = &v
}

func (o AdvisoryMIdentification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMIdentification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableAdvisoryMIdentification struct {
	value *AdvisoryMIdentification
	isSet bool
}

func (v NullableAdvisoryMIdentification) Get() *AdvisoryMIdentification {
	return v.value
}

func (v *NullableAdvisoryMIdentification) Set(val *AdvisoryMIdentification) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMIdentification) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMIdentification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMIdentification(val *AdvisoryMIdentification) *NullableAdvisoryMIdentification {
	return &NullableAdvisoryMIdentification{value: val, isSet: true}
}

func (v NullableAdvisoryMIdentification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMIdentification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


