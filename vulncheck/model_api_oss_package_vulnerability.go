/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiOSSPackageVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOSSPackageVulnerability{}

// ApiOSSPackageVulnerability struct for ApiOSSPackageVulnerability
type ApiOSSPackageVulnerability struct {
	Detection *string `json:"detection,omitempty"`
	FixedVersion *string `json:"fixed_version,omitempty"`
}

// NewApiOSSPackageVulnerability instantiates a new ApiOSSPackageVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOSSPackageVulnerability() *ApiOSSPackageVulnerability {
	this := ApiOSSPackageVulnerability{}
	return &this
}

// NewApiOSSPackageVulnerabilityWithDefaults instantiates a new ApiOSSPackageVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOSSPackageVulnerabilityWithDefaults() *ApiOSSPackageVulnerability {
	this := ApiOSSPackageVulnerability{}
	return &this
}

// GetDetection returns the Detection field value if set, zero value otherwise.
func (o *ApiOSSPackageVulnerability) GetDetection() string {
	if o == nil || IsNil(o.Detection) {
		var ret string
		return ret
	}
	return *o.Detection
}

// GetDetectionOk returns a tuple with the Detection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOSSPackageVulnerability) GetDetectionOk() (*string, bool) {
	if o == nil || IsNil(o.Detection) {
		return nil, false
	}
	return o.Detection, true
}

// HasDetection returns a boolean if a field has been set.
func (o *ApiOSSPackageVulnerability) HasDetection() bool {
	if o != nil && !IsNil(o.Detection) {
		return true
	}

	return false
}

// SetDetection gets a reference to the given string and assigns it to the Detection field.
func (o *ApiOSSPackageVulnerability) SetDetection(v string) {
	o.Detection = &v
}

// GetFixedVersion returns the FixedVersion field value if set, zero value otherwise.
func (o *ApiOSSPackageVulnerability) GetFixedVersion() string {
	if o == nil || IsNil(o.FixedVersion) {
		var ret string
		return ret
	}
	return *o.FixedVersion
}

// GetFixedVersionOk returns a tuple with the FixedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOSSPackageVulnerability) GetFixedVersionOk() (*string, bool) {
	if o == nil || IsNil(o.FixedVersion) {
		return nil, false
	}
	return o.FixedVersion, true
}

// HasFixedVersion returns a boolean if a field has been set.
func (o *ApiOSSPackageVulnerability) HasFixedVersion() bool {
	if o != nil && !IsNil(o.FixedVersion) {
		return true
	}

	return false
}

// SetFixedVersion gets a reference to the given string and assigns it to the FixedVersion field.
func (o *ApiOSSPackageVulnerability) SetFixedVersion(v string) {
	o.FixedVersion = &v
}

func (o ApiOSSPackageVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOSSPackageVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detection) {
		toSerialize["detection"] = o.Detection
	}
	if !IsNil(o.FixedVersion) {
		toSerialize["fixed_version"] = o.FixedVersion
	}
	return toSerialize, nil
}

type NullableApiOSSPackageVulnerability struct {
	value *ApiOSSPackageVulnerability
	isSet bool
}

func (v NullableApiOSSPackageVulnerability) Get() *ApiOSSPackageVulnerability {
	return v.value
}

func (v *NullableApiOSSPackageVulnerability) Set(val *ApiOSSPackageVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOSSPackageVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOSSPackageVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOSSPackageVulnerability(val *ApiOSSPackageVulnerability) *NullableApiOSSPackageVulnerability {
	return &NullableApiOSSPackageVulnerability{value: val, isSet: true}
}

func (v NullableApiOSSPackageVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOSSPackageVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


