/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the PurlsPurlResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurlsPurlResponse{}

// PurlsPurlResponse struct for PurlsPurlResponse
type PurlsPurlResponse struct {
	Artifacts map[string]interface{} `json:"artifacts,omitempty"`
	Cves []string `json:"cves,omitempty"`
	Licenses []string `json:"licenses,omitempty"`
	Name *string `json:"name,omitempty"`
	PublishedDate *string `json:"published_date,omitempty"`
	Purl []string `json:"purl,omitempty"`
	Version *string `json:"version,omitempty"`
	Vulnerabilities []PurlsVulnerability `json:"vulnerabilities,omitempty"`
}

// NewPurlsPurlResponse instantiates a new PurlsPurlResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurlsPurlResponse() *PurlsPurlResponse {
	this := PurlsPurlResponse{}
	return &this
}

// NewPurlsPurlResponseWithDefaults instantiates a new PurlsPurlResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurlsPurlResponseWithDefaults() *PurlsPurlResponse {
	this := PurlsPurlResponse{}
	return &this
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetArtifacts() map[string]interface{} {
	if o == nil || IsNil(o.Artifacts) {
		var ret map[string]interface{}
		return ret
	}
	return o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetArtifactsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Artifacts) {
		return map[string]interface{}{}, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasArtifacts() bool {
	if o != nil && !IsNil(o.Artifacts) {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given map[string]interface{} and assigns it to the Artifacts field.
func (o *PurlsPurlResponse) SetArtifacts(v map[string]interface{}) {
	o.Artifacts = v
}

// GetCves returns the Cves field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetCves() []string {
	if o == nil || IsNil(o.Cves) {
		var ret []string
		return ret
	}
	return o.Cves
}

// GetCvesOk returns a tuple with the Cves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetCvesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cves) {
		return nil, false
	}
	return o.Cves, true
}

// HasCves returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasCves() bool {
	if o != nil && !IsNil(o.Cves) {
		return true
	}

	return false
}

// SetCves gets a reference to the given []string and assigns it to the Cves field.
func (o *PurlsPurlResponse) SetCves(v []string) {
	o.Cves = v
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetLicenses() []string {
	if o == nil || IsNil(o.Licenses) {
		var ret []string
		return ret
	}
	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetLicensesOk() ([]string, bool) {
	if o == nil || IsNil(o.Licenses) {
		return nil, false
	}
	return o.Licenses, true
}

// HasLicenses returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasLicenses() bool {
	if o != nil && !IsNil(o.Licenses) {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given []string and assigns it to the Licenses field.
func (o *PurlsPurlResponse) SetLicenses(v []string) {
	o.Licenses = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PurlsPurlResponse) SetName(v string) {
	o.Name = &v
}

// GetPublishedDate returns the PublishedDate field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetPublishedDate() string {
	if o == nil || IsNil(o.PublishedDate) {
		var ret string
		return ret
	}
	return *o.PublishedDate
}

// GetPublishedDateOk returns a tuple with the PublishedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetPublishedDateOk() (*string, bool) {
	if o == nil || IsNil(o.PublishedDate) {
		return nil, false
	}
	return o.PublishedDate, true
}

// HasPublishedDate returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasPublishedDate() bool {
	if o != nil && !IsNil(o.PublishedDate) {
		return true
	}

	return false
}

// SetPublishedDate gets a reference to the given string and assigns it to the PublishedDate field.
func (o *PurlsPurlResponse) SetPublishedDate(v string) {
	o.PublishedDate = &v
}

// GetPurl returns the Purl field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetPurl() []string {
	if o == nil || IsNil(o.Purl) {
		var ret []string
		return ret
	}
	return o.Purl
}

// GetPurlOk returns a tuple with the Purl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetPurlOk() ([]string, bool) {
	if o == nil || IsNil(o.Purl) {
		return nil, false
	}
	return o.Purl, true
}

// HasPurl returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasPurl() bool {
	if o != nil && !IsNil(o.Purl) {
		return true
	}

	return false
}

// SetPurl gets a reference to the given []string and assigns it to the Purl field.
func (o *PurlsPurlResponse) SetPurl(v []string) {
	o.Purl = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PurlsPurlResponse) SetVersion(v string) {
	o.Version = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *PurlsPurlResponse) GetVulnerabilities() []PurlsVulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []PurlsVulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurlsPurlResponse) GetVulnerabilitiesOk() ([]PurlsVulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *PurlsPurlResponse) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []PurlsVulnerability and assigns it to the Vulnerabilities field.
func (o *PurlsPurlResponse) SetVulnerabilities(v []PurlsVulnerability) {
	o.Vulnerabilities = v
}

func (o PurlsPurlResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurlsPurlResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Artifacts) {
		toSerialize["artifacts"] = o.Artifacts
	}
	if !IsNil(o.Cves) {
		toSerialize["cves"] = o.Cves
	}
	if !IsNil(o.Licenses) {
		toSerialize["licenses"] = o.Licenses
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PublishedDate) {
		toSerialize["published_date"] = o.PublishedDate
	}
	if !IsNil(o.Purl) {
		toSerialize["purl"] = o.Purl
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return toSerialize, nil
}

type NullablePurlsPurlResponse struct {
	value *PurlsPurlResponse
	isSet bool
}

func (v NullablePurlsPurlResponse) Get() *PurlsPurlResponse {
	return v.value
}

func (v *NullablePurlsPurlResponse) Set(val *PurlsPurlResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePurlsPurlResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePurlsPurlResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurlsPurlResponse(val *PurlsPurlResponse) *NullablePurlsPurlResponse {
	return &NullablePurlsPurlResponse{value: val, isSet: true}
}

func (v NullablePurlsPurlResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurlsPurlResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


