/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAndroidAffected type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAndroidAffected{}

// AdvisoryAndroidAffected struct for AdvisoryAndroidAffected
type AdvisoryAndroidAffected struct {
	EcosystemSpecific *AdvisoryEcoSystem `json:"ecosystem_specific,omitempty"`
	Package *AdvisoryAndroidPackage `json:"package,omitempty"`
	Ranges []AdvisoryAndroidRange `json:"ranges,omitempty"`
	Versions []string `json:"versions,omitempty"`
}

// NewAdvisoryAndroidAffected instantiates a new AdvisoryAndroidAffected object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAndroidAffected() *AdvisoryAndroidAffected {
	this := AdvisoryAndroidAffected{}
	return &this
}

// NewAdvisoryAndroidAffectedWithDefaults instantiates a new AdvisoryAndroidAffected object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAndroidAffectedWithDefaults() *AdvisoryAndroidAffected {
	this := AdvisoryAndroidAffected{}
	return &this
}

// GetEcosystemSpecific returns the EcosystemSpecific field value if set, zero value otherwise.
func (o *AdvisoryAndroidAffected) GetEcosystemSpecific() AdvisoryEcoSystem {
	if o == nil || IsNil(o.EcosystemSpecific) {
		var ret AdvisoryEcoSystem
		return ret
	}
	return *o.EcosystemSpecific
}

// GetEcosystemSpecificOk returns a tuple with the EcosystemSpecific field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAndroidAffected) GetEcosystemSpecificOk() (*AdvisoryEcoSystem, bool) {
	if o == nil || IsNil(o.EcosystemSpecific) {
		return nil, false
	}
	return o.EcosystemSpecific, true
}

// HasEcosystemSpecific returns a boolean if a field has been set.
func (o *AdvisoryAndroidAffected) HasEcosystemSpecific() bool {
	if o != nil && !IsNil(o.EcosystemSpecific) {
		return true
	}

	return false
}

// SetEcosystemSpecific gets a reference to the given AdvisoryEcoSystem and assigns it to the EcosystemSpecific field.
func (o *AdvisoryAndroidAffected) SetEcosystemSpecific(v AdvisoryEcoSystem) {
	o.EcosystemSpecific = &v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *AdvisoryAndroidAffected) GetPackage() AdvisoryAndroidPackage {
	if o == nil || IsNil(o.Package) {
		var ret AdvisoryAndroidPackage
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAndroidAffected) GetPackageOk() (*AdvisoryAndroidPackage, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *AdvisoryAndroidAffected) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given AdvisoryAndroidPackage and assigns it to the Package field.
func (o *AdvisoryAndroidAffected) SetPackage(v AdvisoryAndroidPackage) {
	o.Package = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *AdvisoryAndroidAffected) GetRanges() []AdvisoryAndroidRange {
	if o == nil || IsNil(o.Ranges) {
		var ret []AdvisoryAndroidRange
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAndroidAffected) GetRangesOk() ([]AdvisoryAndroidRange, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *AdvisoryAndroidAffected) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []AdvisoryAndroidRange and assigns it to the Ranges field.
func (o *AdvisoryAndroidAffected) SetRanges(v []AdvisoryAndroidRange) {
	o.Ranges = v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *AdvisoryAndroidAffected) GetVersions() []string {
	if o == nil || IsNil(o.Versions) {
		var ret []string
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAndroidAffected) GetVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *AdvisoryAndroidAffected) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []string and assigns it to the Versions field.
func (o *AdvisoryAndroidAffected) SetVersions(v []string) {
	o.Versions = v
}

func (o AdvisoryAndroidAffected) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAndroidAffected) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EcosystemSpecific) {
		toSerialize["ecosystem_specific"] = o.EcosystemSpecific
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableAdvisoryAndroidAffected struct {
	value *AdvisoryAndroidAffected
	isSet bool
}

func (v NullableAdvisoryAndroidAffected) Get() *AdvisoryAndroidAffected {
	return v.value
}

func (v *NullableAdvisoryAndroidAffected) Set(val *AdvisoryAndroidAffected) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAndroidAffected) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAndroidAffected) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAndroidAffected(val *AdvisoryAndroidAffected) *NullableAdvisoryAndroidAffected {
	return &NullableAdvisoryAndroidAffected{value: val, isSet: true}
}

func (v NullableAdvisoryAndroidAffected) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAndroidAffected) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


