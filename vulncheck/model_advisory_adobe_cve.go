/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAdobeCVE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAdobeCVE{}

// AdvisoryAdobeCVE struct for AdvisoryAdobeCVE
type AdvisoryAdobeCVE struct {
	Cve *string `json:"cve,omitempty"`
	CvssScore *string `json:"cvss_score,omitempty"`
	CvssVector *string `json:"cvss_vector,omitempty"`
}

// NewAdvisoryAdobeCVE instantiates a new AdvisoryAdobeCVE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAdobeCVE() *AdvisoryAdobeCVE {
	this := AdvisoryAdobeCVE{}
	return &this
}

// NewAdvisoryAdobeCVEWithDefaults instantiates a new AdvisoryAdobeCVE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAdobeCVEWithDefaults() *AdvisoryAdobeCVE {
	this := AdvisoryAdobeCVE{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAdobeCVE) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeCVE) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAdobeCVE) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *AdvisoryAdobeCVE) SetCve(v string) {
	o.Cve = &v
}

// GetCvssScore returns the CvssScore field value if set, zero value otherwise.
func (o *AdvisoryAdobeCVE) GetCvssScore() string {
	if o == nil || IsNil(o.CvssScore) {
		var ret string
		return ret
	}
	return *o.CvssScore
}

// GetCvssScoreOk returns a tuple with the CvssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeCVE) GetCvssScoreOk() (*string, bool) {
	if o == nil || IsNil(o.CvssScore) {
		return nil, false
	}
	return o.CvssScore, true
}

// HasCvssScore returns a boolean if a field has been set.
func (o *AdvisoryAdobeCVE) HasCvssScore() bool {
	if o != nil && !IsNil(o.CvssScore) {
		return true
	}

	return false
}

// SetCvssScore gets a reference to the given string and assigns it to the CvssScore field.
func (o *AdvisoryAdobeCVE) SetCvssScore(v string) {
	o.CvssScore = &v
}

// GetCvssVector returns the CvssVector field value if set, zero value otherwise.
func (o *AdvisoryAdobeCVE) GetCvssVector() string {
	if o == nil || IsNil(o.CvssVector) {
		var ret string
		return ret
	}
	return *o.CvssVector
}

// GetCvssVectorOk returns a tuple with the CvssVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeCVE) GetCvssVectorOk() (*string, bool) {
	if o == nil || IsNil(o.CvssVector) {
		return nil, false
	}
	return o.CvssVector, true
}

// HasCvssVector returns a boolean if a field has been set.
func (o *AdvisoryAdobeCVE) HasCvssVector() bool {
	if o != nil && !IsNil(o.CvssVector) {
		return true
	}

	return false
}

// SetCvssVector gets a reference to the given string and assigns it to the CvssVector field.
func (o *AdvisoryAdobeCVE) SetCvssVector(v string) {
	o.CvssVector = &v
}

func (o AdvisoryAdobeCVE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAdobeCVE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CvssScore) {
		toSerialize["cvss_score"] = o.CvssScore
	}
	if !IsNil(o.CvssVector) {
		toSerialize["cvss_vector"] = o.CvssVector
	}
	return toSerialize, nil
}

type NullableAdvisoryAdobeCVE struct {
	value *AdvisoryAdobeCVE
	isSet bool
}

func (v NullableAdvisoryAdobeCVE) Get() *AdvisoryAdobeCVE {
	return v.value
}

func (v *NullableAdvisoryAdobeCVE) Set(val *AdvisoryAdobeCVE) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAdobeCVE) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAdobeCVE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAdobeCVE(val *AdvisoryAdobeCVE) *NullableAdvisoryAdobeCVE {
	return &NullableAdvisoryAdobeCVE{value: val, isSet: true}
}

func (v NullableAdvisoryAdobeCVE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAdobeCVE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


