/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAndroidPackage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAndroidPackage{}

// AdvisoryAndroidPackage struct for AdvisoryAndroidPackage
type AdvisoryAndroidPackage struct {
	Ecosystem *string `json:"ecosystem,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewAdvisoryAndroidPackage instantiates a new AdvisoryAndroidPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAndroidPackage() *AdvisoryAndroidPackage {
	this := AdvisoryAndroidPackage{}
	return &this
}

// NewAdvisoryAndroidPackageWithDefaults instantiates a new AdvisoryAndroidPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAndroidPackageWithDefaults() *AdvisoryAndroidPackage {
	this := AdvisoryAndroidPackage{}
	return &this
}

// GetEcosystem returns the Ecosystem field value if set, zero value otherwise.
func (o *AdvisoryAndroidPackage) GetEcosystem() string {
	if o == nil || IsNil(o.Ecosystem) {
		var ret string
		return ret
	}
	return *o.Ecosystem
}

// GetEcosystemOk returns a tuple with the Ecosystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAndroidPackage) GetEcosystemOk() (*string, bool) {
	if o == nil || IsNil(o.Ecosystem) {
		return nil, false
	}
	return o.Ecosystem, true
}

// HasEcosystem returns a boolean if a field has been set.
func (o *AdvisoryAndroidPackage) HasEcosystem() bool {
	if o != nil && !IsNil(o.Ecosystem) {
		return true
	}

	return false
}

// SetEcosystem gets a reference to the given string and assigns it to the Ecosystem field.
func (o *AdvisoryAndroidPackage) SetEcosystem(v string) {
	o.Ecosystem = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryAndroidPackage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAndroidPackage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryAndroidPackage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryAndroidPackage) SetName(v string) {
	o.Name = &v
}

func (o AdvisoryAndroidPackage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAndroidPackage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ecosystem) {
		toSerialize["ecosystem"] = o.Ecosystem
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAdvisoryAndroidPackage struct {
	value *AdvisoryAndroidPackage
	isSet bool
}

func (v NullableAdvisoryAndroidPackage) Get() *AdvisoryAndroidPackage {
	return v.value
}

func (v *NullableAdvisoryAndroidPackage) Set(val *AdvisoryAndroidPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAndroidPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAndroidPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAndroidPackage(val *AdvisoryAndroidPackage) *NullableAdvisoryAndroidPackage {
	return &NullableAdvisoryAndroidPackage{value: val, isSet: true}
}

func (v NullableAdvisoryAndroidPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAndroidPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


