/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRange{}

// AdvisoryRange struct for AdvisoryRange
type AdvisoryRange struct {
	Events []AdvisoryEvent `json:"events,omitempty"`
	Repo *string `json:"repo,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewAdvisoryRange instantiates a new AdvisoryRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRange() *AdvisoryRange {
	this := AdvisoryRange{}
	return &this
}

// NewAdvisoryRangeWithDefaults instantiates a new AdvisoryRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRangeWithDefaults() *AdvisoryRange {
	this := AdvisoryRange{}
	return &this
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *AdvisoryRange) GetEvents() []AdvisoryEvent {
	if o == nil || IsNil(o.Events) {
		var ret []AdvisoryEvent
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRange) GetEventsOk() ([]AdvisoryEvent, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *AdvisoryRange) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []AdvisoryEvent and assigns it to the Events field.
func (o *AdvisoryRange) SetEvents(v []AdvisoryEvent) {
	o.Events = v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *AdvisoryRange) GetRepo() string {
	if o == nil || IsNil(o.Repo) {
		var ret string
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRange) GetRepoOk() (*string, bool) {
	if o == nil || IsNil(o.Repo) {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *AdvisoryRange) HasRepo() bool {
	if o != nil && !IsNil(o.Repo) {
		return true
	}

	return false
}

// SetRepo gets a reference to the given string and assigns it to the Repo field.
func (o *AdvisoryRange) SetRepo(v string) {
	o.Repo = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryRange) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRange) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryRange) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryRange) SetType(v string) {
	o.Type = &v
}

func (o AdvisoryRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Repo) {
		toSerialize["repo"] = o.Repo
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisoryRange struct {
	value *AdvisoryRange
	isSet bool
}

func (v NullableAdvisoryRange) Get() *AdvisoryRange {
	return v.value
}

func (v *NullableAdvisoryRange) Set(val *AdvisoryRange) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRange) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRange(val *AdvisoryRange) *NullableAdvisoryRange {
	return &NullableAdvisoryRange{value: val, isSet: true}
}

func (v NullableAdvisoryRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


