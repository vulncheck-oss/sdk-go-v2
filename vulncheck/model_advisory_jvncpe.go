/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryJVNCPE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryJVNCPE{}

// AdvisoryJVNCPE struct for AdvisoryJVNCPE
type AdvisoryJVNCPE struct {
	Cpe *string `json:"cpe,omitempty"`
	Product *string `json:"product,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryJVNCPE instantiates a new AdvisoryJVNCPE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryJVNCPE() *AdvisoryJVNCPE {
	this := AdvisoryJVNCPE{}
	return &this
}

// NewAdvisoryJVNCPEWithDefaults instantiates a new AdvisoryJVNCPE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryJVNCPEWithDefaults() *AdvisoryJVNCPE {
	this := AdvisoryJVNCPE{}
	return &this
}

// GetCpe returns the Cpe field value if set, zero value otherwise.
func (o *AdvisoryJVNCPE) GetCpe() string {
	if o == nil || IsNil(o.Cpe) {
		var ret string
		return ret
	}
	return *o.Cpe
}

// GetCpeOk returns a tuple with the Cpe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVNCPE) GetCpeOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe) {
		return nil, false
	}
	return o.Cpe, true
}

// HasCpe returns a boolean if a field has been set.
func (o *AdvisoryJVNCPE) HasCpe() bool {
	if o != nil && !IsNil(o.Cpe) {
		return true
	}

	return false
}

// SetCpe gets a reference to the given string and assigns it to the Cpe field.
func (o *AdvisoryJVNCPE) SetCpe(v string) {
	o.Cpe = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryJVNCPE) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVNCPE) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryJVNCPE) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryJVNCPE) SetProduct(v string) {
	o.Product = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *AdvisoryJVNCPE) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVNCPE) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *AdvisoryJVNCPE) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *AdvisoryJVNCPE) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryJVNCPE) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVNCPE) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryJVNCPE) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryJVNCPE) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryJVNCPE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryJVNCPE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpe) {
		toSerialize["cpe"] = o.Cpe
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryJVNCPE struct {
	value *AdvisoryJVNCPE
	isSet bool
}

func (v NullableAdvisoryJVNCPE) Get() *AdvisoryJVNCPE {
	return v.value
}

func (v *NullableAdvisoryJVNCPE) Set(val *AdvisoryJVNCPE) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryJVNCPE) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryJVNCPE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryJVNCPE(val *AdvisoryJVNCPE) *NullableAdvisoryJVNCPE {
	return &NullableAdvisoryJVNCPE{value: val, isSet: true}
}

func (v NullableAdvisoryJVNCPE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryJVNCPE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


