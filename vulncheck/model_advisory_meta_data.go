/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMetaData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMetaData{}

// AdvisoryMetaData struct for AdvisoryMetaData
type AdvisoryMetaData struct {
	Advisory *AdvisoryAdvisoryDetails `json:"advisory,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Packages []AdvisoryVulnCheckPackage `json:"packages,omitempty"`
	References []AdvisoryOvalReference `json:"references,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisoryMetaData instantiates a new AdvisoryMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMetaData() *AdvisoryMetaData {
	this := AdvisoryMetaData{}
	return &this
}

// NewAdvisoryMetaDataWithDefaults instantiates a new AdvisoryMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMetaDataWithDefaults() *AdvisoryMetaData {
	this := AdvisoryMetaData{}
	return &this
}

// GetAdvisory returns the Advisory field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetAdvisory() AdvisoryAdvisoryDetails {
	if o == nil || IsNil(o.Advisory) {
		var ret AdvisoryAdvisoryDetails
		return ret
	}
	return *o.Advisory
}

// GetAdvisoryOk returns a tuple with the Advisory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetAdvisoryOk() (*AdvisoryAdvisoryDetails, bool) {
	if o == nil || IsNil(o.Advisory) {
		return nil, false
	}
	return o.Advisory, true
}

// HasAdvisory returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasAdvisory() bool {
	if o != nil && !IsNil(o.Advisory) {
		return true
	}

	return false
}

// SetAdvisory gets a reference to the given AdvisoryAdvisoryDetails and assigns it to the Advisory field.
func (o *AdvisoryMetaData) SetAdvisory(v AdvisoryAdvisoryDetails) {
	o.Advisory = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryMetaData) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryMetaData) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryMetaData) SetDescription(v string) {
	o.Description = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetPackages() []AdvisoryVulnCheckPackage {
	if o == nil || IsNil(o.Packages) {
		var ret []AdvisoryVulnCheckPackage
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetPackagesOk() ([]AdvisoryVulnCheckPackage, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []AdvisoryVulnCheckPackage and assigns it to the Packages field.
func (o *AdvisoryMetaData) SetPackages(v []AdvisoryVulnCheckPackage) {
	o.Packages = v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetReferences() []AdvisoryOvalReference {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryOvalReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetReferencesOk() ([]AdvisoryOvalReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryOvalReference and assigns it to the References field.
func (o *AdvisoryMetaData) SetReferences(v []AdvisoryOvalReference) {
	o.References = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryMetaData) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMetaData) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryMetaData) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryMetaData) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisoryMetaData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMetaData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Advisory) {
		toSerialize["advisory"] = o.Advisory
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisoryMetaData struct {
	value *AdvisoryMetaData
	isSet bool
}

func (v NullableAdvisoryMetaData) Get() *AdvisoryMetaData {
	return v.value
}

func (v *NullableAdvisoryMetaData) Set(val *AdvisoryMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMetaData(val *AdvisoryMetaData) *NullableAdvisoryMetaData {
	return &NullableAdvisoryMetaData{value: val, isSet: true}
}

func (v NullableAdvisoryMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


