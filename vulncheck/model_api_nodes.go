/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNodes{}

// ApiNodes struct for ApiNodes
type ApiNodes struct {
	Children []ApiNodes `json:"children,omitempty"`
	CpeMatch []ApiCPEMatch `json:"cpe_match,omitempty"`
	Operator *string `json:"operator,omitempty"`
}

// NewApiNodes instantiates a new ApiNodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNodes() *ApiNodes {
	this := ApiNodes{}
	return &this
}

// NewApiNodesWithDefaults instantiates a new ApiNodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNodesWithDefaults() *ApiNodes {
	this := ApiNodes{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ApiNodes) GetChildren() []ApiNodes {
	if o == nil || IsNil(o.Children) {
		var ret []ApiNodes
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNodes) GetChildrenOk() ([]ApiNodes, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ApiNodes) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []ApiNodes and assigns it to the Children field.
func (o *ApiNodes) SetChildren(v []ApiNodes) {
	o.Children = v
}

// GetCpeMatch returns the CpeMatch field value if set, zero value otherwise.
func (o *ApiNodes) GetCpeMatch() []ApiCPEMatch {
	if o == nil || IsNil(o.CpeMatch) {
		var ret []ApiCPEMatch
		return ret
	}
	return o.CpeMatch
}

// GetCpeMatchOk returns a tuple with the CpeMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNodes) GetCpeMatchOk() ([]ApiCPEMatch, bool) {
	if o == nil || IsNil(o.CpeMatch) {
		return nil, false
	}
	return o.CpeMatch, true
}

// HasCpeMatch returns a boolean if a field has been set.
func (o *ApiNodes) HasCpeMatch() bool {
	if o != nil && !IsNil(o.CpeMatch) {
		return true
	}

	return false
}

// SetCpeMatch gets a reference to the given []ApiCPEMatch and assigns it to the CpeMatch field.
func (o *ApiNodes) SetCpeMatch(v []ApiCPEMatch) {
	o.CpeMatch = v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *ApiNodes) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNodes) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *ApiNodes) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *ApiNodes) SetOperator(v string) {
	o.Operator = &v
}

func (o ApiNodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.CpeMatch) {
		toSerialize["cpe_match"] = o.CpeMatch
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableApiNodes struct {
	value *ApiNodes
	isSet bool
}

func (v NullableApiNodes) Get() *ApiNodes {
	return v.value
}

func (v *NullableApiNodes) Set(val *ApiNodes) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNodes) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNodes(val *ApiNodes) *NullableApiNodes {
	return &NullableApiNodes{value: val, isSet: true}
}

func (v NullableApiNodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


