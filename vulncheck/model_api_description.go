/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiDescription{}

// ApiDescription struct for ApiDescription
type ApiDescription struct {
	DescriptionData []ApiDescriptionData `json:"description_data,omitempty"`
}

// NewApiDescription instantiates a new ApiDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiDescription() *ApiDescription {
	this := ApiDescription{}
	return &this
}

// NewApiDescriptionWithDefaults instantiates a new ApiDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiDescriptionWithDefaults() *ApiDescription {
	this := ApiDescription{}
	return &this
}

// GetDescriptionData returns the DescriptionData field value if set, zero value otherwise.
func (o *ApiDescription) GetDescriptionData() []ApiDescriptionData {
	if o == nil || IsNil(o.DescriptionData) {
		var ret []ApiDescriptionData
		return ret
	}
	return o.DescriptionData
}

// GetDescriptionDataOk returns a tuple with the DescriptionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiDescription) GetDescriptionDataOk() ([]ApiDescriptionData, bool) {
	if o == nil || IsNil(o.DescriptionData) {
		return nil, false
	}
	return o.DescriptionData, true
}

// HasDescriptionData returns a boolean if a field has been set.
func (o *ApiDescription) HasDescriptionData() bool {
	if o != nil && !IsNil(o.DescriptionData) {
		return true
	}

	return false
}

// SetDescriptionData gets a reference to the given []ApiDescriptionData and assigns it to the DescriptionData field.
func (o *ApiDescription) SetDescriptionData(v []ApiDescriptionData) {
	o.DescriptionData = v
}

func (o ApiDescription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DescriptionData) {
		toSerialize["description_data"] = o.DescriptionData
	}
	return toSerialize, nil
}

type NullableApiDescription struct {
	value *ApiDescription
	isSet bool
}

func (v NullableApiDescription) Get() *ApiDescription {
	return v.value
}

func (v *NullableApiDescription) Set(val *ApiDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableApiDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableApiDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiDescription(val *ApiDescription) *NullableApiDescription {
	return &NullableApiDescription{value: val, isSet: true}
}

func (v NullableApiDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


