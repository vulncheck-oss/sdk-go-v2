/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAlmaPackageList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAlmaPackageList{}

// AdvisoryAlmaPackageList struct for AdvisoryAlmaPackageList
type AdvisoryAlmaPackageList struct {
	Name *string `json:"name,omitempty"`
	Packages []AdvisoryAlmaPackage `json:"packages,omitempty"`
	Shortname *string `json:"shortname,omitempty"`
}

// NewAdvisoryAlmaPackageList instantiates a new AdvisoryAlmaPackageList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAlmaPackageList() *AdvisoryAlmaPackageList {
	this := AdvisoryAlmaPackageList{}
	return &this
}

// NewAdvisoryAlmaPackageListWithDefaults instantiates a new AdvisoryAlmaPackageList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAlmaPackageListWithDefaults() *AdvisoryAlmaPackageList {
	this := AdvisoryAlmaPackageList{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackageList) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackageList) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackageList) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryAlmaPackageList) SetName(v string) {
	o.Name = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackageList) GetPackages() []AdvisoryAlmaPackage {
	if o == nil || IsNil(o.Packages) {
		var ret []AdvisoryAlmaPackage
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackageList) GetPackagesOk() ([]AdvisoryAlmaPackage, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackageList) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []AdvisoryAlmaPackage and assigns it to the Packages field.
func (o *AdvisoryAlmaPackageList) SetPackages(v []AdvisoryAlmaPackage) {
	o.Packages = v
}

// GetShortname returns the Shortname field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackageList) GetShortname() string {
	if o == nil || IsNil(o.Shortname) {
		var ret string
		return ret
	}
	return *o.Shortname
}

// GetShortnameOk returns a tuple with the Shortname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackageList) GetShortnameOk() (*string, bool) {
	if o == nil || IsNil(o.Shortname) {
		return nil, false
	}
	return o.Shortname, true
}

// HasShortname returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackageList) HasShortname() bool {
	if o != nil && !IsNil(o.Shortname) {
		return true
	}

	return false
}

// SetShortname gets a reference to the given string and assigns it to the Shortname field.
func (o *AdvisoryAlmaPackageList) SetShortname(v string) {
	o.Shortname = &v
}

func (o AdvisoryAlmaPackageList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAlmaPackageList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.Shortname) {
		toSerialize["shortname"] = o.Shortname
	}
	return toSerialize, nil
}

type NullableAdvisoryAlmaPackageList struct {
	value *AdvisoryAlmaPackageList
	isSet bool
}

func (v NullableAdvisoryAlmaPackageList) Get() *AdvisoryAlmaPackageList {
	return v.value
}

func (v *NullableAdvisoryAlmaPackageList) Set(val *AdvisoryAlmaPackageList) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAlmaPackageList) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAlmaPackageList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAlmaPackageList(val *AdvisoryAlmaPackageList) *NullableAdvisoryAlmaPackageList {
	return &NullableAdvisoryAlmaPackageList{value: val, isSet: true}
}

func (v NullableAdvisoryAlmaPackageList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAlmaPackageList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


