/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryPTMDescriptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryPTMDescriptions{}

// AdvisoryPTMDescriptions struct for AdvisoryPTMDescriptions
type AdvisoryPTMDescriptions struct {
	CweId *string `json:"cweId,omitempty"`
	Description *string `json:"description,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewAdvisoryPTMDescriptions instantiates a new AdvisoryPTMDescriptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryPTMDescriptions() *AdvisoryPTMDescriptions {
	this := AdvisoryPTMDescriptions{}
	return &this
}

// NewAdvisoryPTMDescriptionsWithDefaults instantiates a new AdvisoryPTMDescriptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryPTMDescriptionsWithDefaults() *AdvisoryPTMDescriptions {
	this := AdvisoryPTMDescriptions{}
	return &this
}

// GetCweId returns the CweId field value if set, zero value otherwise.
func (o *AdvisoryPTMDescriptions) GetCweId() string {
	if o == nil || IsNil(o.CweId) {
		var ret string
		return ret
	}
	return *o.CweId
}

// GetCweIdOk returns a tuple with the CweId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPTMDescriptions) GetCweIdOk() (*string, bool) {
	if o == nil || IsNil(o.CweId) {
		return nil, false
	}
	return o.CweId, true
}

// HasCweId returns a boolean if a field has been set.
func (o *AdvisoryPTMDescriptions) HasCweId() bool {
	if o != nil && !IsNil(o.CweId) {
		return true
	}

	return false
}

// SetCweId gets a reference to the given string and assigns it to the CweId field.
func (o *AdvisoryPTMDescriptions) SetCweId(v string) {
	o.CweId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryPTMDescriptions) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPTMDescriptions) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryPTMDescriptions) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryPTMDescriptions) SetDescription(v string) {
	o.Description = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *AdvisoryPTMDescriptions) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPTMDescriptions) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *AdvisoryPTMDescriptions) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *AdvisoryPTMDescriptions) SetLang(v string) {
	o.Lang = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryPTMDescriptions) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPTMDescriptions) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryPTMDescriptions) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryPTMDescriptions) SetType(v string) {
	o.Type = &v
}

func (o AdvisoryPTMDescriptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryPTMDescriptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CweId) {
		toSerialize["cweId"] = o.CweId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisoryPTMDescriptions struct {
	value *AdvisoryPTMDescriptions
	isSet bool
}

func (v NullableAdvisoryPTMDescriptions) Get() *AdvisoryPTMDescriptions {
	return v.value
}

func (v *NullableAdvisoryPTMDescriptions) Set(val *AdvisoryPTMDescriptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryPTMDescriptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryPTMDescriptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryPTMDescriptions(val *AdvisoryPTMDescriptions) *NullableAdvisoryPTMDescriptions {
	return &NullableAdvisoryPTMDescriptions{value: val, isSet: true}
}

func (v NullableAdvisoryPTMDescriptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryPTMDescriptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


