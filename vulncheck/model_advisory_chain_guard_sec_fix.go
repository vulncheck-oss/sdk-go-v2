/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryChainGuardSecFix type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryChainGuardSecFix{}

// AdvisoryChainGuardSecFix struct for AdvisoryChainGuardSecFix
type AdvisoryChainGuardSecFix struct {
	Cve []string `json:"cve,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryChainGuardSecFix instantiates a new AdvisoryChainGuardSecFix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryChainGuardSecFix() *AdvisoryChainGuardSecFix {
	this := AdvisoryChainGuardSecFix{}
	return &this
}

// NewAdvisoryChainGuardSecFixWithDefaults instantiates a new AdvisoryChainGuardSecFix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryChainGuardSecFixWithDefaults() *AdvisoryChainGuardSecFix {
	this := AdvisoryChainGuardSecFix{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryChainGuardSecFix) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryChainGuardSecFix) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryChainGuardSecFix) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryChainGuardSecFix) SetCve(v []string) {
	o.Cve = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryChainGuardSecFix) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryChainGuardSecFix) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryChainGuardSecFix) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryChainGuardSecFix) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryChainGuardSecFix) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryChainGuardSecFix) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryChainGuardSecFix struct {
	value *AdvisoryChainGuardSecFix
	isSet bool
}

func (v NullableAdvisoryChainGuardSecFix) Get() *AdvisoryChainGuardSecFix {
	return v.value
}

func (v *NullableAdvisoryChainGuardSecFix) Set(val *AdvisoryChainGuardSecFix) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryChainGuardSecFix) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryChainGuardSecFix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryChainGuardSecFix(val *AdvisoryChainGuardSecFix) *NullableAdvisoryChainGuardSecFix {
	return &NullableAdvisoryChainGuardSecFix{value: val, isSet: true}
}

func (v NullableAdvisoryChainGuardSecFix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryChainGuardSecFix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


