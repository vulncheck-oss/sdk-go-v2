/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryVendorRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryVendorRef{}

// AdvisoryVendorRef struct for AdvisoryVendorRef
type AdvisoryVendorRef struct {
	VendorRef *string `json:"vendor_ref,omitempty"`
	VendorRefUrl *string `json:"vendor_ref_url,omitempty"`
}

// NewAdvisoryVendorRef instantiates a new AdvisoryVendorRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryVendorRef() *AdvisoryVendorRef {
	this := AdvisoryVendorRef{}
	return &this
}

// NewAdvisoryVendorRefWithDefaults instantiates a new AdvisoryVendorRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryVendorRefWithDefaults() *AdvisoryVendorRef {
	this := AdvisoryVendorRef{}
	return &this
}

// GetVendorRef returns the VendorRef field value if set, zero value otherwise.
func (o *AdvisoryVendorRef) GetVendorRef() string {
	if o == nil || IsNil(o.VendorRef) {
		var ret string
		return ret
	}
	return *o.VendorRef
}

// GetVendorRefOk returns a tuple with the VendorRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVendorRef) GetVendorRefOk() (*string, bool) {
	if o == nil || IsNil(o.VendorRef) {
		return nil, false
	}
	return o.VendorRef, true
}

// HasVendorRef returns a boolean if a field has been set.
func (o *AdvisoryVendorRef) HasVendorRef() bool {
	if o != nil && !IsNil(o.VendorRef) {
		return true
	}

	return false
}

// SetVendorRef gets a reference to the given string and assigns it to the VendorRef field.
func (o *AdvisoryVendorRef) SetVendorRef(v string) {
	o.VendorRef = &v
}

// GetVendorRefUrl returns the VendorRefUrl field value if set, zero value otherwise.
func (o *AdvisoryVendorRef) GetVendorRefUrl() string {
	if o == nil || IsNil(o.VendorRefUrl) {
		var ret string
		return ret
	}
	return *o.VendorRefUrl
}

// GetVendorRefUrlOk returns a tuple with the VendorRefUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVendorRef) GetVendorRefUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VendorRefUrl) {
		return nil, false
	}
	return o.VendorRefUrl, true
}

// HasVendorRefUrl returns a boolean if a field has been set.
func (o *AdvisoryVendorRef) HasVendorRefUrl() bool {
	if o != nil && !IsNil(o.VendorRefUrl) {
		return true
	}

	return false
}

// SetVendorRefUrl gets a reference to the given string and assigns it to the VendorRefUrl field.
func (o *AdvisoryVendorRef) SetVendorRefUrl(v string) {
	o.VendorRefUrl = &v
}

func (o AdvisoryVendorRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryVendorRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VendorRef) {
		toSerialize["vendor_ref"] = o.VendorRef
	}
	if !IsNil(o.VendorRefUrl) {
		toSerialize["vendor_ref_url"] = o.VendorRefUrl
	}
	return toSerialize, nil
}

type NullableAdvisoryVendorRef struct {
	value *AdvisoryVendorRef
	isSet bool
}

func (v NullableAdvisoryVendorRef) Get() *AdvisoryVendorRef {
	return v.value
}

func (v *NullableAdvisoryVendorRef) Set(val *AdvisoryVendorRef) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryVendorRef) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryVendorRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryVendorRef(val *AdvisoryVendorRef) *NullableAdvisoryVendorRef {
	return &NullableAdvisoryVendorRef{value: val, isSet: true}
}

func (v NullableAdvisoryVendorRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryVendorRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


