/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryNodeAuthor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryNodeAuthor{}

// AdvisoryNodeAuthor struct for AdvisoryNodeAuthor
type AdvisoryNodeAuthor struct {
	Author *string `json:"author,omitempty"`
	Username *string `json:"username,omitempty"`
	Website *string `json:"website,omitempty"`
}

// NewAdvisoryNodeAuthor instantiates a new AdvisoryNodeAuthor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryNodeAuthor() *AdvisoryNodeAuthor {
	this := AdvisoryNodeAuthor{}
	return &this
}

// NewAdvisoryNodeAuthorWithDefaults instantiates a new AdvisoryNodeAuthor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryNodeAuthorWithDefaults() *AdvisoryNodeAuthor {
	this := AdvisoryNodeAuthor{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *AdvisoryNodeAuthor) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNodeAuthor) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *AdvisoryNodeAuthor) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *AdvisoryNodeAuthor) SetAuthor(v string) {
	o.Author = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AdvisoryNodeAuthor) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNodeAuthor) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AdvisoryNodeAuthor) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AdvisoryNodeAuthor) SetUsername(v string) {
	o.Username = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *AdvisoryNodeAuthor) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNodeAuthor) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *AdvisoryNodeAuthor) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *AdvisoryNodeAuthor) SetWebsite(v string) {
	o.Website = &v
}

func (o AdvisoryNodeAuthor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryNodeAuthor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

type NullableAdvisoryNodeAuthor struct {
	value *AdvisoryNodeAuthor
	isSet bool
}

func (v NullableAdvisoryNodeAuthor) Get() *AdvisoryNodeAuthor {
	return v.value
}

func (v *NullableAdvisoryNodeAuthor) Set(val *AdvisoryNodeAuthor) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryNodeAuthor) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryNodeAuthor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryNodeAuthor(val *AdvisoryNodeAuthor) *NullableAdvisoryNodeAuthor {
	return &NullableAdvisoryNodeAuthor{value: val, isSet: true}
}

func (v NullableAdvisoryNodeAuthor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryNodeAuthor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


