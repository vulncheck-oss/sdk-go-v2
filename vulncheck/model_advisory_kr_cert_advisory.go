/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryKRCertAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryKRCertAdvisory{}

// AdvisoryKRCertAdvisory struct for AdvisoryKRCertAdvisory
type AdvisoryKRCertAdvisory struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DescriptionKo *string `json:"description_ko,omitempty"`
	Link *string `json:"link,omitempty"`
	OverviewKo *string `json:"overview_ko,omitempty"`
	References []string `json:"references,omitempty"`
	TitleKo *string `json:"title_ko,omitempty"`
}

// NewAdvisoryKRCertAdvisory instantiates a new AdvisoryKRCertAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryKRCertAdvisory() *AdvisoryKRCertAdvisory {
	this := AdvisoryKRCertAdvisory{}
	return &this
}

// NewAdvisoryKRCertAdvisoryWithDefaults instantiates a new AdvisoryKRCertAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryKRCertAdvisoryWithDefaults() *AdvisoryKRCertAdvisory {
	this := AdvisoryKRCertAdvisory{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryKRCertAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryKRCertAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescriptionKo returns the DescriptionKo field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetDescriptionKo() string {
	if o == nil || IsNil(o.DescriptionKo) {
		var ret string
		return ret
	}
	return *o.DescriptionKo
}

// GetDescriptionKoOk returns a tuple with the DescriptionKo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetDescriptionKoOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionKo) {
		return nil, false
	}
	return o.DescriptionKo, true
}

// HasDescriptionKo returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasDescriptionKo() bool {
	if o != nil && !IsNil(o.DescriptionKo) {
		return true
	}

	return false
}

// SetDescriptionKo gets a reference to the given string and assigns it to the DescriptionKo field.
func (o *AdvisoryKRCertAdvisory) SetDescriptionKo(v string) {
	o.DescriptionKo = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryKRCertAdvisory) SetLink(v string) {
	o.Link = &v
}

// GetOverviewKo returns the OverviewKo field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetOverviewKo() string {
	if o == nil || IsNil(o.OverviewKo) {
		var ret string
		return ret
	}
	return *o.OverviewKo
}

// GetOverviewKoOk returns a tuple with the OverviewKo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetOverviewKoOk() (*string, bool) {
	if o == nil || IsNil(o.OverviewKo) {
		return nil, false
	}
	return o.OverviewKo, true
}

// HasOverviewKo returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasOverviewKo() bool {
	if o != nil && !IsNil(o.OverviewKo) {
		return true
	}

	return false
}

// SetOverviewKo gets a reference to the given string and assigns it to the OverviewKo field.
func (o *AdvisoryKRCertAdvisory) SetOverviewKo(v string) {
	o.OverviewKo = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryKRCertAdvisory) SetReferences(v []string) {
	o.References = v
}

// GetTitleKo returns the TitleKo field value if set, zero value otherwise.
func (o *AdvisoryKRCertAdvisory) GetTitleKo() string {
	if o == nil || IsNil(o.TitleKo) {
		var ret string
		return ret
	}
	return *o.TitleKo
}

// GetTitleKoOk returns a tuple with the TitleKo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKRCertAdvisory) GetTitleKoOk() (*string, bool) {
	if o == nil || IsNil(o.TitleKo) {
		return nil, false
	}
	return o.TitleKo, true
}

// HasTitleKo returns a boolean if a field has been set.
func (o *AdvisoryKRCertAdvisory) HasTitleKo() bool {
	if o != nil && !IsNil(o.TitleKo) {
		return true
	}

	return false
}

// SetTitleKo gets a reference to the given string and assigns it to the TitleKo field.
func (o *AdvisoryKRCertAdvisory) SetTitleKo(v string) {
	o.TitleKo = &v
}

func (o AdvisoryKRCertAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryKRCertAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DescriptionKo) {
		toSerialize["description_ko"] = o.DescriptionKo
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.OverviewKo) {
		toSerialize["overview_ko"] = o.OverviewKo
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.TitleKo) {
		toSerialize["title_ko"] = o.TitleKo
	}
	return toSerialize, nil
}

type NullableAdvisoryKRCertAdvisory struct {
	value *AdvisoryKRCertAdvisory
	isSet bool
}

func (v NullableAdvisoryKRCertAdvisory) Get() *AdvisoryKRCertAdvisory {
	return v.value
}

func (v *NullableAdvisoryKRCertAdvisory) Set(val *AdvisoryKRCertAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryKRCertAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryKRCertAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryKRCertAdvisory(val *AdvisoryKRCertAdvisory) *NullableAdvisoryKRCertAdvisory {
	return &NullableAdvisoryKRCertAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryKRCertAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryKRCertAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


