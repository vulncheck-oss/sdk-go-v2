/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCISAAlert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCISAAlert{}

// AdvisoryCISAAlert struct for AdvisoryCISAAlert
type AdvisoryCISAAlert struct {
	AffectedProducts *string `json:"affectedProducts,omitempty"`
	AlertID *string `json:"alertID,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	Cve []string `json:"cve,omitempty"`
	CveexploitedITW *bool `json:"cveexploitedITW,omitempty"`
	Cvss *string `json:"cvss,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Icsa *bool `json:"icsa,omitempty"`
	Icsma *bool `json:"icsma,omitempty"`
	Mitigations *string `json:"mitigations,omitempty"`
	ReleaseDate *string `json:"releaseDate,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
}

// NewAdvisoryCISAAlert instantiates a new AdvisoryCISAAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCISAAlert() *AdvisoryCISAAlert {
	this := AdvisoryCISAAlert{}
	return &this
}

// NewAdvisoryCISAAlertWithDefaults instantiates a new AdvisoryCISAAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCISAAlertWithDefaults() *AdvisoryCISAAlert {
	this := AdvisoryCISAAlert{}
	return &this
}

// GetAffectedProducts returns the AffectedProducts field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetAffectedProducts() string {
	if o == nil || IsNil(o.AffectedProducts) {
		var ret string
		return ret
	}
	return *o.AffectedProducts
}

// GetAffectedProductsOk returns a tuple with the AffectedProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetAffectedProductsOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedProducts) {
		return nil, false
	}
	return o.AffectedProducts, true
}

// HasAffectedProducts returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasAffectedProducts() bool {
	if o != nil && !IsNil(o.AffectedProducts) {
		return true
	}

	return false
}

// SetAffectedProducts gets a reference to the given string and assigns it to the AffectedProducts field.
func (o *AdvisoryCISAAlert) SetAffectedProducts(v string) {
	o.AffectedProducts = &v
}

// GetAlertID returns the AlertID field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetAlertID() string {
	if o == nil || IsNil(o.AlertID) {
		var ret string
		return ret
	}
	return *o.AlertID
}

// GetAlertIDOk returns a tuple with the AlertID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetAlertIDOk() (*string, bool) {
	if o == nil || IsNil(o.AlertID) {
		return nil, false
	}
	return o.AlertID, true
}

// HasAlertID returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasAlertID() bool {
	if o != nil && !IsNil(o.AlertID) {
		return true
	}

	return false
}

// SetAlertID gets a reference to the given string and assigns it to the AlertID field.
func (o *AdvisoryCISAAlert) SetAlertID(v string) {
	o.AlertID = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetArchived() bool {
	if o == nil || IsNil(o.Archived) {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Archived) {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasArchived() bool {
	if o != nil && !IsNil(o.Archived) {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *AdvisoryCISAAlert) SetArchived(v bool) {
	o.Archived = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCISAAlert) SetCve(v []string) {
	o.Cve = v
}

// GetCveexploitedITW returns the CveexploitedITW field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetCveexploitedITW() bool {
	if o == nil || IsNil(o.CveexploitedITW) {
		var ret bool
		return ret
	}
	return *o.CveexploitedITW
}

// GetCveexploitedITWOk returns a tuple with the CveexploitedITW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetCveexploitedITWOk() (*bool, bool) {
	if o == nil || IsNil(o.CveexploitedITW) {
		return nil, false
	}
	return o.CveexploitedITW, true
}

// HasCveexploitedITW returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasCveexploitedITW() bool {
	if o != nil && !IsNil(o.CveexploitedITW) {
		return true
	}

	return false
}

// SetCveexploitedITW gets a reference to the given bool and assigns it to the CveexploitedITW field.
func (o *AdvisoryCISAAlert) SetCveexploitedITW(v bool) {
	o.CveexploitedITW = &v
}

// GetCvss returns the Cvss field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetCvss() string {
	if o == nil || IsNil(o.Cvss) {
		var ret string
		return ret
	}
	return *o.Cvss
}

// GetCvssOk returns a tuple with the Cvss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetCvssOk() (*string, bool) {
	if o == nil || IsNil(o.Cvss) {
		return nil, false
	}
	return o.Cvss, true
}

// HasCvss returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasCvss() bool {
	if o != nil && !IsNil(o.Cvss) {
		return true
	}

	return false
}

// SetCvss gets a reference to the given string and assigns it to the Cvss field.
func (o *AdvisoryCISAAlert) SetCvss(v string) {
	o.Cvss = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCISAAlert) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetIcsa returns the Icsa field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetIcsa() bool {
	if o == nil || IsNil(o.Icsa) {
		var ret bool
		return ret
	}
	return *o.Icsa
}

// GetIcsaOk returns a tuple with the Icsa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetIcsaOk() (*bool, bool) {
	if o == nil || IsNil(o.Icsa) {
		return nil, false
	}
	return o.Icsa, true
}

// HasIcsa returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasIcsa() bool {
	if o != nil && !IsNil(o.Icsa) {
		return true
	}

	return false
}

// SetIcsa gets a reference to the given bool and assigns it to the Icsa field.
func (o *AdvisoryCISAAlert) SetIcsa(v bool) {
	o.Icsa = &v
}

// GetIcsma returns the Icsma field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetIcsma() bool {
	if o == nil || IsNil(o.Icsma) {
		var ret bool
		return ret
	}
	return *o.Icsma
}

// GetIcsmaOk returns a tuple with the Icsma field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetIcsmaOk() (*bool, bool) {
	if o == nil || IsNil(o.Icsma) {
		return nil, false
	}
	return o.Icsma, true
}

// HasIcsma returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasIcsma() bool {
	if o != nil && !IsNil(o.Icsma) {
		return true
	}

	return false
}

// SetIcsma gets a reference to the given bool and assigns it to the Icsma field.
func (o *AdvisoryCISAAlert) SetIcsma(v bool) {
	o.Icsma = &v
}

// GetMitigations returns the Mitigations field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetMitigations() string {
	if o == nil || IsNil(o.Mitigations) {
		var ret string
		return ret
	}
	return *o.Mitigations
}

// GetMitigationsOk returns a tuple with the Mitigations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetMitigationsOk() (*string, bool) {
	if o == nil || IsNil(o.Mitigations) {
		return nil, false
	}
	return o.Mitigations, true
}

// HasMitigations returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasMitigations() bool {
	if o != nil && !IsNil(o.Mitigations) {
		return true
	}

	return false
}

// SetMitigations gets a reference to the given string and assigns it to the Mitigations field.
func (o *AdvisoryCISAAlert) SetMitigations(v string) {
	o.Mitigations = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *AdvisoryCISAAlert) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryCISAAlert) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryCISAAlert) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryCISAAlert) SetUrl(v string) {
	o.Url = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *AdvisoryCISAAlert) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCISAAlert) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *AdvisoryCISAAlert) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *AdvisoryCISAAlert) SetVendor(v string) {
	o.Vendor = &v
}

func (o AdvisoryCISAAlert) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCISAAlert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedProducts) {
		toSerialize["affectedProducts"] = o.AffectedProducts
	}
	if !IsNil(o.AlertID) {
		toSerialize["alertID"] = o.AlertID
	}
	if !IsNil(o.Archived) {
		toSerialize["archived"] = o.Archived
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CveexploitedITW) {
		toSerialize["cveexploitedITW"] = o.CveexploitedITW
	}
	if !IsNil(o.Cvss) {
		toSerialize["cvss"] = o.Cvss
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Icsa) {
		toSerialize["icsa"] = o.Icsa
	}
	if !IsNil(o.Icsma) {
		toSerialize["icsma"] = o.Icsma
	}
	if !IsNil(o.Mitigations) {
		toSerialize["mitigations"] = o.Mitigations
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["releaseDate"] = o.ReleaseDate
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	return toSerialize, nil
}

type NullableAdvisoryCISAAlert struct {
	value *AdvisoryCISAAlert
	isSet bool
}

func (v NullableAdvisoryCISAAlert) Get() *AdvisoryCISAAlert {
	return v.value
}

func (v *NullableAdvisoryCISAAlert) Set(val *AdvisoryCISAAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCISAAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCISAAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCISAAlert(val *AdvisoryCISAAlert) *NullableAdvisoryCISAAlert {
	return &NullableAdvisoryCISAAlert{value: val, isSet: true}
}

func (v NullableAdvisoryCISAAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCISAAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


