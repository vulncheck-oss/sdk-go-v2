/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAdobeSolution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAdobeSolution{}

// AdvisoryAdobeSolution struct for AdvisoryAdobeSolution
type AdvisoryAdobeSolution struct {
	Platform *string `json:"platform,omitempty"`
	Product *string `json:"product,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryAdobeSolution instantiates a new AdvisoryAdobeSolution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAdobeSolution() *AdvisoryAdobeSolution {
	this := AdvisoryAdobeSolution{}
	return &this
}

// NewAdvisoryAdobeSolutionWithDefaults instantiates a new AdvisoryAdobeSolution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAdobeSolutionWithDefaults() *AdvisoryAdobeSolution {
	this := AdvisoryAdobeSolution{}
	return &this
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *AdvisoryAdobeSolution) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeSolution) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *AdvisoryAdobeSolution) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *AdvisoryAdobeSolution) SetPlatform(v string) {
	o.Platform = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryAdobeSolution) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeSolution) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryAdobeSolution) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryAdobeSolution) SetProduct(v string) {
	o.Product = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryAdobeSolution) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeSolution) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryAdobeSolution) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryAdobeSolution) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryAdobeSolution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAdobeSolution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryAdobeSolution struct {
	value *AdvisoryAdobeSolution
	isSet bool
}

func (v NullableAdvisoryAdobeSolution) Get() *AdvisoryAdobeSolution {
	return v.value
}

func (v *NullableAdvisoryAdobeSolution) Set(val *AdvisoryAdobeSolution) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAdobeSolution) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAdobeSolution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAdobeSolution(val *AdvisoryAdobeSolution) *NullableAdvisoryAdobeSolution {
	return &NullableAdvisoryAdobeSolution{value: val, isSet: true}
}

func (v NullableAdvisoryAdobeSolution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAdobeSolution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


