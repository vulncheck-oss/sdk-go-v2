/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMProductStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMProductStatus{}

// AdvisoryMProductStatus struct for AdvisoryMProductStatus
type AdvisoryMProductStatus struct {
	ProductID []string `json:"ProductID,omitempty"`
	// diff
	Type *int32 `json:"type,omitempty"`
}

// NewAdvisoryMProductStatus instantiates a new AdvisoryMProductStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMProductStatus() *AdvisoryMProductStatus {
	this := AdvisoryMProductStatus{}
	return &this
}

// NewAdvisoryMProductStatusWithDefaults instantiates a new AdvisoryMProductStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMProductStatusWithDefaults() *AdvisoryMProductStatus {
	this := AdvisoryMProductStatus{}
	return &this
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *AdvisoryMProductStatus) GetProductID() []string {
	if o == nil || IsNil(o.ProductID) {
		var ret []string
		return ret
	}
	return o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMProductStatus) GetProductIDOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *AdvisoryMProductStatus) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *AdvisoryMProductStatus) SetProductID(v []string) {
	o.ProductID = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryMProductStatus) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMProductStatus) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryMProductStatus) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *AdvisoryMProductStatus) SetType(v int32) {
	o.Type = &v
}

func (o AdvisoryMProductStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMProductStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductID) {
		toSerialize["ProductID"] = o.ProductID
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisoryMProductStatus struct {
	value *AdvisoryMProductStatus
	isSet bool
}

func (v NullableAdvisoryMProductStatus) Get() *AdvisoryMProductStatus {
	return v.value
}

func (v *NullableAdvisoryMProductStatus) Set(val *AdvisoryMProductStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMProductStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMProductStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMProductStatus(val *AdvisoryMProductStatus) *NullableAdvisoryMProductStatus {
	return &NullableAdvisoryMProductStatus{value: val, isSet: true}
}

func (v NullableAdvisoryMProductStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMProductStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


