/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryOvalCVE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryOvalCVE{}

// AdvisoryOvalCVE struct for AdvisoryOvalCVE
type AdvisoryOvalCVE struct {
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisoryOvalCVE instantiates a new AdvisoryOvalCVE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryOvalCVE() *AdvisoryOvalCVE {
	this := AdvisoryOvalCVE{}
	return &this
}

// NewAdvisoryOvalCVEWithDefaults instantiates a new AdvisoryOvalCVE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryOvalCVEWithDefaults() *AdvisoryOvalCVE {
	this := AdvisoryOvalCVE{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *AdvisoryOvalCVE) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOvalCVE) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *AdvisoryOvalCVE) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *AdvisoryOvalCVE) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryOvalCVE) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOvalCVE) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryOvalCVE) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryOvalCVE) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryOvalCVE) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOvalCVE) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryOvalCVE) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryOvalCVE) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisoryOvalCVE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryOvalCVE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisoryOvalCVE struct {
	value *AdvisoryOvalCVE
	isSet bool
}

func (v NullableAdvisoryOvalCVE) Get() *AdvisoryOvalCVE {
	return v.value
}

func (v *NullableAdvisoryOvalCVE) Set(val *AdvisoryOvalCVE) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryOvalCVE) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryOvalCVE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryOvalCVE(val *AdvisoryOvalCVE) *NullableAdvisoryOvalCVE {
	return &NullableAdvisoryOvalCVE{value: val, isSet: true}
}

func (v NullableAdvisoryOvalCVE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryOvalCVE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


