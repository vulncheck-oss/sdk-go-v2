/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensAdvisory{}

// AdvisorySiemensAdvisory struct for AdvisorySiemensAdvisory
type AdvisorySiemensAdvisory struct {
	CsafUrl *string `json:"csaf_url,omitempty"`
	Cve []string `json:"cve,omitempty"`
	CvrfUrl *string `json:"cvrf_url,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	HtmlUrl *string `json:"html_url,omitempty"`
	Id *string `json:"id,omitempty"`
	// could potentially kill this in the future as it's a dupe
	LastUpdate *string `json:"last_update,omitempty"`
	PdfUrl *string `json:"pdf_url,omitempty"`
	Products []string `json:"products,omitempty"`
	Ssa *AdvisorySSASource `json:"ssa,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Title *string `json:"title,omitempty"`
	TxtUrl *string `json:"txt_url,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewAdvisorySiemensAdvisory instantiates a new AdvisorySiemensAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensAdvisory() *AdvisorySiemensAdvisory {
	this := AdvisorySiemensAdvisory{}
	return &this
}

// NewAdvisorySiemensAdvisoryWithDefaults instantiates a new AdvisorySiemensAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensAdvisoryWithDefaults() *AdvisorySiemensAdvisory {
	this := AdvisorySiemensAdvisory{}
	return &this
}

// GetCsafUrl returns the CsafUrl field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetCsafUrl() string {
	if o == nil || IsNil(o.CsafUrl) {
		var ret string
		return ret
	}
	return *o.CsafUrl
}

// GetCsafUrlOk returns a tuple with the CsafUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetCsafUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CsafUrl) {
		return nil, false
	}
	return o.CsafUrl, true
}

// HasCsafUrl returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasCsafUrl() bool {
	if o != nil && !IsNil(o.CsafUrl) {
		return true
	}

	return false
}

// SetCsafUrl gets a reference to the given string and assigns it to the CsafUrl field.
func (o *AdvisorySiemensAdvisory) SetCsafUrl(v string) {
	o.CsafUrl = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisorySiemensAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetCvrfUrl returns the CvrfUrl field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetCvrfUrl() string {
	if o == nil || IsNil(o.CvrfUrl) {
		var ret string
		return ret
	}
	return *o.CvrfUrl
}

// GetCvrfUrlOk returns a tuple with the CvrfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetCvrfUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CvrfUrl) {
		return nil, false
	}
	return o.CvrfUrl, true
}

// HasCvrfUrl returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasCvrfUrl() bool {
	if o != nil && !IsNil(o.CvrfUrl) {
		return true
	}

	return false
}

// SetCvrfUrl gets a reference to the given string and assigns it to the CvrfUrl field.
func (o *AdvisorySiemensAdvisory) SetCvrfUrl(v string) {
	o.CvrfUrl = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisorySiemensAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetHtmlUrl() string {
	if o == nil || IsNil(o.HtmlUrl) {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetHtmlUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlUrl) {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasHtmlUrl() bool {
	if o != nil && !IsNil(o.HtmlUrl) {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *AdvisorySiemensAdvisory) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisorySiemensAdvisory) SetId(v string) {
	o.Id = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetLastUpdate() string {
	if o == nil || IsNil(o.LastUpdate) {
		var ret string
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetLastUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given string and assigns it to the LastUpdate field.
func (o *AdvisorySiemensAdvisory) SetLastUpdate(v string) {
	o.LastUpdate = &v
}

// GetPdfUrl returns the PdfUrl field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetPdfUrl() string {
	if o == nil || IsNil(o.PdfUrl) {
		var ret string
		return ret
	}
	return *o.PdfUrl
}

// GetPdfUrlOk returns a tuple with the PdfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetPdfUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PdfUrl) {
		return nil, false
	}
	return o.PdfUrl, true
}

// HasPdfUrl returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasPdfUrl() bool {
	if o != nil && !IsNil(o.PdfUrl) {
		return true
	}

	return false
}

// SetPdfUrl gets a reference to the given string and assigns it to the PdfUrl field.
func (o *AdvisorySiemensAdvisory) SetPdfUrl(v string) {
	o.PdfUrl = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetProducts() []string {
	if o == nil || IsNil(o.Products) {
		var ret []string
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetProductsOk() ([]string, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []string and assigns it to the Products field.
func (o *AdvisorySiemensAdvisory) SetProducts(v []string) {
	o.Products = v
}

// GetSsa returns the Ssa field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetSsa() AdvisorySSASource {
	if o == nil || IsNil(o.Ssa) {
		var ret AdvisorySSASource
		return ret
	}
	return *o.Ssa
}

// GetSsaOk returns a tuple with the Ssa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetSsaOk() (*AdvisorySSASource, bool) {
	if o == nil || IsNil(o.Ssa) {
		return nil, false
	}
	return o.Ssa, true
}

// HasSsa returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasSsa() bool {
	if o != nil && !IsNil(o.Ssa) {
		return true
	}

	return false
}

// SetSsa gets a reference to the given AdvisorySSASource and assigns it to the Ssa field.
func (o *AdvisorySiemensAdvisory) SetSsa(v AdvisorySSASource) {
	o.Ssa = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AdvisorySiemensAdvisory) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisorySiemensAdvisory) SetTitle(v string) {
	o.Title = &v
}

// GetTxtUrl returns the TxtUrl field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetTxtUrl() string {
	if o == nil || IsNil(o.TxtUrl) {
		var ret string
		return ret
	}
	return *o.TxtUrl
}

// GetTxtUrlOk returns a tuple with the TxtUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetTxtUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TxtUrl) {
		return nil, false
	}
	return o.TxtUrl, true
}

// HasTxtUrl returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasTxtUrl() bool {
	if o != nil && !IsNil(o.TxtUrl) {
		return true
	}

	return false
}

// SetTxtUrl gets a reference to the given string and assigns it to the TxtUrl field.
func (o *AdvisorySiemensAdvisory) SetTxtUrl(v string) {
	o.TxtUrl = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisorySiemensAdvisory) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensAdvisory) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisorySiemensAdvisory) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisorySiemensAdvisory) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o AdvisorySiemensAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CsafUrl) {
		toSerialize["csaf_url"] = o.CsafUrl
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CvrfUrl) {
		toSerialize["cvrf_url"] = o.CvrfUrl
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.HtmlUrl) {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["last_update"] = o.LastUpdate
	}
	if !IsNil(o.PdfUrl) {
		toSerialize["pdf_url"] = o.PdfUrl
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.Ssa) {
		toSerialize["ssa"] = o.Ssa
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.TxtUrl) {
		toSerialize["txt_url"] = o.TxtUrl
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensAdvisory struct {
	value *AdvisorySiemensAdvisory
	isSet bool
}

func (v NullableAdvisorySiemensAdvisory) Get() *AdvisorySiemensAdvisory {
	return v.value
}

func (v *NullableAdvisorySiemensAdvisory) Set(val *AdvisorySiemensAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensAdvisory(val *AdvisorySiemensAdvisory) *NullableAdvisorySiemensAdvisory {
	return &NullableAdvisorySiemensAdvisory{value: val, isSet: true}
}

func (v NullableAdvisorySiemensAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


