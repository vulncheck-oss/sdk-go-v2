/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySchneiderElectricAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySchneiderElectricAdvisory{}

// AdvisorySchneiderElectricAdvisory struct for AdvisorySchneiderElectricAdvisory
type AdvisorySchneiderElectricAdvisory struct {
	CsafUrl *string `json:"csaf_url,omitempty"`
	Cve []string `json:"cve,omitempty"`
	Cwe []string `json:"cwe,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	PdfUrl *string `json:"pdf_url,omitempty"`
	SchneiderCves []AdvisorySchneiderCVE `json:"schneider_cves,omitempty"`
	SchneiderElectricId *string `json:"schneider_electric_id,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisorySchneiderElectricAdvisory instantiates a new AdvisorySchneiderElectricAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySchneiderElectricAdvisory() *AdvisorySchneiderElectricAdvisory {
	this := AdvisorySchneiderElectricAdvisory{}
	return &this
}

// NewAdvisorySchneiderElectricAdvisoryWithDefaults instantiates a new AdvisorySchneiderElectricAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySchneiderElectricAdvisoryWithDefaults() *AdvisorySchneiderElectricAdvisory {
	this := AdvisorySchneiderElectricAdvisory{}
	return &this
}

// GetCsafUrl returns the CsafUrl field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetCsafUrl() string {
	if o == nil || IsNil(o.CsafUrl) {
		var ret string
		return ret
	}
	return *o.CsafUrl
}

// GetCsafUrlOk returns a tuple with the CsafUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetCsafUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CsafUrl) {
		return nil, false
	}
	return o.CsafUrl, true
}

// HasCsafUrl returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasCsafUrl() bool {
	if o != nil && !IsNil(o.CsafUrl) {
		return true
	}

	return false
}

// SetCsafUrl gets a reference to the given string and assigns it to the CsafUrl field.
func (o *AdvisorySchneiderElectricAdvisory) SetCsafUrl(v string) {
	o.CsafUrl = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisorySchneiderElectricAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetCwe returns the Cwe field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetCwe() []string {
	if o == nil || IsNil(o.Cwe) {
		var ret []string
		return ret
	}
	return o.Cwe
}

// GetCweOk returns a tuple with the Cwe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetCweOk() ([]string, bool) {
	if o == nil || IsNil(o.Cwe) {
		return nil, false
	}
	return o.Cwe, true
}

// HasCwe returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasCwe() bool {
	if o != nil && !IsNil(o.Cwe) {
		return true
	}

	return false
}

// SetCwe gets a reference to the given []string and assigns it to the Cwe field.
func (o *AdvisorySchneiderElectricAdvisory) SetCwe(v []string) {
	o.Cwe = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisorySchneiderElectricAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetPdfUrl returns the PdfUrl field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetPdfUrl() string {
	if o == nil || IsNil(o.PdfUrl) {
		var ret string
		return ret
	}
	return *o.PdfUrl
}

// GetPdfUrlOk returns a tuple with the PdfUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetPdfUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PdfUrl) {
		return nil, false
	}
	return o.PdfUrl, true
}

// HasPdfUrl returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasPdfUrl() bool {
	if o != nil && !IsNil(o.PdfUrl) {
		return true
	}

	return false
}

// SetPdfUrl gets a reference to the given string and assigns it to the PdfUrl field.
func (o *AdvisorySchneiderElectricAdvisory) SetPdfUrl(v string) {
	o.PdfUrl = &v
}

// GetSchneiderCves returns the SchneiderCves field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetSchneiderCves() []AdvisorySchneiderCVE {
	if o == nil || IsNil(o.SchneiderCves) {
		var ret []AdvisorySchneiderCVE
		return ret
	}
	return o.SchneiderCves
}

// GetSchneiderCvesOk returns a tuple with the SchneiderCves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetSchneiderCvesOk() ([]AdvisorySchneiderCVE, bool) {
	if o == nil || IsNil(o.SchneiderCves) {
		return nil, false
	}
	return o.SchneiderCves, true
}

// HasSchneiderCves returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasSchneiderCves() bool {
	if o != nil && !IsNil(o.SchneiderCves) {
		return true
	}

	return false
}

// SetSchneiderCves gets a reference to the given []AdvisorySchneiderCVE and assigns it to the SchneiderCves field.
func (o *AdvisorySchneiderElectricAdvisory) SetSchneiderCves(v []AdvisorySchneiderCVE) {
	o.SchneiderCves = v
}

// GetSchneiderElectricId returns the SchneiderElectricId field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetSchneiderElectricId() string {
	if o == nil || IsNil(o.SchneiderElectricId) {
		var ret string
		return ret
	}
	return *o.SchneiderElectricId
}

// GetSchneiderElectricIdOk returns a tuple with the SchneiderElectricId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetSchneiderElectricIdOk() (*string, bool) {
	if o == nil || IsNil(o.SchneiderElectricId) {
		return nil, false
	}
	return o.SchneiderElectricId, true
}

// HasSchneiderElectricId returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasSchneiderElectricId() bool {
	if o != nil && !IsNil(o.SchneiderElectricId) {
		return true
	}

	return false
}

// SetSchneiderElectricId gets a reference to the given string and assigns it to the SchneiderElectricId field.
func (o *AdvisorySchneiderElectricAdvisory) SetSchneiderElectricId(v string) {
	o.SchneiderElectricId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisorySchneiderElectricAdvisory) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisorySchneiderElectricAdvisory) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisorySchneiderElectricAdvisory) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySchneiderElectricAdvisory) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisorySchneiderElectricAdvisory) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisorySchneiderElectricAdvisory) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisorySchneiderElectricAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySchneiderElectricAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CsafUrl) {
		toSerialize["csaf_url"] = o.CsafUrl
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cwe) {
		toSerialize["cwe"] = o.Cwe
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.PdfUrl) {
		toSerialize["pdf_url"] = o.PdfUrl
	}
	if !IsNil(o.SchneiderCves) {
		toSerialize["schneider_cves"] = o.SchneiderCves
	}
	if !IsNil(o.SchneiderElectricId) {
		toSerialize["schneider_electric_id"] = o.SchneiderElectricId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisorySchneiderElectricAdvisory struct {
	value *AdvisorySchneiderElectricAdvisory
	isSet bool
}

func (v NullableAdvisorySchneiderElectricAdvisory) Get() *AdvisorySchneiderElectricAdvisory {
	return v.value
}

func (v *NullableAdvisorySchneiderElectricAdvisory) Set(val *AdvisorySchneiderElectricAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySchneiderElectricAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySchneiderElectricAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySchneiderElectricAdvisory(val *AdvisorySchneiderElectricAdvisory) *NullableAdvisorySchneiderElectricAdvisory {
	return &NullableAdvisorySchneiderElectricAdvisory{value: val, isSet: true}
}

func (v NullableAdvisorySchneiderElectricAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySchneiderElectricAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


