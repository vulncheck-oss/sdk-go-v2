/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the RenderResponseWithMetadataArrayStringV3controllersResponseMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenderResponseWithMetadataArrayStringV3controllersResponseMetadata{}

// RenderResponseWithMetadataArrayStringV3controllersResponseMetadata struct for RenderResponseWithMetadataArrayStringV3controllersResponseMetadata
type RenderResponseWithMetadataArrayStringV3controllersResponseMetadata struct {
	Benchmark *float32 `json:"_benchmark,omitempty"`
	Meta *V3controllersResponseMetadata `json:"_meta,omitempty"`
	Data []string `json:"data,omitempty"`
}

// NewRenderResponseWithMetadataArrayStringV3controllersResponseMetadata instantiates a new RenderResponseWithMetadataArrayStringV3controllersResponseMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderResponseWithMetadataArrayStringV3controllersResponseMetadata() *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata {
	this := RenderResponseWithMetadataArrayStringV3controllersResponseMetadata{}
	return &this
}

// NewRenderResponseWithMetadataArrayStringV3controllersResponseMetadataWithDefaults instantiates a new RenderResponseWithMetadataArrayStringV3controllersResponseMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderResponseWithMetadataArrayStringV3controllersResponseMetadataWithDefaults() *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata {
	this := RenderResponseWithMetadataArrayStringV3controllersResponseMetadata{}
	return &this
}

// GetBenchmark returns the Benchmark field value if set, zero value otherwise.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) GetBenchmark() float32 {
	if o == nil || IsNil(o.Benchmark) {
		var ret float32
		return ret
	}
	return *o.Benchmark
}

// GetBenchmarkOk returns a tuple with the Benchmark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) GetBenchmarkOk() (*float32, bool) {
	if o == nil || IsNil(o.Benchmark) {
		return nil, false
	}
	return o.Benchmark, true
}

// HasBenchmark returns a boolean if a field has been set.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) HasBenchmark() bool {
	if o != nil && !IsNil(o.Benchmark) {
		return true
	}

	return false
}

// SetBenchmark gets a reference to the given float32 and assigns it to the Benchmark field.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) SetBenchmark(v float32) {
	o.Benchmark = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) GetMeta() V3controllersResponseMetadata {
	if o == nil || IsNil(o.Meta) {
		var ret V3controllersResponseMetadata
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) GetMetaOk() (*V3controllersResponseMetadata, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given V3controllersResponseMetadata and assigns it to the Meta field.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) SetMeta(v V3controllersResponseMetadata) {
	o.Meta = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) GetData() []string {
	if o == nil || IsNil(o.Data) {
		var ret []string
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) GetDataOk() ([]string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []string and assigns it to the Data field.
func (o *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) SetData(v []string) {
	o.Data = v
}

func (o RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Benchmark) {
		toSerialize["_benchmark"] = o.Benchmark
	}
	if !IsNil(o.Meta) {
		toSerialize["_meta"] = o.Meta
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata struct {
	value *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata
	isSet bool
}

func (v NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata) Get() *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata {
	return v.value
}

func (v *NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata) Set(val *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata(val *RenderResponseWithMetadataArrayStringV3controllersResponseMetadata) *NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata {
	return &NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata{value: val, isSet: true}
}

func (v NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderResponseWithMetadataArrayStringV3controllersResponseMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


