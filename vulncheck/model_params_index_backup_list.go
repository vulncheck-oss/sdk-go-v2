/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ParamsIndexBackupList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParamsIndexBackupList{}

// ParamsIndexBackupList struct for ParamsIndexBackupList
type ParamsIndexBackupList struct {
	Description *string `json:"description,omitempty"`
	// Href API endpoint URI to detailed backup information
	Href *string `json:"href,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewParamsIndexBackupList instantiates a new ParamsIndexBackupList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParamsIndexBackupList() *ParamsIndexBackupList {
	this := ParamsIndexBackupList{}
	return &this
}

// NewParamsIndexBackupListWithDefaults instantiates a new ParamsIndexBackupList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParamsIndexBackupListWithDefaults() *ParamsIndexBackupList {
	this := ParamsIndexBackupList{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ParamsIndexBackupList) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsIndexBackupList) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ParamsIndexBackupList) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ParamsIndexBackupList) SetDescription(v string) {
	o.Description = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ParamsIndexBackupList) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsIndexBackupList) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ParamsIndexBackupList) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ParamsIndexBackupList) SetHref(v string) {
	o.Href = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ParamsIndexBackupList) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsIndexBackupList) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ParamsIndexBackupList) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ParamsIndexBackupList) SetName(v string) {
	o.Name = &v
}

func (o ParamsIndexBackupList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParamsIndexBackupList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableParamsIndexBackupList struct {
	value *ParamsIndexBackupList
	isSet bool
}

func (v NullableParamsIndexBackupList) Get() *ParamsIndexBackupList {
	return v.value
}

func (v *NullableParamsIndexBackupList) Set(val *ParamsIndexBackupList) {
	v.value = val
	v.isSet = true
}

func (v NullableParamsIndexBackupList) IsSet() bool {
	return v.isSet
}

func (v *NullableParamsIndexBackupList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParamsIndexBackupList(val *ParamsIndexBackupList) *NullableParamsIndexBackupList {
	return &NullableParamsIndexBackupList{value: val, isSet: true}
}

func (v NullableParamsIndexBackupList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParamsIndexBackupList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


