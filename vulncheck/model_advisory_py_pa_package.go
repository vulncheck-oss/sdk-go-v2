/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryPyPAPackage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryPyPAPackage{}

// AdvisoryPyPAPackage struct for AdvisoryPyPAPackage
type AdvisoryPyPAPackage struct {
	Ecosystem *string `json:"ecosystem,omitempty"`
	Name *string `json:"name,omitempty"`
	Purl *string `json:"purl,omitempty"`
}

// NewAdvisoryPyPAPackage instantiates a new AdvisoryPyPAPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryPyPAPackage() *AdvisoryPyPAPackage {
	this := AdvisoryPyPAPackage{}
	return &this
}

// NewAdvisoryPyPAPackageWithDefaults instantiates a new AdvisoryPyPAPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryPyPAPackageWithDefaults() *AdvisoryPyPAPackage {
	this := AdvisoryPyPAPackage{}
	return &this
}

// GetEcosystem returns the Ecosystem field value if set, zero value otherwise.
func (o *AdvisoryPyPAPackage) GetEcosystem() string {
	if o == nil || IsNil(o.Ecosystem) {
		var ret string
		return ret
	}
	return *o.Ecosystem
}

// GetEcosystemOk returns a tuple with the Ecosystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPyPAPackage) GetEcosystemOk() (*string, bool) {
	if o == nil || IsNil(o.Ecosystem) {
		return nil, false
	}
	return o.Ecosystem, true
}

// HasEcosystem returns a boolean if a field has been set.
func (o *AdvisoryPyPAPackage) HasEcosystem() bool {
	if o != nil && !IsNil(o.Ecosystem) {
		return true
	}

	return false
}

// SetEcosystem gets a reference to the given string and assigns it to the Ecosystem field.
func (o *AdvisoryPyPAPackage) SetEcosystem(v string) {
	o.Ecosystem = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryPyPAPackage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPyPAPackage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryPyPAPackage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryPyPAPackage) SetName(v string) {
	o.Name = &v
}

// GetPurl returns the Purl field value if set, zero value otherwise.
func (o *AdvisoryPyPAPackage) GetPurl() string {
	if o == nil || IsNil(o.Purl) {
		var ret string
		return ret
	}
	return *o.Purl
}

// GetPurlOk returns a tuple with the Purl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPyPAPackage) GetPurlOk() (*string, bool) {
	if o == nil || IsNil(o.Purl) {
		return nil, false
	}
	return o.Purl, true
}

// HasPurl returns a boolean if a field has been set.
func (o *AdvisoryPyPAPackage) HasPurl() bool {
	if o != nil && !IsNil(o.Purl) {
		return true
	}

	return false
}

// SetPurl gets a reference to the given string and assigns it to the Purl field.
func (o *AdvisoryPyPAPackage) SetPurl(v string) {
	o.Purl = &v
}

func (o AdvisoryPyPAPackage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryPyPAPackage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ecosystem) {
		toSerialize["ecosystem"] = o.Ecosystem
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Purl) {
		toSerialize["purl"] = o.Purl
	}
	return toSerialize, nil
}

type NullableAdvisoryPyPAPackage struct {
	value *AdvisoryPyPAPackage
	isSet bool
}

func (v NullableAdvisoryPyPAPackage) Get() *AdvisoryPyPAPackage {
	return v.value
}

func (v *NullableAdvisoryPyPAPackage) Set(val *AdvisoryPyPAPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryPyPAPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryPyPAPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryPyPAPackage(val *AdvisoryPyPAPackage) *NullableAdvisoryPyPAPackage {
	return &NullableAdvisoryPyPAPackage{value: val, isSet: true}
}

func (v NullableAdvisoryPyPAPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryPyPAPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


