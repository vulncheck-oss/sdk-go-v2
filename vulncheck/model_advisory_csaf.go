/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCSAF type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCSAF{}

// AdvisoryCSAF struct for AdvisoryCSAF
type AdvisoryCSAF struct {
	// Document contains metadata about the CSAF document itself.  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#321-document-property
	Document *AdvisoryDocumentMetadata `json:"document,omitempty"`
	// Notes holds notes associated with the whole document. https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#3217-document-property---notes
	Notes []AdvisoryCSAFNote `json:"notes,omitempty"`
	// ProductTree contains information about the product tree (branches only).  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#322-product-tree-property
	ProductTree *AdvisoryProductBranch `json:"product_tree,omitempty"`
	// Vulnerabilities contains information about the vulnerabilities, (i.e. CVEs), associated threats, and product status.  https://docs.oasis-open.org/csaf/csaf/v2.0/os/csaf-v2.0-os.html#323-vulnerabilities-property
	Vulnerabilities []AdvisoryCSAFVulnerability `json:"vulnerabilities,omitempty"`
}

// NewAdvisoryCSAF instantiates a new AdvisoryCSAF object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCSAF() *AdvisoryCSAF {
	this := AdvisoryCSAF{}
	return &this
}

// NewAdvisoryCSAFWithDefaults instantiates a new AdvisoryCSAF object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCSAFWithDefaults() *AdvisoryCSAF {
	this := AdvisoryCSAF{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *AdvisoryCSAF) GetDocument() AdvisoryDocumentMetadata {
	if o == nil || IsNil(o.Document) {
		var ret AdvisoryDocumentMetadata
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAF) GetDocumentOk() (*AdvisoryDocumentMetadata, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *AdvisoryCSAF) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given AdvisoryDocumentMetadata and assigns it to the Document field.
func (o *AdvisoryCSAF) SetDocument(v AdvisoryDocumentMetadata) {
	o.Document = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisoryCSAF) GetNotes() []AdvisoryCSAFNote {
	if o == nil || IsNil(o.Notes) {
		var ret []AdvisoryCSAFNote
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAF) GetNotesOk() ([]AdvisoryCSAFNote, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisoryCSAF) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []AdvisoryCSAFNote and assigns it to the Notes field.
func (o *AdvisoryCSAF) SetNotes(v []AdvisoryCSAFNote) {
	o.Notes = v
}

// GetProductTree returns the ProductTree field value if set, zero value otherwise.
func (o *AdvisoryCSAF) GetProductTree() AdvisoryProductBranch {
	if o == nil || IsNil(o.ProductTree) {
		var ret AdvisoryProductBranch
		return ret
	}
	return *o.ProductTree
}

// GetProductTreeOk returns a tuple with the ProductTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAF) GetProductTreeOk() (*AdvisoryProductBranch, bool) {
	if o == nil || IsNil(o.ProductTree) {
		return nil, false
	}
	return o.ProductTree, true
}

// HasProductTree returns a boolean if a field has been set.
func (o *AdvisoryCSAF) HasProductTree() bool {
	if o != nil && !IsNil(o.ProductTree) {
		return true
	}

	return false
}

// SetProductTree gets a reference to the given AdvisoryProductBranch and assigns it to the ProductTree field.
func (o *AdvisoryCSAF) SetProductTree(v AdvisoryProductBranch) {
	o.ProductTree = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *AdvisoryCSAF) GetVulnerabilities() []AdvisoryCSAFVulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []AdvisoryCSAFVulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCSAF) GetVulnerabilitiesOk() ([]AdvisoryCSAFVulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *AdvisoryCSAF) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []AdvisoryCSAFVulnerability and assigns it to the Vulnerabilities field.
func (o *AdvisoryCSAF) SetVulnerabilities(v []AdvisoryCSAFVulnerability) {
	o.Vulnerabilities = v
}

func (o AdvisoryCSAF) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCSAF) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ProductTree) {
		toSerialize["product_tree"] = o.ProductTree
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return toSerialize, nil
}

type NullableAdvisoryCSAF struct {
	value *AdvisoryCSAF
	isSet bool
}

func (v NullableAdvisoryCSAF) Get() *AdvisoryCSAF {
	return v.value
}

func (v *NullableAdvisoryCSAF) Set(val *AdvisoryCSAF) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCSAF) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCSAF) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCSAF(val *AdvisoryCSAF) *NullableAdvisoryCSAF {
	return &NullableAdvisoryCSAF{value: val, isSet: true}
}

func (v NullableAdvisoryCSAF) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCSAF) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


