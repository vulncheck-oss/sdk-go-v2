/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryEmergingThreatsSnort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryEmergingThreatsSnort{}

// AdvisoryEmergingThreatsSnort struct for AdvisoryEmergingThreatsSnort
type AdvisoryEmergingThreatsSnort struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	References []string `json:"references,omitempty"`
	Rev *string `json:"rev,omitempty"`
	RuleDisabled *bool `json:"rule_disabled,omitempty"`
	RuleName *string `json:"rule_name,omitempty"`
	Sid *int32 `json:"sid,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryEmergingThreatsSnort instantiates a new AdvisoryEmergingThreatsSnort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryEmergingThreatsSnort() *AdvisoryEmergingThreatsSnort {
	this := AdvisoryEmergingThreatsSnort{}
	return &this
}

// NewAdvisoryEmergingThreatsSnortWithDefaults instantiates a new AdvisoryEmergingThreatsSnort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryEmergingThreatsSnortWithDefaults() *AdvisoryEmergingThreatsSnort {
	this := AdvisoryEmergingThreatsSnort{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryEmergingThreatsSnort) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryEmergingThreatsSnort) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryEmergingThreatsSnort) SetReferences(v []string) {
	o.References = v
}

// GetRev returns the Rev field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetRev() string {
	if o == nil || IsNil(o.Rev) {
		var ret string
		return ret
	}
	return *o.Rev
}

// GetRevOk returns a tuple with the Rev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetRevOk() (*string, bool) {
	if o == nil || IsNil(o.Rev) {
		return nil, false
	}
	return o.Rev, true
}

// HasRev returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasRev() bool {
	if o != nil && !IsNil(o.Rev) {
		return true
	}

	return false
}

// SetRev gets a reference to the given string and assigns it to the Rev field.
func (o *AdvisoryEmergingThreatsSnort) SetRev(v string) {
	o.Rev = &v
}

// GetRuleDisabled returns the RuleDisabled field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetRuleDisabled() bool {
	if o == nil || IsNil(o.RuleDisabled) {
		var ret bool
		return ret
	}
	return *o.RuleDisabled
}

// GetRuleDisabledOk returns a tuple with the RuleDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetRuleDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RuleDisabled) {
		return nil, false
	}
	return o.RuleDisabled, true
}

// HasRuleDisabled returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasRuleDisabled() bool {
	if o != nil && !IsNil(o.RuleDisabled) {
		return true
	}

	return false
}

// SetRuleDisabled gets a reference to the given bool and assigns it to the RuleDisabled field.
func (o *AdvisoryEmergingThreatsSnort) SetRuleDisabled(v bool) {
	o.RuleDisabled = &v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetRuleName() string {
	if o == nil || IsNil(o.RuleName) {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleName) {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasRuleName() bool {
	if o != nil && !IsNil(o.RuleName) {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *AdvisoryEmergingThreatsSnort) SetRuleName(v string) {
	o.RuleName = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetSid() int32 {
	if o == nil || IsNil(o.Sid) {
		var ret int32
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetSidOk() (*int32, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given int32 and assigns it to the Sid field.
func (o *AdvisoryEmergingThreatsSnort) SetSid(v int32) {
	o.Sid = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryEmergingThreatsSnort) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryEmergingThreatsSnort) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEmergingThreatsSnort) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryEmergingThreatsSnort) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryEmergingThreatsSnort) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryEmergingThreatsSnort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryEmergingThreatsSnort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Rev) {
		toSerialize["rev"] = o.Rev
	}
	if !IsNil(o.RuleDisabled) {
		toSerialize["rule_disabled"] = o.RuleDisabled
	}
	if !IsNil(o.RuleName) {
		toSerialize["rule_name"] = o.RuleName
	}
	if !IsNil(o.Sid) {
		toSerialize["sid"] = o.Sid
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryEmergingThreatsSnort struct {
	value *AdvisoryEmergingThreatsSnort
	isSet bool
}

func (v NullableAdvisoryEmergingThreatsSnort) Get() *AdvisoryEmergingThreatsSnort {
	return v.value
}

func (v *NullableAdvisoryEmergingThreatsSnort) Set(val *AdvisoryEmergingThreatsSnort) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryEmergingThreatsSnort) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryEmergingThreatsSnort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryEmergingThreatsSnort(val *AdvisoryEmergingThreatsSnort) *NullableAdvisoryEmergingThreatsSnort {
	return &NullableAdvisoryEmergingThreatsSnort{value: val, isSet: true}
}

func (v NullableAdvisoryEmergingThreatsSnort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryEmergingThreatsSnort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


