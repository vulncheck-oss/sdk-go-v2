/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryNVD20Configuration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryNVD20Configuration{}

// AdvisoryNVD20Configuration struct for AdvisoryNVD20Configuration
type AdvisoryNVD20Configuration struct {
	Negate *bool `json:"negate,omitempty"`
	Nodes []AdvisoryNVD20Node `json:"nodes,omitempty"`
	Operator *string `json:"operator,omitempty"`
}

// NewAdvisoryNVD20Configuration instantiates a new AdvisoryNVD20Configuration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryNVD20Configuration() *AdvisoryNVD20Configuration {
	this := AdvisoryNVD20Configuration{}
	return &this
}

// NewAdvisoryNVD20ConfigurationWithDefaults instantiates a new AdvisoryNVD20Configuration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryNVD20ConfigurationWithDefaults() *AdvisoryNVD20Configuration {
	this := AdvisoryNVD20Configuration{}
	return &this
}

// GetNegate returns the Negate field value if set, zero value otherwise.
func (o *AdvisoryNVD20Configuration) GetNegate() bool {
	if o == nil || IsNil(o.Negate) {
		var ret bool
		return ret
	}
	return *o.Negate
}

// GetNegateOk returns a tuple with the Negate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNVD20Configuration) GetNegateOk() (*bool, bool) {
	if o == nil || IsNil(o.Negate) {
		return nil, false
	}
	return o.Negate, true
}

// HasNegate returns a boolean if a field has been set.
func (o *AdvisoryNVD20Configuration) HasNegate() bool {
	if o != nil && !IsNil(o.Negate) {
		return true
	}

	return false
}

// SetNegate gets a reference to the given bool and assigns it to the Negate field.
func (o *AdvisoryNVD20Configuration) SetNegate(v bool) {
	o.Negate = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *AdvisoryNVD20Configuration) GetNodes() []AdvisoryNVD20Node {
	if o == nil || IsNil(o.Nodes) {
		var ret []AdvisoryNVD20Node
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNVD20Configuration) GetNodesOk() ([]AdvisoryNVD20Node, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *AdvisoryNVD20Configuration) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []AdvisoryNVD20Node and assigns it to the Nodes field.
func (o *AdvisoryNVD20Configuration) SetNodes(v []AdvisoryNVD20Node) {
	o.Nodes = v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *AdvisoryNVD20Configuration) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNVD20Configuration) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *AdvisoryNVD20Configuration) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *AdvisoryNVD20Configuration) SetOperator(v string) {
	o.Operator = &v
}

func (o AdvisoryNVD20Configuration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryNVD20Configuration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Negate) {
		toSerialize["negate"] = o.Negate
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableAdvisoryNVD20Configuration struct {
	value *AdvisoryNVD20Configuration
	isSet bool
}

func (v NullableAdvisoryNVD20Configuration) Get() *AdvisoryNVD20Configuration {
	return v.value
}

func (v *NullableAdvisoryNVD20Configuration) Set(val *AdvisoryNVD20Configuration) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryNVD20Configuration) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryNVD20Configuration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryNVD20Configuration(val *AdvisoryNVD20Configuration) *NullableAdvisoryNVD20Configuration {
	return &NullableAdvisoryNVD20Configuration{value: val, isSet: true}
}

func (v NullableAdvisoryNVD20Configuration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryNVD20Configuration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


