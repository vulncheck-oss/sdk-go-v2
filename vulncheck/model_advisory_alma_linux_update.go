/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAlmaLinuxUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAlmaLinuxUpdate{}

// AdvisoryAlmaLinuxUpdate struct for AdvisoryAlmaLinuxUpdate
type AdvisoryAlmaLinuxUpdate struct {
	BsRepoId *AdvisoryAlmaObjectID `json:"bs_repo_id,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Fromstr *string `json:"fromstr,omitempty"`
	Id *AdvisoryAlmaObjectID `json:"id,omitempty"`
	IssuedDate *AdvisoryAlmaDate `json:"issued_date,omitempty"`
	Pkglist *AdvisoryAlmaPackageList `json:"pkglist,omitempty"`
	Pushcount *string `json:"pushcount,omitempty"`
	References []AdvisoryAlmaReference `json:"references,omitempty"`
	Release *string `json:"release,omitempty"`
	Rights *string `json:"rights,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Solution *string `json:"solution,omitempty"`
	Status *string `json:"status,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdateUrl *string `json:"update_url,omitempty"`
	UpdatedDate *AdvisoryAlmaDate `json:"updated_date,omitempty"`
	UpdateinfoId *string `json:"updateinfo_id,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryAlmaLinuxUpdate instantiates a new AdvisoryAlmaLinuxUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAlmaLinuxUpdate() *AdvisoryAlmaLinuxUpdate {
	this := AdvisoryAlmaLinuxUpdate{}
	return &this
}

// NewAdvisoryAlmaLinuxUpdateWithDefaults instantiates a new AdvisoryAlmaLinuxUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAlmaLinuxUpdateWithDefaults() *AdvisoryAlmaLinuxUpdate {
	this := AdvisoryAlmaLinuxUpdate{}
	return &this
}

// GetBsRepoId returns the BsRepoId field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetBsRepoId() AdvisoryAlmaObjectID {
	if o == nil || IsNil(o.BsRepoId) {
		var ret AdvisoryAlmaObjectID
		return ret
	}
	return *o.BsRepoId
}

// GetBsRepoIdOk returns a tuple with the BsRepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetBsRepoIdOk() (*AdvisoryAlmaObjectID, bool) {
	if o == nil || IsNil(o.BsRepoId) {
		return nil, false
	}
	return o.BsRepoId, true
}

// HasBsRepoId returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasBsRepoId() bool {
	if o != nil && !IsNil(o.BsRepoId) {
		return true
	}

	return false
}

// SetBsRepoId gets a reference to the given AdvisoryAlmaObjectID and assigns it to the BsRepoId field.
func (o *AdvisoryAlmaLinuxUpdate) SetBsRepoId(v AdvisoryAlmaObjectID) {
	o.BsRepoId = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryAlmaLinuxUpdate) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryAlmaLinuxUpdate) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryAlmaLinuxUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetFromstr returns the Fromstr field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetFromstr() string {
	if o == nil || IsNil(o.Fromstr) {
		var ret string
		return ret
	}
	return *o.Fromstr
}

// GetFromstrOk returns a tuple with the Fromstr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetFromstrOk() (*string, bool) {
	if o == nil || IsNil(o.Fromstr) {
		return nil, false
	}
	return o.Fromstr, true
}

// HasFromstr returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasFromstr() bool {
	if o != nil && !IsNil(o.Fromstr) {
		return true
	}

	return false
}

// SetFromstr gets a reference to the given string and assigns it to the Fromstr field.
func (o *AdvisoryAlmaLinuxUpdate) SetFromstr(v string) {
	o.Fromstr = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetId() AdvisoryAlmaObjectID {
	if o == nil || IsNil(o.Id) {
		var ret AdvisoryAlmaObjectID
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetIdOk() (*AdvisoryAlmaObjectID, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given AdvisoryAlmaObjectID and assigns it to the Id field.
func (o *AdvisoryAlmaLinuxUpdate) SetId(v AdvisoryAlmaObjectID) {
	o.Id = &v
}

// GetIssuedDate returns the IssuedDate field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetIssuedDate() AdvisoryAlmaDate {
	if o == nil || IsNil(o.IssuedDate) {
		var ret AdvisoryAlmaDate
		return ret
	}
	return *o.IssuedDate
}

// GetIssuedDateOk returns a tuple with the IssuedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetIssuedDateOk() (*AdvisoryAlmaDate, bool) {
	if o == nil || IsNil(o.IssuedDate) {
		return nil, false
	}
	return o.IssuedDate, true
}

// HasIssuedDate returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasIssuedDate() bool {
	if o != nil && !IsNil(o.IssuedDate) {
		return true
	}

	return false
}

// SetIssuedDate gets a reference to the given AdvisoryAlmaDate and assigns it to the IssuedDate field.
func (o *AdvisoryAlmaLinuxUpdate) SetIssuedDate(v AdvisoryAlmaDate) {
	o.IssuedDate = &v
}

// GetPkglist returns the Pkglist field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetPkglist() AdvisoryAlmaPackageList {
	if o == nil || IsNil(o.Pkglist) {
		var ret AdvisoryAlmaPackageList
		return ret
	}
	return *o.Pkglist
}

// GetPkglistOk returns a tuple with the Pkglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetPkglistOk() (*AdvisoryAlmaPackageList, bool) {
	if o == nil || IsNil(o.Pkglist) {
		return nil, false
	}
	return o.Pkglist, true
}

// HasPkglist returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasPkglist() bool {
	if o != nil && !IsNil(o.Pkglist) {
		return true
	}

	return false
}

// SetPkglist gets a reference to the given AdvisoryAlmaPackageList and assigns it to the Pkglist field.
func (o *AdvisoryAlmaLinuxUpdate) SetPkglist(v AdvisoryAlmaPackageList) {
	o.Pkglist = &v
}

// GetPushcount returns the Pushcount field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetPushcount() string {
	if o == nil || IsNil(o.Pushcount) {
		var ret string
		return ret
	}
	return *o.Pushcount
}

// GetPushcountOk returns a tuple with the Pushcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetPushcountOk() (*string, bool) {
	if o == nil || IsNil(o.Pushcount) {
		return nil, false
	}
	return o.Pushcount, true
}

// HasPushcount returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasPushcount() bool {
	if o != nil && !IsNil(o.Pushcount) {
		return true
	}

	return false
}

// SetPushcount gets a reference to the given string and assigns it to the Pushcount field.
func (o *AdvisoryAlmaLinuxUpdate) SetPushcount(v string) {
	o.Pushcount = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetReferences() []AdvisoryAlmaReference {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryAlmaReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetReferencesOk() ([]AdvisoryAlmaReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryAlmaReference and assigns it to the References field.
func (o *AdvisoryAlmaLinuxUpdate) SetReferences(v []AdvisoryAlmaReference) {
	o.References = v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *AdvisoryAlmaLinuxUpdate) SetRelease(v string) {
	o.Release = &v
}

// GetRights returns the Rights field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetRights() string {
	if o == nil || IsNil(o.Rights) {
		var ret string
		return ret
	}
	return *o.Rights
}

// GetRightsOk returns a tuple with the Rights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetRightsOk() (*string, bool) {
	if o == nil || IsNil(o.Rights) {
		return nil, false
	}
	return o.Rights, true
}

// HasRights returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasRights() bool {
	if o != nil && !IsNil(o.Rights) {
		return true
	}

	return false
}

// SetRights gets a reference to the given string and assigns it to the Rights field.
func (o *AdvisoryAlmaLinuxUpdate) SetRights(v string) {
	o.Rights = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryAlmaLinuxUpdate) SetSeverity(v string) {
	o.Severity = &v
}

// GetSolution returns the Solution field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetSolution() string {
	if o == nil || IsNil(o.Solution) {
		var ret string
		return ret
	}
	return *o.Solution
}

// GetSolutionOk returns a tuple with the Solution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetSolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Solution) {
		return nil, false
	}
	return o.Solution, true
}

// HasSolution returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasSolution() bool {
	if o != nil && !IsNil(o.Solution) {
		return true
	}

	return false
}

// SetSolution gets a reference to the given string and assigns it to the Solution field.
func (o *AdvisoryAlmaLinuxUpdate) SetSolution(v string) {
	o.Solution = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdvisoryAlmaLinuxUpdate) SetStatus(v string) {
	o.Status = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AdvisoryAlmaLinuxUpdate) SetSummary(v string) {
	o.Summary = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryAlmaLinuxUpdate) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryAlmaLinuxUpdate) SetType(v string) {
	o.Type = &v
}

// GetUpdateUrl returns the UpdateUrl field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetUpdateUrl() string {
	if o == nil || IsNil(o.UpdateUrl) {
		var ret string
		return ret
	}
	return *o.UpdateUrl
}

// GetUpdateUrlOk returns a tuple with the UpdateUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetUpdateUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateUrl) {
		return nil, false
	}
	return o.UpdateUrl, true
}

// HasUpdateUrl returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasUpdateUrl() bool {
	if o != nil && !IsNil(o.UpdateUrl) {
		return true
	}

	return false
}

// SetUpdateUrl gets a reference to the given string and assigns it to the UpdateUrl field.
func (o *AdvisoryAlmaLinuxUpdate) SetUpdateUrl(v string) {
	o.UpdateUrl = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetUpdatedDate() AdvisoryAlmaDate {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret AdvisoryAlmaDate
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetUpdatedDateOk() (*AdvisoryAlmaDate, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given AdvisoryAlmaDate and assigns it to the UpdatedDate field.
func (o *AdvisoryAlmaLinuxUpdate) SetUpdatedDate(v AdvisoryAlmaDate) {
	o.UpdatedDate = &v
}

// GetUpdateinfoId returns the UpdateinfoId field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetUpdateinfoId() string {
	if o == nil || IsNil(o.UpdateinfoId) {
		var ret string
		return ret
	}
	return *o.UpdateinfoId
}

// GetUpdateinfoIdOk returns a tuple with the UpdateinfoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetUpdateinfoIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateinfoId) {
		return nil, false
	}
	return o.UpdateinfoId, true
}

// HasUpdateinfoId returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasUpdateinfoId() bool {
	if o != nil && !IsNil(o.UpdateinfoId) {
		return true
	}

	return false
}

// SetUpdateinfoId gets a reference to the given string and assigns it to the UpdateinfoId field.
func (o *AdvisoryAlmaLinuxUpdate) SetUpdateinfoId(v string) {
	o.UpdateinfoId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryAlmaLinuxUpdate) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaLinuxUpdate) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryAlmaLinuxUpdate) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryAlmaLinuxUpdate) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryAlmaLinuxUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAlmaLinuxUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BsRepoId) {
		toSerialize["bs_repo_id"] = o.BsRepoId
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Fromstr) {
		toSerialize["fromstr"] = o.Fromstr
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IssuedDate) {
		toSerialize["issued_date"] = o.IssuedDate
	}
	if !IsNil(o.Pkglist) {
		toSerialize["pkglist"] = o.Pkglist
	}
	if !IsNil(o.Pushcount) {
		toSerialize["pushcount"] = o.Pushcount
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Rights) {
		toSerialize["rights"] = o.Rights
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Solution) {
		toSerialize["solution"] = o.Solution
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdateUrl) {
		toSerialize["update_url"] = o.UpdateUrl
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updated_date"] = o.UpdatedDate
	}
	if !IsNil(o.UpdateinfoId) {
		toSerialize["updateinfo_id"] = o.UpdateinfoId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryAlmaLinuxUpdate struct {
	value *AdvisoryAlmaLinuxUpdate
	isSet bool
}

func (v NullableAdvisoryAlmaLinuxUpdate) Get() *AdvisoryAlmaLinuxUpdate {
	return v.value
}

func (v *NullableAdvisoryAlmaLinuxUpdate) Set(val *AdvisoryAlmaLinuxUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAlmaLinuxUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAlmaLinuxUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAlmaLinuxUpdate(val *AdvisoryAlmaLinuxUpdate) *NullableAdvisoryAlmaLinuxUpdate {
	return &NullableAdvisoryAlmaLinuxUpdate{value: val, isSet: true}
}

func (v NullableAdvisoryAlmaLinuxUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAlmaLinuxUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


