/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMCvssV40 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMCvssV40{}

// AdvisoryMCvssV40 struct for AdvisoryMCvssV40
type AdvisoryMCvssV40 struct {
	Automatable *string `json:"Automatable,omitempty"`
	Recovery *string `json:"Recovery,omitempty"`
	Safety *string `json:"Safety,omitempty"`
	AttackComplexity *string `json:"attackComplexity,omitempty"`
	AttackRequirements *string `json:"attackRequirements,omitempty"`
	AttackVector *string `json:"attackVector,omitempty"`
	BaseScore *float32 `json:"baseScore,omitempty"`
	BaseSeverity *string `json:"baseSeverity,omitempty"`
	PrivilegesRequired *string `json:"privilegesRequired,omitempty"`
	ProviderUrgency *string `json:"providerUrgency,omitempty"`
	SubAvailabilityImpact *string `json:"subAvailabilityImpact,omitempty"`
	SubConfidentialityImpact *string `json:"subConfidentialityImpact,omitempty"`
	SubIntegrityImpact *string `json:"subIntegrityImpact,omitempty"`
	UserInteraction *string `json:"userInteraction,omitempty"`
	ValueDensity *string `json:"valueDensity,omitempty"`
	VectorString *string `json:"vectorString,omitempty"`
	Version *string `json:"version,omitempty"`
	VulnAvailabilityImpact *string `json:"vulnAvailabilityImpact,omitempty"`
	VulnConfidentialityImpact *string `json:"vulnConfidentialityImpact,omitempty"`
	VulnIntegrityImpact *string `json:"vulnIntegrityImpact,omitempty"`
	VulnerabilityResponseEffort *string `json:"vulnerabilityResponseEffort,omitempty"`
}

// NewAdvisoryMCvssV40 instantiates a new AdvisoryMCvssV40 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMCvssV40() *AdvisoryMCvssV40 {
	this := AdvisoryMCvssV40{}
	return &this
}

// NewAdvisoryMCvssV40WithDefaults instantiates a new AdvisoryMCvssV40 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMCvssV40WithDefaults() *AdvisoryMCvssV40 {
	this := AdvisoryMCvssV40{}
	return &this
}

// GetAutomatable returns the Automatable field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetAutomatable() string {
	if o == nil || IsNil(o.Automatable) {
		var ret string
		return ret
	}
	return *o.Automatable
}

// GetAutomatableOk returns a tuple with the Automatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetAutomatableOk() (*string, bool) {
	if o == nil || IsNil(o.Automatable) {
		return nil, false
	}
	return o.Automatable, true
}

// HasAutomatable returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasAutomatable() bool {
	if o != nil && !IsNil(o.Automatable) {
		return true
	}

	return false
}

// SetAutomatable gets a reference to the given string and assigns it to the Automatable field.
func (o *AdvisoryMCvssV40) SetAutomatable(v string) {
	o.Automatable = &v
}

// GetRecovery returns the Recovery field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetRecovery() string {
	if o == nil || IsNil(o.Recovery) {
		var ret string
		return ret
	}
	return *o.Recovery
}

// GetRecoveryOk returns a tuple with the Recovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetRecoveryOk() (*string, bool) {
	if o == nil || IsNil(o.Recovery) {
		return nil, false
	}
	return o.Recovery, true
}

// HasRecovery returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasRecovery() bool {
	if o != nil && !IsNil(o.Recovery) {
		return true
	}

	return false
}

// SetRecovery gets a reference to the given string and assigns it to the Recovery field.
func (o *AdvisoryMCvssV40) SetRecovery(v string) {
	o.Recovery = &v
}

// GetSafety returns the Safety field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetSafety() string {
	if o == nil || IsNil(o.Safety) {
		var ret string
		return ret
	}
	return *o.Safety
}

// GetSafetyOk returns a tuple with the Safety field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetSafetyOk() (*string, bool) {
	if o == nil || IsNil(o.Safety) {
		return nil, false
	}
	return o.Safety, true
}

// HasSafety returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasSafety() bool {
	if o != nil && !IsNil(o.Safety) {
		return true
	}

	return false
}

// SetSafety gets a reference to the given string and assigns it to the Safety field.
func (o *AdvisoryMCvssV40) SetSafety(v string) {
	o.Safety = &v
}

// GetAttackComplexity returns the AttackComplexity field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetAttackComplexity() string {
	if o == nil || IsNil(o.AttackComplexity) {
		var ret string
		return ret
	}
	return *o.AttackComplexity
}

// GetAttackComplexityOk returns a tuple with the AttackComplexity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetAttackComplexityOk() (*string, bool) {
	if o == nil || IsNil(o.AttackComplexity) {
		return nil, false
	}
	return o.AttackComplexity, true
}

// HasAttackComplexity returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasAttackComplexity() bool {
	if o != nil && !IsNil(o.AttackComplexity) {
		return true
	}

	return false
}

// SetAttackComplexity gets a reference to the given string and assigns it to the AttackComplexity field.
func (o *AdvisoryMCvssV40) SetAttackComplexity(v string) {
	o.AttackComplexity = &v
}

// GetAttackRequirements returns the AttackRequirements field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetAttackRequirements() string {
	if o == nil || IsNil(o.AttackRequirements) {
		var ret string
		return ret
	}
	return *o.AttackRequirements
}

// GetAttackRequirementsOk returns a tuple with the AttackRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetAttackRequirementsOk() (*string, bool) {
	if o == nil || IsNil(o.AttackRequirements) {
		return nil, false
	}
	return o.AttackRequirements, true
}

// HasAttackRequirements returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasAttackRequirements() bool {
	if o != nil && !IsNil(o.AttackRequirements) {
		return true
	}

	return false
}

// SetAttackRequirements gets a reference to the given string and assigns it to the AttackRequirements field.
func (o *AdvisoryMCvssV40) SetAttackRequirements(v string) {
	o.AttackRequirements = &v
}

// GetAttackVector returns the AttackVector field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetAttackVector() string {
	if o == nil || IsNil(o.AttackVector) {
		var ret string
		return ret
	}
	return *o.AttackVector
}

// GetAttackVectorOk returns a tuple with the AttackVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetAttackVectorOk() (*string, bool) {
	if o == nil || IsNil(o.AttackVector) {
		return nil, false
	}
	return o.AttackVector, true
}

// HasAttackVector returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasAttackVector() bool {
	if o != nil && !IsNil(o.AttackVector) {
		return true
	}

	return false
}

// SetAttackVector gets a reference to the given string and assigns it to the AttackVector field.
func (o *AdvisoryMCvssV40) SetAttackVector(v string) {
	o.AttackVector = &v
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetBaseScore() float32 {
	if o == nil || IsNil(o.BaseScore) {
		var ret float32
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetBaseScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given float32 and assigns it to the BaseScore field.
func (o *AdvisoryMCvssV40) SetBaseScore(v float32) {
	o.BaseScore = &v
}

// GetBaseSeverity returns the BaseSeverity field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetBaseSeverity() string {
	if o == nil || IsNil(o.BaseSeverity) {
		var ret string
		return ret
	}
	return *o.BaseSeverity
}

// GetBaseSeverityOk returns a tuple with the BaseSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetBaseSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.BaseSeverity) {
		return nil, false
	}
	return o.BaseSeverity, true
}

// HasBaseSeverity returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasBaseSeverity() bool {
	if o != nil && !IsNil(o.BaseSeverity) {
		return true
	}

	return false
}

// SetBaseSeverity gets a reference to the given string and assigns it to the BaseSeverity field.
func (o *AdvisoryMCvssV40) SetBaseSeverity(v string) {
	o.BaseSeverity = &v
}

// GetPrivilegesRequired returns the PrivilegesRequired field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetPrivilegesRequired() string {
	if o == nil || IsNil(o.PrivilegesRequired) {
		var ret string
		return ret
	}
	return *o.PrivilegesRequired
}

// GetPrivilegesRequiredOk returns a tuple with the PrivilegesRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetPrivilegesRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.PrivilegesRequired) {
		return nil, false
	}
	return o.PrivilegesRequired, true
}

// HasPrivilegesRequired returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasPrivilegesRequired() bool {
	if o != nil && !IsNil(o.PrivilegesRequired) {
		return true
	}

	return false
}

// SetPrivilegesRequired gets a reference to the given string and assigns it to the PrivilegesRequired field.
func (o *AdvisoryMCvssV40) SetPrivilegesRequired(v string) {
	o.PrivilegesRequired = &v
}

// GetProviderUrgency returns the ProviderUrgency field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetProviderUrgency() string {
	if o == nil || IsNil(o.ProviderUrgency) {
		var ret string
		return ret
	}
	return *o.ProviderUrgency
}

// GetProviderUrgencyOk returns a tuple with the ProviderUrgency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetProviderUrgencyOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderUrgency) {
		return nil, false
	}
	return o.ProviderUrgency, true
}

// HasProviderUrgency returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasProviderUrgency() bool {
	if o != nil && !IsNil(o.ProviderUrgency) {
		return true
	}

	return false
}

// SetProviderUrgency gets a reference to the given string and assigns it to the ProviderUrgency field.
func (o *AdvisoryMCvssV40) SetProviderUrgency(v string) {
	o.ProviderUrgency = &v
}

// GetSubAvailabilityImpact returns the SubAvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetSubAvailabilityImpact() string {
	if o == nil || IsNil(o.SubAvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.SubAvailabilityImpact
}

// GetSubAvailabilityImpactOk returns a tuple with the SubAvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetSubAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.SubAvailabilityImpact) {
		return nil, false
	}
	return o.SubAvailabilityImpact, true
}

// HasSubAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasSubAvailabilityImpact() bool {
	if o != nil && !IsNil(o.SubAvailabilityImpact) {
		return true
	}

	return false
}

// SetSubAvailabilityImpact gets a reference to the given string and assigns it to the SubAvailabilityImpact field.
func (o *AdvisoryMCvssV40) SetSubAvailabilityImpact(v string) {
	o.SubAvailabilityImpact = &v
}

// GetSubConfidentialityImpact returns the SubConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetSubConfidentialityImpact() string {
	if o == nil || IsNil(o.SubConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.SubConfidentialityImpact
}

// GetSubConfidentialityImpactOk returns a tuple with the SubConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetSubConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.SubConfidentialityImpact) {
		return nil, false
	}
	return o.SubConfidentialityImpact, true
}

// HasSubConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasSubConfidentialityImpact() bool {
	if o != nil && !IsNil(o.SubConfidentialityImpact) {
		return true
	}

	return false
}

// SetSubConfidentialityImpact gets a reference to the given string and assigns it to the SubConfidentialityImpact field.
func (o *AdvisoryMCvssV40) SetSubConfidentialityImpact(v string) {
	o.SubConfidentialityImpact = &v
}

// GetSubIntegrityImpact returns the SubIntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetSubIntegrityImpact() string {
	if o == nil || IsNil(o.SubIntegrityImpact) {
		var ret string
		return ret
	}
	return *o.SubIntegrityImpact
}

// GetSubIntegrityImpactOk returns a tuple with the SubIntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetSubIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.SubIntegrityImpact) {
		return nil, false
	}
	return o.SubIntegrityImpact, true
}

// HasSubIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasSubIntegrityImpact() bool {
	if o != nil && !IsNil(o.SubIntegrityImpact) {
		return true
	}

	return false
}

// SetSubIntegrityImpact gets a reference to the given string and assigns it to the SubIntegrityImpact field.
func (o *AdvisoryMCvssV40) SetSubIntegrityImpact(v string) {
	o.SubIntegrityImpact = &v
}

// GetUserInteraction returns the UserInteraction field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetUserInteraction() string {
	if o == nil || IsNil(o.UserInteraction) {
		var ret string
		return ret
	}
	return *o.UserInteraction
}

// GetUserInteractionOk returns a tuple with the UserInteraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetUserInteractionOk() (*string, bool) {
	if o == nil || IsNil(o.UserInteraction) {
		return nil, false
	}
	return o.UserInteraction, true
}

// HasUserInteraction returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasUserInteraction() bool {
	if o != nil && !IsNil(o.UserInteraction) {
		return true
	}

	return false
}

// SetUserInteraction gets a reference to the given string and assigns it to the UserInteraction field.
func (o *AdvisoryMCvssV40) SetUserInteraction(v string) {
	o.UserInteraction = &v
}

// GetValueDensity returns the ValueDensity field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetValueDensity() string {
	if o == nil || IsNil(o.ValueDensity) {
		var ret string
		return ret
	}
	return *o.ValueDensity
}

// GetValueDensityOk returns a tuple with the ValueDensity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetValueDensityOk() (*string, bool) {
	if o == nil || IsNil(o.ValueDensity) {
		return nil, false
	}
	return o.ValueDensity, true
}

// HasValueDensity returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasValueDensity() bool {
	if o != nil && !IsNil(o.ValueDensity) {
		return true
	}

	return false
}

// SetValueDensity gets a reference to the given string and assigns it to the ValueDensity field.
func (o *AdvisoryMCvssV40) SetValueDensity(v string) {
	o.ValueDensity = &v
}

// GetVectorString returns the VectorString field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetVectorString() string {
	if o == nil || IsNil(o.VectorString) {
		var ret string
		return ret
	}
	return *o.VectorString
}

// GetVectorStringOk returns a tuple with the VectorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetVectorStringOk() (*string, bool) {
	if o == nil || IsNil(o.VectorString) {
		return nil, false
	}
	return o.VectorString, true
}

// HasVectorString returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasVectorString() bool {
	if o != nil && !IsNil(o.VectorString) {
		return true
	}

	return false
}

// SetVectorString gets a reference to the given string and assigns it to the VectorString field.
func (o *AdvisoryMCvssV40) SetVectorString(v string) {
	o.VectorString = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryMCvssV40) SetVersion(v string) {
	o.Version = &v
}

// GetVulnAvailabilityImpact returns the VulnAvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetVulnAvailabilityImpact() string {
	if o == nil || IsNil(o.VulnAvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.VulnAvailabilityImpact
}

// GetVulnAvailabilityImpactOk returns a tuple with the VulnAvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetVulnAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.VulnAvailabilityImpact) {
		return nil, false
	}
	return o.VulnAvailabilityImpact, true
}

// HasVulnAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasVulnAvailabilityImpact() bool {
	if o != nil && !IsNil(o.VulnAvailabilityImpact) {
		return true
	}

	return false
}

// SetVulnAvailabilityImpact gets a reference to the given string and assigns it to the VulnAvailabilityImpact field.
func (o *AdvisoryMCvssV40) SetVulnAvailabilityImpact(v string) {
	o.VulnAvailabilityImpact = &v
}

// GetVulnConfidentialityImpact returns the VulnConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetVulnConfidentialityImpact() string {
	if o == nil || IsNil(o.VulnConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.VulnConfidentialityImpact
}

// GetVulnConfidentialityImpactOk returns a tuple with the VulnConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetVulnConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.VulnConfidentialityImpact) {
		return nil, false
	}
	return o.VulnConfidentialityImpact, true
}

// HasVulnConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasVulnConfidentialityImpact() bool {
	if o != nil && !IsNil(o.VulnConfidentialityImpact) {
		return true
	}

	return false
}

// SetVulnConfidentialityImpact gets a reference to the given string and assigns it to the VulnConfidentialityImpact field.
func (o *AdvisoryMCvssV40) SetVulnConfidentialityImpact(v string) {
	o.VulnConfidentialityImpact = &v
}

// GetVulnIntegrityImpact returns the VulnIntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetVulnIntegrityImpact() string {
	if o == nil || IsNil(o.VulnIntegrityImpact) {
		var ret string
		return ret
	}
	return *o.VulnIntegrityImpact
}

// GetVulnIntegrityImpactOk returns a tuple with the VulnIntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetVulnIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.VulnIntegrityImpact) {
		return nil, false
	}
	return o.VulnIntegrityImpact, true
}

// HasVulnIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasVulnIntegrityImpact() bool {
	if o != nil && !IsNil(o.VulnIntegrityImpact) {
		return true
	}

	return false
}

// SetVulnIntegrityImpact gets a reference to the given string and assigns it to the VulnIntegrityImpact field.
func (o *AdvisoryMCvssV40) SetVulnIntegrityImpact(v string) {
	o.VulnIntegrityImpact = &v
}

// GetVulnerabilityResponseEffort returns the VulnerabilityResponseEffort field value if set, zero value otherwise.
func (o *AdvisoryMCvssV40) GetVulnerabilityResponseEffort() string {
	if o == nil || IsNil(o.VulnerabilityResponseEffort) {
		var ret string
		return ret
	}
	return *o.VulnerabilityResponseEffort
}

// GetVulnerabilityResponseEffortOk returns a tuple with the VulnerabilityResponseEffort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCvssV40) GetVulnerabilityResponseEffortOk() (*string, bool) {
	if o == nil || IsNil(o.VulnerabilityResponseEffort) {
		return nil, false
	}
	return o.VulnerabilityResponseEffort, true
}

// HasVulnerabilityResponseEffort returns a boolean if a field has been set.
func (o *AdvisoryMCvssV40) HasVulnerabilityResponseEffort() bool {
	if o != nil && !IsNil(o.VulnerabilityResponseEffort) {
		return true
	}

	return false
}

// SetVulnerabilityResponseEffort gets a reference to the given string and assigns it to the VulnerabilityResponseEffort field.
func (o *AdvisoryMCvssV40) SetVulnerabilityResponseEffort(v string) {
	o.VulnerabilityResponseEffort = &v
}

func (o AdvisoryMCvssV40) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMCvssV40) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Automatable) {
		toSerialize["Automatable"] = o.Automatable
	}
	if !IsNil(o.Recovery) {
		toSerialize["Recovery"] = o.Recovery
	}
	if !IsNil(o.Safety) {
		toSerialize["Safety"] = o.Safety
	}
	if !IsNil(o.AttackComplexity) {
		toSerialize["attackComplexity"] = o.AttackComplexity
	}
	if !IsNil(o.AttackRequirements) {
		toSerialize["attackRequirements"] = o.AttackRequirements
	}
	if !IsNil(o.AttackVector) {
		toSerialize["attackVector"] = o.AttackVector
	}
	if !IsNil(o.BaseScore) {
		toSerialize["baseScore"] = o.BaseScore
	}
	if !IsNil(o.BaseSeverity) {
		toSerialize["baseSeverity"] = o.BaseSeverity
	}
	if !IsNil(o.PrivilegesRequired) {
		toSerialize["privilegesRequired"] = o.PrivilegesRequired
	}
	if !IsNil(o.ProviderUrgency) {
		toSerialize["providerUrgency"] = o.ProviderUrgency
	}
	if !IsNil(o.SubAvailabilityImpact) {
		toSerialize["subAvailabilityImpact"] = o.SubAvailabilityImpact
	}
	if !IsNil(o.SubConfidentialityImpact) {
		toSerialize["subConfidentialityImpact"] = o.SubConfidentialityImpact
	}
	if !IsNil(o.SubIntegrityImpact) {
		toSerialize["subIntegrityImpact"] = o.SubIntegrityImpact
	}
	if !IsNil(o.UserInteraction) {
		toSerialize["userInteraction"] = o.UserInteraction
	}
	if !IsNil(o.ValueDensity) {
		toSerialize["valueDensity"] = o.ValueDensity
	}
	if !IsNil(o.VectorString) {
		toSerialize["vectorString"] = o.VectorString
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VulnAvailabilityImpact) {
		toSerialize["vulnAvailabilityImpact"] = o.VulnAvailabilityImpact
	}
	if !IsNil(o.VulnConfidentialityImpact) {
		toSerialize["vulnConfidentialityImpact"] = o.VulnConfidentialityImpact
	}
	if !IsNil(o.VulnIntegrityImpact) {
		toSerialize["vulnIntegrityImpact"] = o.VulnIntegrityImpact
	}
	if !IsNil(o.VulnerabilityResponseEffort) {
		toSerialize["vulnerabilityResponseEffort"] = o.VulnerabilityResponseEffort
	}
	return toSerialize, nil
}

type NullableAdvisoryMCvssV40 struct {
	value *AdvisoryMCvssV40
	isSet bool
}

func (v NullableAdvisoryMCvssV40) Get() *AdvisoryMCvssV40 {
	return v.value
}

func (v *NullableAdvisoryMCvssV40) Set(val *AdvisoryMCvssV40) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMCvssV40) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMCvssV40) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMCvssV40(val *AdvisoryMCvssV40) *NullableAdvisoryMCvssV40 {
	return &NullableAdvisoryMCvssV40{value: val, isSet: true}
}

func (v NullableAdvisoryMCvssV40) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMCvssV40) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


