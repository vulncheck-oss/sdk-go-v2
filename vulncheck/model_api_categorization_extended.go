/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCategorizationExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCategorizationExtended{}

// ApiCategorizationExtended struct for ApiCategorizationExtended
type ApiCategorizationExtended struct {
	Tags []string `json:"tags,omitempty"`
}

// NewApiCategorizationExtended instantiates a new ApiCategorizationExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCategorizationExtended() *ApiCategorizationExtended {
	this := ApiCategorizationExtended{}
	return &this
}

// NewApiCategorizationExtendedWithDefaults instantiates a new ApiCategorizationExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCategorizationExtendedWithDefaults() *ApiCategorizationExtended {
	this := ApiCategorizationExtended{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ApiCategorizationExtended) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCategorizationExtended) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ApiCategorizationExtended) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ApiCategorizationExtended) SetTags(v []string) {
	o.Tags = v
}

func (o ApiCategorizationExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCategorizationExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableApiCategorizationExtended struct {
	value *ApiCategorizationExtended
	isSet bool
}

func (v NullableApiCategorizationExtended) Get() *ApiCategorizationExtended {
	return v.value
}

func (v *NullableApiCategorizationExtended) Set(val *ApiCategorizationExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCategorizationExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCategorizationExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCategorizationExtended(val *ApiCategorizationExtended) *NullableApiCategorizationExtended {
	return &NullableApiCategorizationExtended{value: val, isSet: true}
}

func (v NullableApiCategorizationExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCategorizationExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


