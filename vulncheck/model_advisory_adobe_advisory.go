/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAdobeAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAdobeAdvisory{}

// AdvisoryAdobeAdvisory struct for AdvisoryAdobeAdvisory
type AdvisoryAdobeAdvisory struct {
	AdobeCves []AdvisoryAdobeCVE `json:"adobe_cves,omitempty"`
	Affected []AdvisoryAdobeAffected `json:"affected,omitempty"`
	BulletinId *string `json:"bulletinId,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Link *string `json:"link,omitempty"`
	Solutions []AdvisoryAdobeSolution `json:"solutions,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewAdvisoryAdobeAdvisory instantiates a new AdvisoryAdobeAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAdobeAdvisory() *AdvisoryAdobeAdvisory {
	this := AdvisoryAdobeAdvisory{}
	return &this
}

// NewAdvisoryAdobeAdvisoryWithDefaults instantiates a new AdvisoryAdobeAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAdobeAdvisoryWithDefaults() *AdvisoryAdobeAdvisory {
	this := AdvisoryAdobeAdvisory{}
	return &this
}

// GetAdobeCves returns the AdobeCves field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetAdobeCves() []AdvisoryAdobeCVE {
	if o == nil || IsNil(o.AdobeCves) {
		var ret []AdvisoryAdobeCVE
		return ret
	}
	return o.AdobeCves
}

// GetAdobeCvesOk returns a tuple with the AdobeCves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetAdobeCvesOk() ([]AdvisoryAdobeCVE, bool) {
	if o == nil || IsNil(o.AdobeCves) {
		return nil, false
	}
	return o.AdobeCves, true
}

// HasAdobeCves returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasAdobeCves() bool {
	if o != nil && !IsNil(o.AdobeCves) {
		return true
	}

	return false
}

// SetAdobeCves gets a reference to the given []AdvisoryAdobeCVE and assigns it to the AdobeCves field.
func (o *AdvisoryAdobeAdvisory) SetAdobeCves(v []AdvisoryAdobeCVE) {
	o.AdobeCves = v
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetAffected() []AdvisoryAdobeAffected {
	if o == nil || IsNil(o.Affected) {
		var ret []AdvisoryAdobeAffected
		return ret
	}
	return o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetAffectedOk() ([]AdvisoryAdobeAffected, bool) {
	if o == nil || IsNil(o.Affected) {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasAffected() bool {
	if o != nil && !IsNil(o.Affected) {
		return true
	}

	return false
}

// SetAffected gets a reference to the given []AdvisoryAdobeAffected and assigns it to the Affected field.
func (o *AdvisoryAdobeAdvisory) SetAffected(v []AdvisoryAdobeAffected) {
	o.Affected = v
}

// GetBulletinId returns the BulletinId field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetBulletinId() string {
	if o == nil || IsNil(o.BulletinId) {
		var ret string
		return ret
	}
	return *o.BulletinId
}

// GetBulletinIdOk returns a tuple with the BulletinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetBulletinIdOk() (*string, bool) {
	if o == nil || IsNil(o.BulletinId) {
		return nil, false
	}
	return o.BulletinId, true
}

// HasBulletinId returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasBulletinId() bool {
	if o != nil && !IsNil(o.BulletinId) {
		return true
	}

	return false
}

// SetBulletinId gets a reference to the given string and assigns it to the BulletinId field.
func (o *AdvisoryAdobeAdvisory) SetBulletinId(v string) {
	o.BulletinId = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryAdobeAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryAdobeAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryAdobeAdvisory) SetLink(v string) {
	o.Link = &v
}

// GetSolutions returns the Solutions field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetSolutions() []AdvisoryAdobeSolution {
	if o == nil || IsNil(o.Solutions) {
		var ret []AdvisoryAdobeSolution
		return ret
	}
	return o.Solutions
}

// GetSolutionsOk returns a tuple with the Solutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetSolutionsOk() ([]AdvisoryAdobeSolution, bool) {
	if o == nil || IsNil(o.Solutions) {
		return nil, false
	}
	return o.Solutions, true
}

// HasSolutions returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasSolutions() bool {
	if o != nil && !IsNil(o.Solutions) {
		return true
	}

	return false
}

// SetSolutions gets a reference to the given []AdvisoryAdobeSolution and assigns it to the Solutions field.
func (o *AdvisoryAdobeAdvisory) SetSolutions(v []AdvisoryAdobeSolution) {
	o.Solutions = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryAdobeAdvisory) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdobeAdvisory) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryAdobeAdvisory) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryAdobeAdvisory) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o AdvisoryAdobeAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAdobeAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdobeCves) {
		toSerialize["adobe_cves"] = o.AdobeCves
	}
	if !IsNil(o.Affected) {
		toSerialize["affected"] = o.Affected
	}
	if !IsNil(o.BulletinId) {
		toSerialize["bulletinId"] = o.BulletinId
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Solutions) {
		toSerialize["solutions"] = o.Solutions
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableAdvisoryAdobeAdvisory struct {
	value *AdvisoryAdobeAdvisory
	isSet bool
}

func (v NullableAdvisoryAdobeAdvisory) Get() *AdvisoryAdobeAdvisory {
	return v.value
}

func (v *NullableAdvisoryAdobeAdvisory) Set(val *AdvisoryAdobeAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAdobeAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAdobeAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAdobeAdvisory(val *AdvisoryAdobeAdvisory) *NullableAdvisoryAdobeAdvisory {
	return &NullableAdvisoryAdobeAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryAdobeAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAdobeAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


