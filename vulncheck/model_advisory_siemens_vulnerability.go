/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensVulnerability{}

// AdvisorySiemensVulnerability struct for AdvisorySiemensVulnerability
type AdvisorySiemensVulnerability struct {
	Cve *string `json:"cve,omitempty"`
	Cwe *AdvisorySiemensCWE `json:"cwe,omitempty"`
	Notes []AdvisorySiemensNotes `json:"notes,omitempty"`
	ProductStatus *AdvisorySiemensProductStatus `json:"product_status,omitempty"`
	References []AdvisorySiemensReferences `json:"references,omitempty"`
	Remediations []AdvisorySiemensRemediation `json:"remediations,omitempty"`
	Scores []AdvisorySiemensScore `json:"scores,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisorySiemensVulnerability instantiates a new AdvisorySiemensVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensVulnerability() *AdvisorySiemensVulnerability {
	this := AdvisorySiemensVulnerability{}
	return &this
}

// NewAdvisorySiemensVulnerabilityWithDefaults instantiates a new AdvisorySiemensVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensVulnerabilityWithDefaults() *AdvisorySiemensVulnerability {
	this := AdvisorySiemensVulnerability{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *AdvisorySiemensVulnerability) SetCve(v string) {
	o.Cve = &v
}

// GetCwe returns the Cwe field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetCwe() AdvisorySiemensCWE {
	if o == nil || IsNil(o.Cwe) {
		var ret AdvisorySiemensCWE
		return ret
	}
	return *o.Cwe
}

// GetCweOk returns a tuple with the Cwe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetCweOk() (*AdvisorySiemensCWE, bool) {
	if o == nil || IsNil(o.Cwe) {
		return nil, false
	}
	return o.Cwe, true
}

// HasCwe returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasCwe() bool {
	if o != nil && !IsNil(o.Cwe) {
		return true
	}

	return false
}

// SetCwe gets a reference to the given AdvisorySiemensCWE and assigns it to the Cwe field.
func (o *AdvisorySiemensVulnerability) SetCwe(v AdvisorySiemensCWE) {
	o.Cwe = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetNotes() []AdvisorySiemensNotes {
	if o == nil || IsNil(o.Notes) {
		var ret []AdvisorySiemensNotes
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetNotesOk() ([]AdvisorySiemensNotes, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []AdvisorySiemensNotes and assigns it to the Notes field.
func (o *AdvisorySiemensVulnerability) SetNotes(v []AdvisorySiemensNotes) {
	o.Notes = v
}

// GetProductStatus returns the ProductStatus field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetProductStatus() AdvisorySiemensProductStatus {
	if o == nil || IsNil(o.ProductStatus) {
		var ret AdvisorySiemensProductStatus
		return ret
	}
	return *o.ProductStatus
}

// GetProductStatusOk returns a tuple with the ProductStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetProductStatusOk() (*AdvisorySiemensProductStatus, bool) {
	if o == nil || IsNil(o.ProductStatus) {
		return nil, false
	}
	return o.ProductStatus, true
}

// HasProductStatus returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasProductStatus() bool {
	if o != nil && !IsNil(o.ProductStatus) {
		return true
	}

	return false
}

// SetProductStatus gets a reference to the given AdvisorySiemensProductStatus and assigns it to the ProductStatus field.
func (o *AdvisorySiemensVulnerability) SetProductStatus(v AdvisorySiemensProductStatus) {
	o.ProductStatus = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetReferences() []AdvisorySiemensReferences {
	if o == nil || IsNil(o.References) {
		var ret []AdvisorySiemensReferences
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetReferencesOk() ([]AdvisorySiemensReferences, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisorySiemensReferences and assigns it to the References field.
func (o *AdvisorySiemensVulnerability) SetReferences(v []AdvisorySiemensReferences) {
	o.References = v
}

// GetRemediations returns the Remediations field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetRemediations() []AdvisorySiemensRemediation {
	if o == nil || IsNil(o.Remediations) {
		var ret []AdvisorySiemensRemediation
		return ret
	}
	return o.Remediations
}

// GetRemediationsOk returns a tuple with the Remediations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetRemediationsOk() ([]AdvisorySiemensRemediation, bool) {
	if o == nil || IsNil(o.Remediations) {
		return nil, false
	}
	return o.Remediations, true
}

// HasRemediations returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasRemediations() bool {
	if o != nil && !IsNil(o.Remediations) {
		return true
	}

	return false
}

// SetRemediations gets a reference to the given []AdvisorySiemensRemediation and assigns it to the Remediations field.
func (o *AdvisorySiemensVulnerability) SetRemediations(v []AdvisorySiemensRemediation) {
	o.Remediations = v
}

// GetScores returns the Scores field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetScores() []AdvisorySiemensScore {
	if o == nil || IsNil(o.Scores) {
		var ret []AdvisorySiemensScore
		return ret
	}
	return o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetScoresOk() ([]AdvisorySiemensScore, bool) {
	if o == nil || IsNil(o.Scores) {
		return nil, false
	}
	return o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasScores() bool {
	if o != nil && !IsNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given []AdvisorySiemensScore and assigns it to the Scores field.
func (o *AdvisorySiemensVulnerability) SetScores(v []AdvisorySiemensScore) {
	o.Scores = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisorySiemensVulnerability) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensVulnerability) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisorySiemensVulnerability) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisorySiemensVulnerability) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisorySiemensVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cwe) {
		toSerialize["cwe"] = o.Cwe
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ProductStatus) {
		toSerialize["product_status"] = o.ProductStatus
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Remediations) {
		toSerialize["remediations"] = o.Remediations
	}
	if !IsNil(o.Scores) {
		toSerialize["scores"] = o.Scores
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensVulnerability struct {
	value *AdvisorySiemensVulnerability
	isSet bool
}

func (v NullableAdvisorySiemensVulnerability) Get() *AdvisorySiemensVulnerability {
	return v.value
}

func (v *NullableAdvisorySiemensVulnerability) Set(val *AdvisorySiemensVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensVulnerability(val *AdvisorySiemensVulnerability) *NullableAdvisorySiemensVulnerability {
	return &NullableAdvisorySiemensVulnerability{value: val, isSet: true}
}

func (v NullableAdvisorySiemensVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


