/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMVulnerability{}

// AdvisoryMVulnerability struct for AdvisoryMVulnerability
type AdvisoryMVulnerability struct {
	ProductStatuses []AdvisoryMProductStatus `json:"ProductStatuses,omitempty"`
	Remediations []AdvisoryMRemediation `json:"Remediations,omitempty"`
	Threats []AdvisoryRThreat `json:"Threats,omitempty"`
	Acknowledgments []AdvisoryAcknowledgement `json:"acknowledgments,omitempty"`
	Cve *string `json:"cve,omitempty"`
	Cvssscoresets []AdvisoryRScoreSet `json:"cvssscoresets,omitempty"`
	Notes []AdvisoryNote `json:"notes,omitempty"`
	Ordinal *string `json:"ordinal,omitempty"`
	// diff in xml/json
	Revisionhistory []AdvisoryRRevision `json:"revisionhistory,omitempty"`
	Title *AdvisoryIVal `json:"title,omitempty"`
}

// NewAdvisoryMVulnerability instantiates a new AdvisoryMVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMVulnerability() *AdvisoryMVulnerability {
	this := AdvisoryMVulnerability{}
	return &this
}

// NewAdvisoryMVulnerabilityWithDefaults instantiates a new AdvisoryMVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMVulnerabilityWithDefaults() *AdvisoryMVulnerability {
	this := AdvisoryMVulnerability{}
	return &this
}

// GetProductStatuses returns the ProductStatuses field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetProductStatuses() []AdvisoryMProductStatus {
	if o == nil || IsNil(o.ProductStatuses) {
		var ret []AdvisoryMProductStatus
		return ret
	}
	return o.ProductStatuses
}

// GetProductStatusesOk returns a tuple with the ProductStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetProductStatusesOk() ([]AdvisoryMProductStatus, bool) {
	if o == nil || IsNil(o.ProductStatuses) {
		return nil, false
	}
	return o.ProductStatuses, true
}

// HasProductStatuses returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasProductStatuses() bool {
	if o != nil && !IsNil(o.ProductStatuses) {
		return true
	}

	return false
}

// SetProductStatuses gets a reference to the given []AdvisoryMProductStatus and assigns it to the ProductStatuses field.
func (o *AdvisoryMVulnerability) SetProductStatuses(v []AdvisoryMProductStatus) {
	o.ProductStatuses = v
}

// GetRemediations returns the Remediations field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetRemediations() []AdvisoryMRemediation {
	if o == nil || IsNil(o.Remediations) {
		var ret []AdvisoryMRemediation
		return ret
	}
	return o.Remediations
}

// GetRemediationsOk returns a tuple with the Remediations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetRemediationsOk() ([]AdvisoryMRemediation, bool) {
	if o == nil || IsNil(o.Remediations) {
		return nil, false
	}
	return o.Remediations, true
}

// HasRemediations returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasRemediations() bool {
	if o != nil && !IsNil(o.Remediations) {
		return true
	}

	return false
}

// SetRemediations gets a reference to the given []AdvisoryMRemediation and assigns it to the Remediations field.
func (o *AdvisoryMVulnerability) SetRemediations(v []AdvisoryMRemediation) {
	o.Remediations = v
}

// GetThreats returns the Threats field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetThreats() []AdvisoryRThreat {
	if o == nil || IsNil(o.Threats) {
		var ret []AdvisoryRThreat
		return ret
	}
	return o.Threats
}

// GetThreatsOk returns a tuple with the Threats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetThreatsOk() ([]AdvisoryRThreat, bool) {
	if o == nil || IsNil(o.Threats) {
		return nil, false
	}
	return o.Threats, true
}

// HasThreats returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasThreats() bool {
	if o != nil && !IsNil(o.Threats) {
		return true
	}

	return false
}

// SetThreats gets a reference to the given []AdvisoryRThreat and assigns it to the Threats field.
func (o *AdvisoryMVulnerability) SetThreats(v []AdvisoryRThreat) {
	o.Threats = v
}

// GetAcknowledgments returns the Acknowledgments field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetAcknowledgments() []AdvisoryAcknowledgement {
	if o == nil || IsNil(o.Acknowledgments) {
		var ret []AdvisoryAcknowledgement
		return ret
	}
	return o.Acknowledgments
}

// GetAcknowledgmentsOk returns a tuple with the Acknowledgments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetAcknowledgmentsOk() ([]AdvisoryAcknowledgement, bool) {
	if o == nil || IsNil(o.Acknowledgments) {
		return nil, false
	}
	return o.Acknowledgments, true
}

// HasAcknowledgments returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasAcknowledgments() bool {
	if o != nil && !IsNil(o.Acknowledgments) {
		return true
	}

	return false
}

// SetAcknowledgments gets a reference to the given []AdvisoryAcknowledgement and assigns it to the Acknowledgments field.
func (o *AdvisoryMVulnerability) SetAcknowledgments(v []AdvisoryAcknowledgement) {
	o.Acknowledgments = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *AdvisoryMVulnerability) SetCve(v string) {
	o.Cve = &v
}

// GetCvssscoresets returns the Cvssscoresets field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetCvssscoresets() []AdvisoryRScoreSet {
	if o == nil || IsNil(o.Cvssscoresets) {
		var ret []AdvisoryRScoreSet
		return ret
	}
	return o.Cvssscoresets
}

// GetCvssscoresetsOk returns a tuple with the Cvssscoresets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetCvssscoresetsOk() ([]AdvisoryRScoreSet, bool) {
	if o == nil || IsNil(o.Cvssscoresets) {
		return nil, false
	}
	return o.Cvssscoresets, true
}

// HasCvssscoresets returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasCvssscoresets() bool {
	if o != nil && !IsNil(o.Cvssscoresets) {
		return true
	}

	return false
}

// SetCvssscoresets gets a reference to the given []AdvisoryRScoreSet and assigns it to the Cvssscoresets field.
func (o *AdvisoryMVulnerability) SetCvssscoresets(v []AdvisoryRScoreSet) {
	o.Cvssscoresets = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetNotes() []AdvisoryNote {
	if o == nil || IsNil(o.Notes) {
		var ret []AdvisoryNote
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetNotesOk() ([]AdvisoryNote, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []AdvisoryNote and assigns it to the Notes field.
func (o *AdvisoryMVulnerability) SetNotes(v []AdvisoryNote) {
	o.Notes = v
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *AdvisoryMVulnerability) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetRevisionhistory returns the Revisionhistory field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetRevisionhistory() []AdvisoryRRevision {
	if o == nil || IsNil(o.Revisionhistory) {
		var ret []AdvisoryRRevision
		return ret
	}
	return o.Revisionhistory
}

// GetRevisionhistoryOk returns a tuple with the Revisionhistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetRevisionhistoryOk() ([]AdvisoryRRevision, bool) {
	if o == nil || IsNil(o.Revisionhistory) {
		return nil, false
	}
	return o.Revisionhistory, true
}

// HasRevisionhistory returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasRevisionhistory() bool {
	if o != nil && !IsNil(o.Revisionhistory) {
		return true
	}

	return false
}

// SetRevisionhistory gets a reference to the given []AdvisoryRRevision and assigns it to the Revisionhistory field.
func (o *AdvisoryMVulnerability) SetRevisionhistory(v []AdvisoryRRevision) {
	o.Revisionhistory = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryMVulnerability) GetTitle() AdvisoryIVal {
	if o == nil || IsNil(o.Title) {
		var ret AdvisoryIVal
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMVulnerability) GetTitleOk() (*AdvisoryIVal, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryMVulnerability) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given AdvisoryIVal and assigns it to the Title field.
func (o *AdvisoryMVulnerability) SetTitle(v AdvisoryIVal) {
	o.Title = &v
}

func (o AdvisoryMVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductStatuses) {
		toSerialize["ProductStatuses"] = o.ProductStatuses
	}
	if !IsNil(o.Remediations) {
		toSerialize["Remediations"] = o.Remediations
	}
	if !IsNil(o.Threats) {
		toSerialize["Threats"] = o.Threats
	}
	if !IsNil(o.Acknowledgments) {
		toSerialize["acknowledgments"] = o.Acknowledgments
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cvssscoresets) {
		toSerialize["cvssscoresets"] = o.Cvssscoresets
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.Revisionhistory) {
		toSerialize["revisionhistory"] = o.Revisionhistory
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisoryMVulnerability struct {
	value *AdvisoryMVulnerability
	isSet bool
}

func (v NullableAdvisoryMVulnerability) Get() *AdvisoryMVulnerability {
	return v.value
}

func (v *NullableAdvisoryMVulnerability) Set(val *AdvisoryMVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMVulnerability(val *AdvisoryMVulnerability) *NullableAdvisoryMVulnerability {
	return &NullableAdvisoryMVulnerability{value: val, isSet: true}
}

func (v NullableAdvisoryMVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


