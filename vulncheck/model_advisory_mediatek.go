/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMediatek type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMediatek{}

// AdvisoryMediatek struct for AdvisoryMediatek
type AdvisoryMediatek struct {
	AffectedChipsets []string `json:"affected_chipsets,omitempty"`
	AffectedSoftware []string `json:"affected_software,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryMediatek instantiates a new AdvisoryMediatek object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMediatek() *AdvisoryMediatek {
	this := AdvisoryMediatek{}
	return &this
}

// NewAdvisoryMediatekWithDefaults instantiates a new AdvisoryMediatek object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMediatekWithDefaults() *AdvisoryMediatek {
	this := AdvisoryMediatek{}
	return &this
}

// GetAffectedChipsets returns the AffectedChipsets field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetAffectedChipsets() []string {
	if o == nil || IsNil(o.AffectedChipsets) {
		var ret []string
		return ret
	}
	return o.AffectedChipsets
}

// GetAffectedChipsetsOk returns a tuple with the AffectedChipsets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetAffectedChipsetsOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedChipsets) {
		return nil, false
	}
	return o.AffectedChipsets, true
}

// HasAffectedChipsets returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasAffectedChipsets() bool {
	if o != nil && !IsNil(o.AffectedChipsets) {
		return true
	}

	return false
}

// SetAffectedChipsets gets a reference to the given []string and assigns it to the AffectedChipsets field.
func (o *AdvisoryMediatek) SetAffectedChipsets(v []string) {
	o.AffectedChipsets = v
}

// GetAffectedSoftware returns the AffectedSoftware field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetAffectedSoftware() []string {
	if o == nil || IsNil(o.AffectedSoftware) {
		var ret []string
		return ret
	}
	return o.AffectedSoftware
}

// GetAffectedSoftwareOk returns a tuple with the AffectedSoftware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetAffectedSoftwareOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedSoftware) {
		return nil, false
	}
	return o.AffectedSoftware, true
}

// HasAffectedSoftware returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasAffectedSoftware() bool {
	if o != nil && !IsNil(o.AffectedSoftware) {
		return true
	}

	return false
}

// SetAffectedSoftware gets a reference to the given []string and assigns it to the AffectedSoftware field.
func (o *AdvisoryMediatek) SetAffectedSoftware(v []string) {
	o.AffectedSoftware = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryMediatek) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryMediatek) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryMediatek) SetDescription(v string) {
	o.Description = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryMediatek) SetSeverity(v string) {
	o.Severity = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryMediatek) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryMediatek) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryMediatek) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMediatek) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryMediatek) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryMediatek) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryMediatek) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMediatek) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedChipsets) {
		toSerialize["affected_chipsets"] = o.AffectedChipsets
	}
	if !IsNil(o.AffectedSoftware) {
		toSerialize["affected_software"] = o.AffectedSoftware
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryMediatek struct {
	value *AdvisoryMediatek
	isSet bool
}

func (v NullableAdvisoryMediatek) Get() *AdvisoryMediatek {
	return v.value
}

func (v *NullableAdvisoryMediatek) Set(val *AdvisoryMediatek) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMediatek) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMediatek) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMediatek(val *AdvisoryMediatek) *NullableAdvisoryMediatek {
	return &NullableAdvisoryMediatek{value: val, isSet: true}
}

func (v NullableAdvisoryMediatek) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMediatek) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


