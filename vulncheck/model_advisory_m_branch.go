/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMBranch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMBranch{}

// AdvisoryMBranch struct for AdvisoryMBranch
type AdvisoryMBranch struct {
	Branch []AdvisoryMBranch `json:"Branch,omitempty"`
	FullProductName []AdvisoryMFullProductName `json:"FullProductName,omitempty"`
	Items []AdvisoryMItem `json:"Items,omitempty"`
	Name *string `json:"name,omitempty"`
	// diff
	Type *int32 `json:"type,omitempty"`
}

// NewAdvisoryMBranch instantiates a new AdvisoryMBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMBranch() *AdvisoryMBranch {
	this := AdvisoryMBranch{}
	return &this
}

// NewAdvisoryMBranchWithDefaults instantiates a new AdvisoryMBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMBranchWithDefaults() *AdvisoryMBranch {
	this := AdvisoryMBranch{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *AdvisoryMBranch) GetBranch() []AdvisoryMBranch {
	if o == nil || IsNil(o.Branch) {
		var ret []AdvisoryMBranch
		return ret
	}
	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMBranch) GetBranchOk() ([]AdvisoryMBranch, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *AdvisoryMBranch) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given []AdvisoryMBranch and assigns it to the Branch field.
func (o *AdvisoryMBranch) SetBranch(v []AdvisoryMBranch) {
	o.Branch = v
}

// GetFullProductName returns the FullProductName field value if set, zero value otherwise.
func (o *AdvisoryMBranch) GetFullProductName() []AdvisoryMFullProductName {
	if o == nil || IsNil(o.FullProductName) {
		var ret []AdvisoryMFullProductName
		return ret
	}
	return o.FullProductName
}

// GetFullProductNameOk returns a tuple with the FullProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMBranch) GetFullProductNameOk() ([]AdvisoryMFullProductName, bool) {
	if o == nil || IsNil(o.FullProductName) {
		return nil, false
	}
	return o.FullProductName, true
}

// HasFullProductName returns a boolean if a field has been set.
func (o *AdvisoryMBranch) HasFullProductName() bool {
	if o != nil && !IsNil(o.FullProductName) {
		return true
	}

	return false
}

// SetFullProductName gets a reference to the given []AdvisoryMFullProductName and assigns it to the FullProductName field.
func (o *AdvisoryMBranch) SetFullProductName(v []AdvisoryMFullProductName) {
	o.FullProductName = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AdvisoryMBranch) GetItems() []AdvisoryMItem {
	if o == nil || IsNil(o.Items) {
		var ret []AdvisoryMItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMBranch) GetItemsOk() ([]AdvisoryMItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AdvisoryMBranch) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AdvisoryMItem and assigns it to the Items field.
func (o *AdvisoryMBranch) SetItems(v []AdvisoryMItem) {
	o.Items = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryMBranch) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMBranch) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryMBranch) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryMBranch) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryMBranch) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMBranch) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryMBranch) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *AdvisoryMBranch) SetType(v int32) {
	o.Type = &v
}

func (o AdvisoryMBranch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMBranch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branch) {
		toSerialize["Branch"] = o.Branch
	}
	if !IsNil(o.FullProductName) {
		toSerialize["FullProductName"] = o.FullProductName
	}
	if !IsNil(o.Items) {
		toSerialize["Items"] = o.Items
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisoryMBranch struct {
	value *AdvisoryMBranch
	isSet bool
}

func (v NullableAdvisoryMBranch) Get() *AdvisoryMBranch {
	return v.value
}

func (v *NullableAdvisoryMBranch) Set(val *AdvisoryMBranch) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMBranch) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMBranch(val *AdvisoryMBranch) *NullableAdvisoryMBranch {
	return &NullableAdvisoryMBranch{value: val, isSet: true}
}

func (v NullableAdvisoryMBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


