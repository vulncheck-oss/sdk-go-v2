/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryVulnerability{}

// AdvisoryVulnerability struct for AdvisoryVulnerability
type AdvisoryVulnerability struct {
	Cve *string `json:"cve,omitempty"`
	CvssscoreSets *AdvisoryScoreSet `json:"cvssscoreSets,omitempty"`
	Description *string `json:"description,omitempty"`
	// vulncheck addition
	Packages []AdvisoryVulnCheckPackage `json:"packages,omitempty"`
	ProductStatuses []AdvisoryStatus `json:"productStatuses,omitempty"`
	References []AdvisoryCVRFReference `json:"references,omitempty"`
	Threats []AdvisoryThreat `json:"threats,omitempty"`
}

// NewAdvisoryVulnerability instantiates a new AdvisoryVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryVulnerability() *AdvisoryVulnerability {
	this := AdvisoryVulnerability{}
	return &this
}

// NewAdvisoryVulnerabilityWithDefaults instantiates a new AdvisoryVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryVulnerabilityWithDefaults() *AdvisoryVulnerability {
	this := AdvisoryVulnerability{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *AdvisoryVulnerability) SetCve(v string) {
	o.Cve = &v
}

// GetCvssscoreSets returns the CvssscoreSets field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetCvssscoreSets() AdvisoryScoreSet {
	if o == nil || IsNil(o.CvssscoreSets) {
		var ret AdvisoryScoreSet
		return ret
	}
	return *o.CvssscoreSets
}

// GetCvssscoreSetsOk returns a tuple with the CvssscoreSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetCvssscoreSetsOk() (*AdvisoryScoreSet, bool) {
	if o == nil || IsNil(o.CvssscoreSets) {
		return nil, false
	}
	return o.CvssscoreSets, true
}

// HasCvssscoreSets returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasCvssscoreSets() bool {
	if o != nil && !IsNil(o.CvssscoreSets) {
		return true
	}

	return false
}

// SetCvssscoreSets gets a reference to the given AdvisoryScoreSet and assigns it to the CvssscoreSets field.
func (o *AdvisoryVulnerability) SetCvssscoreSets(v AdvisoryScoreSet) {
	o.CvssscoreSets = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryVulnerability) SetDescription(v string) {
	o.Description = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetPackages() []AdvisoryVulnCheckPackage {
	if o == nil || IsNil(o.Packages) {
		var ret []AdvisoryVulnCheckPackage
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetPackagesOk() ([]AdvisoryVulnCheckPackage, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []AdvisoryVulnCheckPackage and assigns it to the Packages field.
func (o *AdvisoryVulnerability) SetPackages(v []AdvisoryVulnCheckPackage) {
	o.Packages = v
}

// GetProductStatuses returns the ProductStatuses field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetProductStatuses() []AdvisoryStatus {
	if o == nil || IsNil(o.ProductStatuses) {
		var ret []AdvisoryStatus
		return ret
	}
	return o.ProductStatuses
}

// GetProductStatusesOk returns a tuple with the ProductStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetProductStatusesOk() ([]AdvisoryStatus, bool) {
	if o == nil || IsNil(o.ProductStatuses) {
		return nil, false
	}
	return o.ProductStatuses, true
}

// HasProductStatuses returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasProductStatuses() bool {
	if o != nil && !IsNil(o.ProductStatuses) {
		return true
	}

	return false
}

// SetProductStatuses gets a reference to the given []AdvisoryStatus and assigns it to the ProductStatuses field.
func (o *AdvisoryVulnerability) SetProductStatuses(v []AdvisoryStatus) {
	o.ProductStatuses = v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetReferences() []AdvisoryCVRFReference {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryCVRFReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetReferencesOk() ([]AdvisoryCVRFReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryCVRFReference and assigns it to the References field.
func (o *AdvisoryVulnerability) SetReferences(v []AdvisoryCVRFReference) {
	o.References = v
}

// GetThreats returns the Threats field value if set, zero value otherwise.
func (o *AdvisoryVulnerability) GetThreats() []AdvisoryThreat {
	if o == nil || IsNil(o.Threats) {
		var ret []AdvisoryThreat
		return ret
	}
	return o.Threats
}

// GetThreatsOk returns a tuple with the Threats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnerability) GetThreatsOk() ([]AdvisoryThreat, bool) {
	if o == nil || IsNil(o.Threats) {
		return nil, false
	}
	return o.Threats, true
}

// HasThreats returns a boolean if a field has been set.
func (o *AdvisoryVulnerability) HasThreats() bool {
	if o != nil && !IsNil(o.Threats) {
		return true
	}

	return false
}

// SetThreats gets a reference to the given []AdvisoryThreat and assigns it to the Threats field.
func (o *AdvisoryVulnerability) SetThreats(v []AdvisoryThreat) {
	o.Threats = v
}

func (o AdvisoryVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CvssscoreSets) {
		toSerialize["cvssscoreSets"] = o.CvssscoreSets
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.ProductStatuses) {
		toSerialize["productStatuses"] = o.ProductStatuses
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Threats) {
		toSerialize["threats"] = o.Threats
	}
	return toSerialize, nil
}

type NullableAdvisoryVulnerability struct {
	value *AdvisoryVulnerability
	isSet bool
}

func (v NullableAdvisoryVulnerability) Get() *AdvisoryVulnerability {
	return v.value
}

func (v *NullableAdvisoryVulnerability) Set(val *AdvisoryVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryVulnerability(val *AdvisoryVulnerability) *NullableAdvisoryVulnerability {
	return &NullableAdvisoryVulnerability{value: val, isSet: true}
}

func (v NullableAdvisoryVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


