/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryOpenBSD type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryOpenBSD{}

// AdvisoryOpenBSD struct for AdvisoryOpenBSD
type AdvisoryOpenBSD struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Patch *string `json:"patch,omitempty"`
	Release *string `json:"release,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryOpenBSD instantiates a new AdvisoryOpenBSD object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryOpenBSD() *AdvisoryOpenBSD {
	this := AdvisoryOpenBSD{}
	return &this
}

// NewAdvisoryOpenBSDWithDefaults instantiates a new AdvisoryOpenBSD object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryOpenBSDWithDefaults() *AdvisoryOpenBSD {
	this := AdvisoryOpenBSD{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryOpenBSD) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryOpenBSD) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryOpenBSD) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryOpenBSD) SetId(v string) {
	o.Id = &v
}

// GetPatch returns the Patch field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetPatch() string {
	if o == nil || IsNil(o.Patch) {
		var ret string
		return ret
	}
	return *o.Patch
}

// GetPatchOk returns a tuple with the Patch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetPatchOk() (*string, bool) {
	if o == nil || IsNil(o.Patch) {
		return nil, false
	}
	return o.Patch, true
}

// HasPatch returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasPatch() bool {
	if o != nil && !IsNil(o.Patch) {
		return true
	}

	return false
}

// SetPatch gets a reference to the given string and assigns it to the Patch field.
func (o *AdvisoryOpenBSD) SetPatch(v string) {
	o.Patch = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *AdvisoryOpenBSD) SetRelease(v string) {
	o.Release = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryOpenBSD) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenBSD) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryOpenBSD) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryOpenBSD) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryOpenBSD) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryOpenBSD) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Patch) {
		toSerialize["patch"] = o.Patch
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryOpenBSD struct {
	value *AdvisoryOpenBSD
	isSet bool
}

func (v NullableAdvisoryOpenBSD) Get() *AdvisoryOpenBSD {
	return v.value
}

func (v *NullableAdvisoryOpenBSD) Set(val *AdvisoryOpenBSD) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryOpenBSD) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryOpenBSD) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryOpenBSD(val *AdvisoryOpenBSD) *NullableAdvisoryOpenBSD {
	return &NullableAdvisoryOpenBSD{value: val, isSet: true}
}

func (v NullableAdvisoryOpenBSD) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryOpenBSD) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


