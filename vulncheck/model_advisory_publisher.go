/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryPublisher type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryPublisher{}

// AdvisoryPublisher struct for AdvisoryPublisher
type AdvisoryPublisher struct {
	Category *string `json:"category,omitempty"`
	ContactDetails *string `json:"contact_details,omitempty"`
	IssuingAuthority *string `json:"issuing_authority,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
}

// NewAdvisoryPublisher instantiates a new AdvisoryPublisher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryPublisher() *AdvisoryPublisher {
	this := AdvisoryPublisher{}
	return &this
}

// NewAdvisoryPublisherWithDefaults instantiates a new AdvisoryPublisher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryPublisherWithDefaults() *AdvisoryPublisher {
	this := AdvisoryPublisher{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisoryPublisher) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPublisher) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisoryPublisher) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisoryPublisher) SetCategory(v string) {
	o.Category = &v
}

// GetContactDetails returns the ContactDetails field value if set, zero value otherwise.
func (o *AdvisoryPublisher) GetContactDetails() string {
	if o == nil || IsNil(o.ContactDetails) {
		var ret string
		return ret
	}
	return *o.ContactDetails
}

// GetContactDetailsOk returns a tuple with the ContactDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPublisher) GetContactDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.ContactDetails) {
		return nil, false
	}
	return o.ContactDetails, true
}

// HasContactDetails returns a boolean if a field has been set.
func (o *AdvisoryPublisher) HasContactDetails() bool {
	if o != nil && !IsNil(o.ContactDetails) {
		return true
	}

	return false
}

// SetContactDetails gets a reference to the given string and assigns it to the ContactDetails field.
func (o *AdvisoryPublisher) SetContactDetails(v string) {
	o.ContactDetails = &v
}

// GetIssuingAuthority returns the IssuingAuthority field value if set, zero value otherwise.
func (o *AdvisoryPublisher) GetIssuingAuthority() string {
	if o == nil || IsNil(o.IssuingAuthority) {
		var ret string
		return ret
	}
	return *o.IssuingAuthority
}

// GetIssuingAuthorityOk returns a tuple with the IssuingAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPublisher) GetIssuingAuthorityOk() (*string, bool) {
	if o == nil || IsNil(o.IssuingAuthority) {
		return nil, false
	}
	return o.IssuingAuthority, true
}

// HasIssuingAuthority returns a boolean if a field has been set.
func (o *AdvisoryPublisher) HasIssuingAuthority() bool {
	if o != nil && !IsNil(o.IssuingAuthority) {
		return true
	}

	return false
}

// SetIssuingAuthority gets a reference to the given string and assigns it to the IssuingAuthority field.
func (o *AdvisoryPublisher) SetIssuingAuthority(v string) {
	o.IssuingAuthority = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryPublisher) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPublisher) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryPublisher) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryPublisher) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *AdvisoryPublisher) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPublisher) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *AdvisoryPublisher) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *AdvisoryPublisher) SetNamespace(v string) {
	o.Namespace = &v
}

func (o AdvisoryPublisher) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryPublisher) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.ContactDetails) {
		toSerialize["contact_details"] = o.ContactDetails
	}
	if !IsNil(o.IssuingAuthority) {
		toSerialize["issuing_authority"] = o.IssuingAuthority
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	return toSerialize, nil
}

type NullableAdvisoryPublisher struct {
	value *AdvisoryPublisher
	isSet bool
}

func (v NullableAdvisoryPublisher) Get() *AdvisoryPublisher {
	return v.value
}

func (v *NullableAdvisoryPublisher) Set(val *AdvisoryPublisher) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryPublisher) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryPublisher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryPublisher(val *AdvisoryPublisher) *NullableAdvisoryPublisher {
	return &NullableAdvisoryPublisher{value: val, isSet: true}
}

func (v NullableAdvisoryPublisher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryPublisher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


