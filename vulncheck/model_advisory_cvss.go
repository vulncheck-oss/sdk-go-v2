/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCVSS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCVSS{}

// AdvisoryCVSS struct for AdvisoryCVSS
type AdvisoryCVSS struct {
	Score *string `json:"score,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Type *string `json:"type,omitempty"`
	Vector *string `json:"vector,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryCVSS instantiates a new AdvisoryCVSS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCVSS() *AdvisoryCVSS {
	this := AdvisoryCVSS{}
	return &this
}

// NewAdvisoryCVSSWithDefaults instantiates a new AdvisoryCVSS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCVSSWithDefaults() *AdvisoryCVSS {
	this := AdvisoryCVSS{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *AdvisoryCVSS) GetScore() string {
	if o == nil || IsNil(o.Score) {
		var ret string
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSS) GetScoreOk() (*string, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *AdvisoryCVSS) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given string and assigns it to the Score field.
func (o *AdvisoryCVSS) SetScore(v string) {
	o.Score = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryCVSS) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSS) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryCVSS) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryCVSS) SetSeverity(v string) {
	o.Severity = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryCVSS) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSS) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryCVSS) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryCVSS) SetType(v string) {
	o.Type = &v
}

// GetVector returns the Vector field value if set, zero value otherwise.
func (o *AdvisoryCVSS) GetVector() string {
	if o == nil || IsNil(o.Vector) {
		var ret string
		return ret
	}
	return *o.Vector
}

// GetVectorOk returns a tuple with the Vector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSS) GetVectorOk() (*string, bool) {
	if o == nil || IsNil(o.Vector) {
		return nil, false
	}
	return o.Vector, true
}

// HasVector returns a boolean if a field has been set.
func (o *AdvisoryCVSS) HasVector() bool {
	if o != nil && !IsNil(o.Vector) {
		return true
	}

	return false
}

// SetVector gets a reference to the given string and assigns it to the Vector field.
func (o *AdvisoryCVSS) SetVector(v string) {
	o.Vector = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryCVSS) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSS) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryCVSS) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryCVSS) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryCVSS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCVSS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Vector) {
		toSerialize["vector"] = o.Vector
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryCVSS struct {
	value *AdvisoryCVSS
	isSet bool
}

func (v NullableAdvisoryCVSS) Get() *AdvisoryCVSS {
	return v.value
}

func (v *NullableAdvisoryCVSS) Set(val *AdvisoryCVSS) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCVSS) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCVSS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCVSS(val *AdvisoryCVSS) *NullableAdvisoryCVSS {
	return &NullableAdvisoryCVSS{value: val, isSet: true}
}

func (v NullableAdvisoryCVSS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCVSS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


