/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryHaskellSADBAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryHaskellSADBAdvisory{}

// AdvisoryHaskellSADBAdvisory struct for AdvisoryHaskellSADBAdvisory
type AdvisoryHaskellSADBAdvisory struct {
	AdvisoryId *string `json:"advisory_id,omitempty"`
	AffectedPackages []AdvisoryHaskellAffected `json:"affected_packages,omitempty"`
	Aliases []string `json:"aliases,omitempty"`
	Cve []string `json:"cve,omitempty"`
	Cwes []int32 `json:"cwes,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Keywords []string `json:"keywords,omitempty"`
	References *map[string][]string `json:"references,omitempty"`
	RelatedVulns []string `json:"related_vulns,omitempty"`
}

// NewAdvisoryHaskellSADBAdvisory instantiates a new AdvisoryHaskellSADBAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryHaskellSADBAdvisory() *AdvisoryHaskellSADBAdvisory {
	this := AdvisoryHaskellSADBAdvisory{}
	return &this
}

// NewAdvisoryHaskellSADBAdvisoryWithDefaults instantiates a new AdvisoryHaskellSADBAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryHaskellSADBAdvisoryWithDefaults() *AdvisoryHaskellSADBAdvisory {
	this := AdvisoryHaskellSADBAdvisory{}
	return &this
}

// GetAdvisoryId returns the AdvisoryId field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetAdvisoryId() string {
	if o == nil || IsNil(o.AdvisoryId) {
		var ret string
		return ret
	}
	return *o.AdvisoryId
}

// GetAdvisoryIdOk returns a tuple with the AdvisoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetAdvisoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdvisoryId) {
		return nil, false
	}
	return o.AdvisoryId, true
}

// HasAdvisoryId returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasAdvisoryId() bool {
	if o != nil && !IsNil(o.AdvisoryId) {
		return true
	}

	return false
}

// SetAdvisoryId gets a reference to the given string and assigns it to the AdvisoryId field.
func (o *AdvisoryHaskellSADBAdvisory) SetAdvisoryId(v string) {
	o.AdvisoryId = &v
}

// GetAffectedPackages returns the AffectedPackages field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetAffectedPackages() []AdvisoryHaskellAffected {
	if o == nil || IsNil(o.AffectedPackages) {
		var ret []AdvisoryHaskellAffected
		return ret
	}
	return o.AffectedPackages
}

// GetAffectedPackagesOk returns a tuple with the AffectedPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetAffectedPackagesOk() ([]AdvisoryHaskellAffected, bool) {
	if o == nil || IsNil(o.AffectedPackages) {
		return nil, false
	}
	return o.AffectedPackages, true
}

// HasAffectedPackages returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasAffectedPackages() bool {
	if o != nil && !IsNil(o.AffectedPackages) {
		return true
	}

	return false
}

// SetAffectedPackages gets a reference to the given []AdvisoryHaskellAffected and assigns it to the AffectedPackages field.
func (o *AdvisoryHaskellSADBAdvisory) SetAffectedPackages(v []AdvisoryHaskellAffected) {
	o.AffectedPackages = v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *AdvisoryHaskellSADBAdvisory) SetAliases(v []string) {
	o.Aliases = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryHaskellSADBAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetCwes returns the Cwes field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetCwes() []int32 {
	if o == nil || IsNil(o.Cwes) {
		var ret []int32
		return ret
	}
	return o.Cwes
}

// GetCwesOk returns a tuple with the Cwes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetCwesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Cwes) {
		return nil, false
	}
	return o.Cwes, true
}

// HasCwes returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasCwes() bool {
	if o != nil && !IsNil(o.Cwes) {
		return true
	}

	return false
}

// SetCwes gets a reference to the given []int32 and assigns it to the Cwes field.
func (o *AdvisoryHaskellSADBAdvisory) SetCwes(v []int32) {
	o.Cwes = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryHaskellSADBAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetKeywords() []string {
	if o == nil || IsNil(o.Keywords) {
		var ret []string
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []string and assigns it to the Keywords field.
func (o *AdvisoryHaskellSADBAdvisory) SetKeywords(v []string) {
	o.Keywords = v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetReferences() map[string][]string {
	if o == nil || IsNil(o.References) {
		var ret map[string][]string
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetReferencesOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given map[string][]string and assigns it to the References field.
func (o *AdvisoryHaskellSADBAdvisory) SetReferences(v map[string][]string) {
	o.References = &v
}

// GetRelatedVulns returns the RelatedVulns field value if set, zero value otherwise.
func (o *AdvisoryHaskellSADBAdvisory) GetRelatedVulns() []string {
	if o == nil || IsNil(o.RelatedVulns) {
		var ret []string
		return ret
	}
	return o.RelatedVulns
}

// GetRelatedVulnsOk returns a tuple with the RelatedVulns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellSADBAdvisory) GetRelatedVulnsOk() ([]string, bool) {
	if o == nil || IsNil(o.RelatedVulns) {
		return nil, false
	}
	return o.RelatedVulns, true
}

// HasRelatedVulns returns a boolean if a field has been set.
func (o *AdvisoryHaskellSADBAdvisory) HasRelatedVulns() bool {
	if o != nil && !IsNil(o.RelatedVulns) {
		return true
	}

	return false
}

// SetRelatedVulns gets a reference to the given []string and assigns it to the RelatedVulns field.
func (o *AdvisoryHaskellSADBAdvisory) SetRelatedVulns(v []string) {
	o.RelatedVulns = v
}

func (o AdvisoryHaskellSADBAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryHaskellSADBAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvisoryId) {
		toSerialize["advisory_id"] = o.AdvisoryId
	}
	if !IsNil(o.AffectedPackages) {
		toSerialize["affected_packages"] = o.AffectedPackages
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cwes) {
		toSerialize["cwes"] = o.Cwes
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.RelatedVulns) {
		toSerialize["related_vulns"] = o.RelatedVulns
	}
	return toSerialize, nil
}

type NullableAdvisoryHaskellSADBAdvisory struct {
	value *AdvisoryHaskellSADBAdvisory
	isSet bool
}

func (v NullableAdvisoryHaskellSADBAdvisory) Get() *AdvisoryHaskellSADBAdvisory {
	return v.value
}

func (v *NullableAdvisoryHaskellSADBAdvisory) Set(val *AdvisoryHaskellSADBAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryHaskellSADBAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryHaskellSADBAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryHaskellSADBAdvisory(val *AdvisoryHaskellSADBAdvisory) *NullableAdvisoryHaskellSADBAdvisory {
	return &NullableAdvisoryHaskellSADBAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryHaskellSADBAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryHaskellSADBAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


