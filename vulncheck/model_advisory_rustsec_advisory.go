/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRustsecAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRustsecAdvisory{}

// AdvisoryRustsecAdvisory struct for AdvisoryRustsecAdvisory
type AdvisoryRustsecAdvisory struct {
	Advisory *AdvisoryRustsecFrontMatterAdvisory `json:"advisory,omitempty"`
	Affected *AdvisoryRustsecAffected `json:"affected,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Versions *AdvisoryRustsecFrontMatterVersions `json:"versions,omitempty"`
}

// NewAdvisoryRustsecAdvisory instantiates a new AdvisoryRustsecAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRustsecAdvisory() *AdvisoryRustsecAdvisory {
	this := AdvisoryRustsecAdvisory{}
	return &this
}

// NewAdvisoryRustsecAdvisoryWithDefaults instantiates a new AdvisoryRustsecAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRustsecAdvisoryWithDefaults() *AdvisoryRustsecAdvisory {
	this := AdvisoryRustsecAdvisory{}
	return &this
}

// GetAdvisory returns the Advisory field value if set, zero value otherwise.
func (o *AdvisoryRustsecAdvisory) GetAdvisory() AdvisoryRustsecFrontMatterAdvisory {
	if o == nil || IsNil(o.Advisory) {
		var ret AdvisoryRustsecFrontMatterAdvisory
		return ret
	}
	return *o.Advisory
}

// GetAdvisoryOk returns a tuple with the Advisory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAdvisory) GetAdvisoryOk() (*AdvisoryRustsecFrontMatterAdvisory, bool) {
	if o == nil || IsNil(o.Advisory) {
		return nil, false
	}
	return o.Advisory, true
}

// HasAdvisory returns a boolean if a field has been set.
func (o *AdvisoryRustsecAdvisory) HasAdvisory() bool {
	if o != nil && !IsNil(o.Advisory) {
		return true
	}

	return false
}

// SetAdvisory gets a reference to the given AdvisoryRustsecFrontMatterAdvisory and assigns it to the Advisory field.
func (o *AdvisoryRustsecAdvisory) SetAdvisory(v AdvisoryRustsecFrontMatterAdvisory) {
	o.Advisory = &v
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *AdvisoryRustsecAdvisory) GetAffected() AdvisoryRustsecAffected {
	if o == nil || IsNil(o.Affected) {
		var ret AdvisoryRustsecAffected
		return ret
	}
	return *o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAdvisory) GetAffectedOk() (*AdvisoryRustsecAffected, bool) {
	if o == nil || IsNil(o.Affected) {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *AdvisoryRustsecAdvisory) HasAffected() bool {
	if o != nil && !IsNil(o.Affected) {
		return true
	}

	return false
}

// SetAffected gets a reference to the given AdvisoryRustsecAffected and assigns it to the Affected field.
func (o *AdvisoryRustsecAdvisory) SetAffected(v AdvisoryRustsecAffected) {
	o.Affected = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryRustsecAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryRustsecAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryRustsecAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryRustsecAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryRustsecAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryRustsecAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryRustsecAdvisory) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAdvisory) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryRustsecAdvisory) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryRustsecAdvisory) SetDescription(v string) {
	o.Description = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *AdvisoryRustsecAdvisory) GetVersions() AdvisoryRustsecFrontMatterVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AdvisoryRustsecFrontMatterVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecAdvisory) GetVersionsOk() (*AdvisoryRustsecFrontMatterVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *AdvisoryRustsecAdvisory) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AdvisoryRustsecFrontMatterVersions and assigns it to the Versions field.
func (o *AdvisoryRustsecAdvisory) SetVersions(v AdvisoryRustsecFrontMatterVersions) {
	o.Versions = &v
}

func (o AdvisoryRustsecAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRustsecAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Advisory) {
		toSerialize["advisory"] = o.Advisory
	}
	if !IsNil(o.Affected) {
		toSerialize["affected"] = o.Affected
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableAdvisoryRustsecAdvisory struct {
	value *AdvisoryRustsecAdvisory
	isSet bool
}

func (v NullableAdvisoryRustsecAdvisory) Get() *AdvisoryRustsecAdvisory {
	return v.value
}

func (v *NullableAdvisoryRustsecAdvisory) Set(val *AdvisoryRustsecAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRustsecAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRustsecAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRustsecAdvisory(val *AdvisoryRustsecAdvisory) *NullableAdvisoryRustsecAdvisory {
	return &NullableAdvisoryRustsecAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryRustsecAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRustsecAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


