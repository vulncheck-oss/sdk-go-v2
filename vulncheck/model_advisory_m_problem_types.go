/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMProblemTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMProblemTypes{}

// AdvisoryMProblemTypes struct for AdvisoryMProblemTypes
type AdvisoryMProblemTypes struct {
	Descriptions []AdvisoryPTMDescriptions `json:"descriptions,omitempty"`
}

// NewAdvisoryMProblemTypes instantiates a new AdvisoryMProblemTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMProblemTypes() *AdvisoryMProblemTypes {
	this := AdvisoryMProblemTypes{}
	return &this
}

// NewAdvisoryMProblemTypesWithDefaults instantiates a new AdvisoryMProblemTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMProblemTypesWithDefaults() *AdvisoryMProblemTypes {
	this := AdvisoryMProblemTypes{}
	return &this
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *AdvisoryMProblemTypes) GetDescriptions() []AdvisoryPTMDescriptions {
	if o == nil || IsNil(o.Descriptions) {
		var ret []AdvisoryPTMDescriptions
		return ret
	}
	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMProblemTypes) GetDescriptionsOk() ([]AdvisoryPTMDescriptions, bool) {
	if o == nil || IsNil(o.Descriptions) {
		return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *AdvisoryMProblemTypes) HasDescriptions() bool {
	if o != nil && !IsNil(o.Descriptions) {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []AdvisoryPTMDescriptions and assigns it to the Descriptions field.
func (o *AdvisoryMProblemTypes) SetDescriptions(v []AdvisoryPTMDescriptions) {
	o.Descriptions = v
}

func (o AdvisoryMProblemTypes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMProblemTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Descriptions) {
		toSerialize["descriptions"] = o.Descriptions
	}
	return toSerialize, nil
}

type NullableAdvisoryMProblemTypes struct {
	value *AdvisoryMProblemTypes
	isSet bool
}

func (v NullableAdvisoryMProblemTypes) Get() *AdvisoryMProblemTypes {
	return v.value
}

func (v *NullableAdvisoryMProblemTypes) Set(val *AdvisoryMProblemTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMProblemTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMProblemTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMProblemTypes(val *AdvisoryMProblemTypes) *NullableAdvisoryMProblemTypes {
	return &NullableAdvisoryMProblemTypes{value: val, isSet: true}
}

func (v NullableAdvisoryMProblemTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMProblemTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


