/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMitreGroupCTI type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMitreGroupCTI{}

// AdvisoryMitreGroupCTI struct for AdvisoryMitreGroupCTI
type AdvisoryMitreGroupCTI struct {
	Aliases []string `json:"aliases,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	References []AdvisoryExternalReferences `json:"references,omitempty"`
}

// NewAdvisoryMitreGroupCTI instantiates a new AdvisoryMitreGroupCTI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMitreGroupCTI() *AdvisoryMitreGroupCTI {
	this := AdvisoryMitreGroupCTI{}
	return &this
}

// NewAdvisoryMitreGroupCTIWithDefaults instantiates a new AdvisoryMitreGroupCTI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMitreGroupCTIWithDefaults() *AdvisoryMitreGroupCTI {
	this := AdvisoryMitreGroupCTI{}
	return &this
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *AdvisoryMitreGroupCTI) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreGroupCTI) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *AdvisoryMitreGroupCTI) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *AdvisoryMitreGroupCTI) SetAliases(v []string) {
	o.Aliases = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryMitreGroupCTI) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreGroupCTI) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryMitreGroupCTI) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryMitreGroupCTI) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryMitreGroupCTI) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreGroupCTI) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryMitreGroupCTI) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryMitreGroupCTI) SetId(v string) {
	o.Id = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryMitreGroupCTI) GetReferences() []AdvisoryExternalReferences {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryExternalReferences
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMitreGroupCTI) GetReferencesOk() ([]AdvisoryExternalReferences, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryMitreGroupCTI) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryExternalReferences and assigns it to the References field.
func (o *AdvisoryMitreGroupCTI) SetReferences(v []AdvisoryExternalReferences) {
	o.References = v
}

func (o AdvisoryMitreGroupCTI) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMitreGroupCTI) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	return toSerialize, nil
}

type NullableAdvisoryMitreGroupCTI struct {
	value *AdvisoryMitreGroupCTI
	isSet bool
}

func (v NullableAdvisoryMitreGroupCTI) Get() *AdvisoryMitreGroupCTI {
	return v.value
}

func (v *NullableAdvisoryMitreGroupCTI) Set(val *AdvisoryMitreGroupCTI) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMitreGroupCTI) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMitreGroupCTI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMitreGroupCTI(val *AdvisoryMitreGroupCTI) *NullableAdvisoryMitreGroupCTI {
	return &NullableAdvisoryMitreGroupCTI{value: val, isSet: true}
}

func (v NullableAdvisoryMitreGroupCTI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMitreGroupCTI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


