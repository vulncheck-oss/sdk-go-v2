/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryVulnCheck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryVulnCheck{}

// AdvisoryVulnCheck struct for AdvisoryVulnCheck
type AdvisoryVulnCheck struct {
	Affecting []string `json:"affecting,omitempty"`
	Credit []string `json:"credit,omitempty"`
	Cve []string `json:"cve,omitempty"`
	Cvss *string `json:"cvss,omitempty"`
	CvssV3Vector *string `json:"cvss_v3_vector,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	References []string `json:"references,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryVulnCheck instantiates a new AdvisoryVulnCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryVulnCheck() *AdvisoryVulnCheck {
	this := AdvisoryVulnCheck{}
	return &this
}

// NewAdvisoryVulnCheckWithDefaults instantiates a new AdvisoryVulnCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryVulnCheckWithDefaults() *AdvisoryVulnCheck {
	this := AdvisoryVulnCheck{}
	return &this
}

// GetAffecting returns the Affecting field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetAffecting() []string {
	if o == nil || IsNil(o.Affecting) {
		var ret []string
		return ret
	}
	return o.Affecting
}

// GetAffectingOk returns a tuple with the Affecting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetAffectingOk() ([]string, bool) {
	if o == nil || IsNil(o.Affecting) {
		return nil, false
	}
	return o.Affecting, true
}

// HasAffecting returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasAffecting() bool {
	if o != nil && !IsNil(o.Affecting) {
		return true
	}

	return false
}

// SetAffecting gets a reference to the given []string and assigns it to the Affecting field.
func (o *AdvisoryVulnCheck) SetAffecting(v []string) {
	o.Affecting = v
}

// GetCredit returns the Credit field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetCredit() []string {
	if o == nil || IsNil(o.Credit) {
		var ret []string
		return ret
	}
	return o.Credit
}

// GetCreditOk returns a tuple with the Credit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetCreditOk() ([]string, bool) {
	if o == nil || IsNil(o.Credit) {
		return nil, false
	}
	return o.Credit, true
}

// HasCredit returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasCredit() bool {
	if o != nil && !IsNil(o.Credit) {
		return true
	}

	return false
}

// SetCredit gets a reference to the given []string and assigns it to the Credit field.
func (o *AdvisoryVulnCheck) SetCredit(v []string) {
	o.Credit = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryVulnCheck) SetCve(v []string) {
	o.Cve = v
}

// GetCvss returns the Cvss field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetCvss() string {
	if o == nil || IsNil(o.Cvss) {
		var ret string
		return ret
	}
	return *o.Cvss
}

// GetCvssOk returns a tuple with the Cvss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetCvssOk() (*string, bool) {
	if o == nil || IsNil(o.Cvss) {
		return nil, false
	}
	return o.Cvss, true
}

// HasCvss returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasCvss() bool {
	if o != nil && !IsNil(o.Cvss) {
		return true
	}

	return false
}

// SetCvss gets a reference to the given string and assigns it to the Cvss field.
func (o *AdvisoryVulnCheck) SetCvss(v string) {
	o.Cvss = &v
}

// GetCvssV3Vector returns the CvssV3Vector field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetCvssV3Vector() string {
	if o == nil || IsNil(o.CvssV3Vector) {
		var ret string
		return ret
	}
	return *o.CvssV3Vector
}

// GetCvssV3VectorOk returns a tuple with the CvssV3Vector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetCvssV3VectorOk() (*string, bool) {
	if o == nil || IsNil(o.CvssV3Vector) {
		return nil, false
	}
	return o.CvssV3Vector, true
}

// HasCvssV3Vector returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasCvssV3Vector() bool {
	if o != nil && !IsNil(o.CvssV3Vector) {
		return true
	}

	return false
}

// SetCvssV3Vector gets a reference to the given string and assigns it to the CvssV3Vector field.
func (o *AdvisoryVulnCheck) SetCvssV3Vector(v string) {
	o.CvssV3Vector = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryVulnCheck) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryVulnCheck) SetReferences(v []string) {
	o.References = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryVulnCheck) SetSeverity(v string) {
	o.Severity = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryVulnCheck) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryVulnCheck) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryVulnCheck) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryVulnCheck) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryVulnCheck) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryVulnCheck) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryVulnCheck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryVulnCheck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Affecting) {
		toSerialize["affecting"] = o.Affecting
	}
	if !IsNil(o.Credit) {
		toSerialize["credit"] = o.Credit
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cvss) {
		toSerialize["cvss"] = o.Cvss
	}
	if !IsNil(o.CvssV3Vector) {
		toSerialize["cvss_v3_vector"] = o.CvssV3Vector
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryVulnCheck struct {
	value *AdvisoryVulnCheck
	isSet bool
}

func (v NullableAdvisoryVulnCheck) Get() *AdvisoryVulnCheck {
	return v.value
}

func (v *NullableAdvisoryVulnCheck) Set(val *AdvisoryVulnCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryVulnCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryVulnCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryVulnCheck(val *AdvisoryVulnCheck) *NullableAdvisoryVulnCheck {
	return &NullableAdvisoryVulnCheck{value: val, isSet: true}
}

func (v NullableAdvisoryVulnCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryVulnCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


