/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryOSV type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryOSV{}

// AdvisoryOSV struct for AdvisoryOSV
type AdvisoryOSV struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DateUpdated *string `json:"date_updated,omitempty"`
	Osv *AdvisoryOSVObj `json:"osv,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryOSV instantiates a new AdvisoryOSV object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryOSV() *AdvisoryOSV {
	this := AdvisoryOSV{}
	return &this
}

// NewAdvisoryOSVWithDefaults instantiates a new AdvisoryOSV object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryOSVWithDefaults() *AdvisoryOSV {
	this := AdvisoryOSV{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryOSV) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryOSV) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetDateUpdated() string {
	if o == nil || IsNil(o.DateUpdated) {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetDateUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateUpdated) {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasDateUpdated() bool {
	if o != nil && !IsNil(o.DateUpdated) {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *AdvisoryOSV) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetOsv returns the Osv field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetOsv() AdvisoryOSVObj {
	if o == nil || IsNil(o.Osv) {
		var ret AdvisoryOSVObj
		return ret
	}
	return *o.Osv
}

// GetOsvOk returns a tuple with the Osv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetOsvOk() (*AdvisoryOSVObj, bool) {
	if o == nil || IsNil(o.Osv) {
		return nil, false
	}
	return o.Osv, true
}

// HasOsv returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasOsv() bool {
	if o != nil && !IsNil(o.Osv) {
		return true
	}

	return false
}

// SetOsv gets a reference to the given AdvisoryOSVObj and assigns it to the Osv field.
func (o *AdvisoryOSV) SetOsv(v AdvisoryOSVObj) {
	o.Osv = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AdvisoryOSV) SetSummary(v string) {
	o.Summary = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryOSV) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryOSV) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOSV) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryOSV) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryOSV) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryOSV) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryOSV) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DateUpdated) {
		toSerialize["date_updated"] = o.DateUpdated
	}
	if !IsNil(o.Osv) {
		toSerialize["osv"] = o.Osv
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryOSV struct {
	value *AdvisoryOSV
	isSet bool
}

func (v NullableAdvisoryOSV) Get() *AdvisoryOSV {
	return v.value
}

func (v *NullableAdvisoryOSV) Set(val *AdvisoryOSV) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryOSV) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryOSV) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryOSV(val *AdvisoryOSV) *NullableAdvisoryOSV {
	return &NullableAdvisoryOSV{value: val, isSet: true}
}

func (v NullableAdvisoryOSV) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryOSV) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


