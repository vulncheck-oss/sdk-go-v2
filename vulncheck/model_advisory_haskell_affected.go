/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryHaskellAffected type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryHaskellAffected{}

// AdvisoryHaskellAffected struct for AdvisoryHaskellAffected
type AdvisoryHaskellAffected struct {
	AffectedConstraint *string `json:"affected_constraint,omitempty"`
	AffectedVersions []AdvisoryHaskellVersion `json:"affected_versions,omitempty"`
	Arch []string `json:"arch,omitempty"`
	Cvss *string `json:"cvss,omitempty"`
	Os []string `json:"os,omitempty"`
	Package *string `json:"package,omitempty"`
}

// NewAdvisoryHaskellAffected instantiates a new AdvisoryHaskellAffected object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryHaskellAffected() *AdvisoryHaskellAffected {
	this := AdvisoryHaskellAffected{}
	return &this
}

// NewAdvisoryHaskellAffectedWithDefaults instantiates a new AdvisoryHaskellAffected object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryHaskellAffectedWithDefaults() *AdvisoryHaskellAffected {
	this := AdvisoryHaskellAffected{}
	return &this
}

// GetAffectedConstraint returns the AffectedConstraint field value if set, zero value otherwise.
func (o *AdvisoryHaskellAffected) GetAffectedConstraint() string {
	if o == nil || IsNil(o.AffectedConstraint) {
		var ret string
		return ret
	}
	return *o.AffectedConstraint
}

// GetAffectedConstraintOk returns a tuple with the AffectedConstraint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellAffected) GetAffectedConstraintOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedConstraint) {
		return nil, false
	}
	return o.AffectedConstraint, true
}

// HasAffectedConstraint returns a boolean if a field has been set.
func (o *AdvisoryHaskellAffected) HasAffectedConstraint() bool {
	if o != nil && !IsNil(o.AffectedConstraint) {
		return true
	}

	return false
}

// SetAffectedConstraint gets a reference to the given string and assigns it to the AffectedConstraint field.
func (o *AdvisoryHaskellAffected) SetAffectedConstraint(v string) {
	o.AffectedConstraint = &v
}

// GetAffectedVersions returns the AffectedVersions field value if set, zero value otherwise.
func (o *AdvisoryHaskellAffected) GetAffectedVersions() []AdvisoryHaskellVersion {
	if o == nil || IsNil(o.AffectedVersions) {
		var ret []AdvisoryHaskellVersion
		return ret
	}
	return o.AffectedVersions
}

// GetAffectedVersionsOk returns a tuple with the AffectedVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellAffected) GetAffectedVersionsOk() ([]AdvisoryHaskellVersion, bool) {
	if o == nil || IsNil(o.AffectedVersions) {
		return nil, false
	}
	return o.AffectedVersions, true
}

// HasAffectedVersions returns a boolean if a field has been set.
func (o *AdvisoryHaskellAffected) HasAffectedVersions() bool {
	if o != nil && !IsNil(o.AffectedVersions) {
		return true
	}

	return false
}

// SetAffectedVersions gets a reference to the given []AdvisoryHaskellVersion and assigns it to the AffectedVersions field.
func (o *AdvisoryHaskellAffected) SetAffectedVersions(v []AdvisoryHaskellVersion) {
	o.AffectedVersions = v
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *AdvisoryHaskellAffected) GetArch() []string {
	if o == nil || IsNil(o.Arch) {
		var ret []string
		return ret
	}
	return o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellAffected) GetArchOk() ([]string, bool) {
	if o == nil || IsNil(o.Arch) {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *AdvisoryHaskellAffected) HasArch() bool {
	if o != nil && !IsNil(o.Arch) {
		return true
	}

	return false
}

// SetArch gets a reference to the given []string and assigns it to the Arch field.
func (o *AdvisoryHaskellAffected) SetArch(v []string) {
	o.Arch = v
}

// GetCvss returns the Cvss field value if set, zero value otherwise.
func (o *AdvisoryHaskellAffected) GetCvss() string {
	if o == nil || IsNil(o.Cvss) {
		var ret string
		return ret
	}
	return *o.Cvss
}

// GetCvssOk returns a tuple with the Cvss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellAffected) GetCvssOk() (*string, bool) {
	if o == nil || IsNil(o.Cvss) {
		return nil, false
	}
	return o.Cvss, true
}

// HasCvss returns a boolean if a field has been set.
func (o *AdvisoryHaskellAffected) HasCvss() bool {
	if o != nil && !IsNil(o.Cvss) {
		return true
	}

	return false
}

// SetCvss gets a reference to the given string and assigns it to the Cvss field.
func (o *AdvisoryHaskellAffected) SetCvss(v string) {
	o.Cvss = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *AdvisoryHaskellAffected) GetOs() []string {
	if o == nil || IsNil(o.Os) {
		var ret []string
		return ret
	}
	return o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellAffected) GetOsOk() ([]string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *AdvisoryHaskellAffected) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given []string and assigns it to the Os field.
func (o *AdvisoryHaskellAffected) SetOs(v []string) {
	o.Os = v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *AdvisoryHaskellAffected) GetPackage() string {
	if o == nil || IsNil(o.Package) {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHaskellAffected) GetPackageOk() (*string, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *AdvisoryHaskellAffected) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *AdvisoryHaskellAffected) SetPackage(v string) {
	o.Package = &v
}

func (o AdvisoryHaskellAffected) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryHaskellAffected) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedConstraint) {
		toSerialize["affected_constraint"] = o.AffectedConstraint
	}
	if !IsNil(o.AffectedVersions) {
		toSerialize["affected_versions"] = o.AffectedVersions
	}
	if !IsNil(o.Arch) {
		toSerialize["arch"] = o.Arch
	}
	if !IsNil(o.Cvss) {
		toSerialize["cvss"] = o.Cvss
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	return toSerialize, nil
}

type NullableAdvisoryHaskellAffected struct {
	value *AdvisoryHaskellAffected
	isSet bool
}

func (v NullableAdvisoryHaskellAffected) Get() *AdvisoryHaskellAffected {
	return v.value
}

func (v *NullableAdvisoryHaskellAffected) Set(val *AdvisoryHaskellAffected) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryHaskellAffected) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryHaskellAffected) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryHaskellAffected(val *AdvisoryHaskellAffected) *NullableAdvisoryHaskellAffected {
	return &NullableAdvisoryHaskellAffected{value: val, isSet: true}
}

func (v NullableAdvisoryHaskellAffected) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryHaskellAffected) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


