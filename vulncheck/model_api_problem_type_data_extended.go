/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiProblemTypeDataExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiProblemTypeDataExtended{}

// ApiProblemTypeDataExtended struct for ApiProblemTypeDataExtended
type ApiProblemTypeDataExtended struct {
	Description []ApiProblemTypeDescriptionExtended `json:"description,omitempty"`
}

// NewApiProblemTypeDataExtended instantiates a new ApiProblemTypeDataExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiProblemTypeDataExtended() *ApiProblemTypeDataExtended {
	this := ApiProblemTypeDataExtended{}
	return &this
}

// NewApiProblemTypeDataExtendedWithDefaults instantiates a new ApiProblemTypeDataExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiProblemTypeDataExtendedWithDefaults() *ApiProblemTypeDataExtended {
	this := ApiProblemTypeDataExtended{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiProblemTypeDataExtended) GetDescription() []ApiProblemTypeDescriptionExtended {
	if o == nil || IsNil(o.Description) {
		var ret []ApiProblemTypeDescriptionExtended
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProblemTypeDataExtended) GetDescriptionOk() ([]ApiProblemTypeDescriptionExtended, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiProblemTypeDataExtended) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given []ApiProblemTypeDescriptionExtended and assigns it to the Description field.
func (o *ApiProblemTypeDataExtended) SetDescription(v []ApiProblemTypeDescriptionExtended) {
	o.Description = v
}

func (o ApiProblemTypeDataExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiProblemTypeDataExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableApiProblemTypeDataExtended struct {
	value *ApiProblemTypeDataExtended
	isSet bool
}

func (v NullableApiProblemTypeDataExtended) Get() *ApiProblemTypeDataExtended {
	return v.value
}

func (v *NullableApiProblemTypeDataExtended) Set(val *ApiProblemTypeDataExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableApiProblemTypeDataExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableApiProblemTypeDataExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiProblemTypeDataExtended(val *ApiProblemTypeDataExtended) *NullableApiProblemTypeDataExtended {
	return &NullableApiProblemTypeDataExtended{value: val, isSet: true}
}

func (v NullableApiProblemTypeDataExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiProblemTypeDataExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


