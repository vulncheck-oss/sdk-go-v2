/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCVEDataMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCVEDataMeta{}

// ApiCVEDataMeta struct for ApiCVEDataMeta
type ApiCVEDataMeta struct {
	ASSIGNER *string `json:"ASSIGNER,omitempty"`
	ID *string `json:"ID,omitempty"`
}

// NewApiCVEDataMeta instantiates a new ApiCVEDataMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCVEDataMeta() *ApiCVEDataMeta {
	this := ApiCVEDataMeta{}
	return &this
}

// NewApiCVEDataMetaWithDefaults instantiates a new ApiCVEDataMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCVEDataMetaWithDefaults() *ApiCVEDataMeta {
	this := ApiCVEDataMeta{}
	return &this
}

// GetASSIGNER returns the ASSIGNER field value if set, zero value otherwise.
func (o *ApiCVEDataMeta) GetASSIGNER() string {
	if o == nil || IsNil(o.ASSIGNER) {
		var ret string
		return ret
	}
	return *o.ASSIGNER
}

// GetASSIGNEROk returns a tuple with the ASSIGNER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCVEDataMeta) GetASSIGNEROk() (*string, bool) {
	if o == nil || IsNil(o.ASSIGNER) {
		return nil, false
	}
	return o.ASSIGNER, true
}

// HasASSIGNER returns a boolean if a field has been set.
func (o *ApiCVEDataMeta) HasASSIGNER() bool {
	if o != nil && !IsNil(o.ASSIGNER) {
		return true
	}

	return false
}

// SetASSIGNER gets a reference to the given string and assigns it to the ASSIGNER field.
func (o *ApiCVEDataMeta) SetASSIGNER(v string) {
	o.ASSIGNER = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *ApiCVEDataMeta) GetID() string {
	if o == nil || IsNil(o.ID) {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCVEDataMeta) GetIDOk() (*string, bool) {
	if o == nil || IsNil(o.ID) {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *ApiCVEDataMeta) HasID() bool {
	if o != nil && !IsNil(o.ID) {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *ApiCVEDataMeta) SetID(v string) {
	o.ID = &v
}

func (o ApiCVEDataMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCVEDataMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ASSIGNER) {
		toSerialize["ASSIGNER"] = o.ASSIGNER
	}
	if !IsNil(o.ID) {
		toSerialize["ID"] = o.ID
	}
	return toSerialize, nil
}

type NullableApiCVEDataMeta struct {
	value *ApiCVEDataMeta
	isSet bool
}

func (v NullableApiCVEDataMeta) Get() *ApiCVEDataMeta {
	return v.value
}

func (v *NullableApiCVEDataMeta) Set(val *ApiCVEDataMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCVEDataMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCVEDataMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCVEDataMeta(val *ApiCVEDataMeta) *NullableApiCVEDataMeta {
	return &NullableApiCVEDataMeta{value: val, isSet: true}
}

func (v NullableApiCVEDataMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCVEDataMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


