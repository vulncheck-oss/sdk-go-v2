/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryLogSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryLogSource{}

// AdvisoryLogSource struct for AdvisoryLogSource
type AdvisoryLogSource struct {
	Category *string `json:"category,omitempty"`
	Definition *string `json:"definition,omitempty"`
	Product *string `json:"product,omitempty"`
	Service *string `json:"service,omitempty"`
}

// NewAdvisoryLogSource instantiates a new AdvisoryLogSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryLogSource() *AdvisoryLogSource {
	this := AdvisoryLogSource{}
	return &this
}

// NewAdvisoryLogSourceWithDefaults instantiates a new AdvisoryLogSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryLogSourceWithDefaults() *AdvisoryLogSource {
	this := AdvisoryLogSource{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisoryLogSource) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLogSource) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisoryLogSource) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisoryLogSource) SetCategory(v string) {
	o.Category = &v
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *AdvisoryLogSource) GetDefinition() string {
	if o == nil || IsNil(o.Definition) {
		var ret string
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLogSource) GetDefinitionOk() (*string, bool) {
	if o == nil || IsNil(o.Definition) {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *AdvisoryLogSource) HasDefinition() bool {
	if o != nil && !IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given string and assigns it to the Definition field.
func (o *AdvisoryLogSource) SetDefinition(v string) {
	o.Definition = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryLogSource) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLogSource) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryLogSource) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryLogSource) SetProduct(v string) {
	o.Product = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *AdvisoryLogSource) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLogSource) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *AdvisoryLogSource) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *AdvisoryLogSource) SetService(v string) {
	o.Service = &v
}

func (o AdvisoryLogSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryLogSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	return toSerialize, nil
}

type NullableAdvisoryLogSource struct {
	value *AdvisoryLogSource
	isSet bool
}

func (v NullableAdvisoryLogSource) Get() *AdvisoryLogSource {
	return v.value
}

func (v *NullableAdvisoryLogSource) Set(val *AdvisoryLogSource) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryLogSource) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryLogSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryLogSource(val *AdvisoryLogSource) *NullableAdvisoryLogSource {
	return &NullableAdvisoryLogSource{value: val, isSet: true}
}

func (v NullableAdvisoryLogSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryLogSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


