/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiBaseMetricV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiBaseMetricV2{}

// ApiBaseMetricV2 struct for ApiBaseMetricV2
type ApiBaseMetricV2 struct {
	AcInsufInfo *bool `json:"acInsufInfo,omitempty"`
	CvssV2 *ApiCVSSV2 `json:"cvssV2,omitempty"`
	ExploitabilityScore *float32 `json:"exploitabilityScore,omitempty"`
	ImpactScore *float32 `json:"impactScore,omitempty"`
	ObtainAllPrivilege *bool `json:"obtainAllPrivilege,omitempty"`
	ObtainOtherPrivilege *bool `json:"obtainOtherPrivilege,omitempty"`
	ObtainUserPrivilege *bool `json:"obtainUserPrivilege,omitempty"`
	Severity *string `json:"severity,omitempty"`
	UserInteractionRequired *bool `json:"userInteractionRequired,omitempty"`
}

// NewApiBaseMetricV2 instantiates a new ApiBaseMetricV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBaseMetricV2() *ApiBaseMetricV2 {
	this := ApiBaseMetricV2{}
	return &this
}

// NewApiBaseMetricV2WithDefaults instantiates a new ApiBaseMetricV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBaseMetricV2WithDefaults() *ApiBaseMetricV2 {
	this := ApiBaseMetricV2{}
	return &this
}

// GetAcInsufInfo returns the AcInsufInfo field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetAcInsufInfo() bool {
	if o == nil || IsNil(o.AcInsufInfo) {
		var ret bool
		return ret
	}
	return *o.AcInsufInfo
}

// GetAcInsufInfoOk returns a tuple with the AcInsufInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetAcInsufInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.AcInsufInfo) {
		return nil, false
	}
	return o.AcInsufInfo, true
}

// HasAcInsufInfo returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasAcInsufInfo() bool {
	if o != nil && !IsNil(o.AcInsufInfo) {
		return true
	}

	return false
}

// SetAcInsufInfo gets a reference to the given bool and assigns it to the AcInsufInfo field.
func (o *ApiBaseMetricV2) SetAcInsufInfo(v bool) {
	o.AcInsufInfo = &v
}

// GetCvssV2 returns the CvssV2 field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetCvssV2() ApiCVSSV2 {
	if o == nil || IsNil(o.CvssV2) {
		var ret ApiCVSSV2
		return ret
	}
	return *o.CvssV2
}

// GetCvssV2Ok returns a tuple with the CvssV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetCvssV2Ok() (*ApiCVSSV2, bool) {
	if o == nil || IsNil(o.CvssV2) {
		return nil, false
	}
	return o.CvssV2, true
}

// HasCvssV2 returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasCvssV2() bool {
	if o != nil && !IsNil(o.CvssV2) {
		return true
	}

	return false
}

// SetCvssV2 gets a reference to the given ApiCVSSV2 and assigns it to the CvssV2 field.
func (o *ApiBaseMetricV2) SetCvssV2(v ApiCVSSV2) {
	o.CvssV2 = &v
}

// GetExploitabilityScore returns the ExploitabilityScore field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetExploitabilityScore() float32 {
	if o == nil || IsNil(o.ExploitabilityScore) {
		var ret float32
		return ret
	}
	return *o.ExploitabilityScore
}

// GetExploitabilityScoreOk returns a tuple with the ExploitabilityScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetExploitabilityScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ExploitabilityScore) {
		return nil, false
	}
	return o.ExploitabilityScore, true
}

// HasExploitabilityScore returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasExploitabilityScore() bool {
	if o != nil && !IsNil(o.ExploitabilityScore) {
		return true
	}

	return false
}

// SetExploitabilityScore gets a reference to the given float32 and assigns it to the ExploitabilityScore field.
func (o *ApiBaseMetricV2) SetExploitabilityScore(v float32) {
	o.ExploitabilityScore = &v
}

// GetImpactScore returns the ImpactScore field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetImpactScore() float32 {
	if o == nil || IsNil(o.ImpactScore) {
		var ret float32
		return ret
	}
	return *o.ImpactScore
}

// GetImpactScoreOk returns a tuple with the ImpactScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetImpactScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ImpactScore) {
		return nil, false
	}
	return o.ImpactScore, true
}

// HasImpactScore returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasImpactScore() bool {
	if o != nil && !IsNil(o.ImpactScore) {
		return true
	}

	return false
}

// SetImpactScore gets a reference to the given float32 and assigns it to the ImpactScore field.
func (o *ApiBaseMetricV2) SetImpactScore(v float32) {
	o.ImpactScore = &v
}

// GetObtainAllPrivilege returns the ObtainAllPrivilege field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetObtainAllPrivilege() bool {
	if o == nil || IsNil(o.ObtainAllPrivilege) {
		var ret bool
		return ret
	}
	return *o.ObtainAllPrivilege
}

// GetObtainAllPrivilegeOk returns a tuple with the ObtainAllPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetObtainAllPrivilegeOk() (*bool, bool) {
	if o == nil || IsNil(o.ObtainAllPrivilege) {
		return nil, false
	}
	return o.ObtainAllPrivilege, true
}

// HasObtainAllPrivilege returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasObtainAllPrivilege() bool {
	if o != nil && !IsNil(o.ObtainAllPrivilege) {
		return true
	}

	return false
}

// SetObtainAllPrivilege gets a reference to the given bool and assigns it to the ObtainAllPrivilege field.
func (o *ApiBaseMetricV2) SetObtainAllPrivilege(v bool) {
	o.ObtainAllPrivilege = &v
}

// GetObtainOtherPrivilege returns the ObtainOtherPrivilege field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetObtainOtherPrivilege() bool {
	if o == nil || IsNil(o.ObtainOtherPrivilege) {
		var ret bool
		return ret
	}
	return *o.ObtainOtherPrivilege
}

// GetObtainOtherPrivilegeOk returns a tuple with the ObtainOtherPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetObtainOtherPrivilegeOk() (*bool, bool) {
	if o == nil || IsNil(o.ObtainOtherPrivilege) {
		return nil, false
	}
	return o.ObtainOtherPrivilege, true
}

// HasObtainOtherPrivilege returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasObtainOtherPrivilege() bool {
	if o != nil && !IsNil(o.ObtainOtherPrivilege) {
		return true
	}

	return false
}

// SetObtainOtherPrivilege gets a reference to the given bool and assigns it to the ObtainOtherPrivilege field.
func (o *ApiBaseMetricV2) SetObtainOtherPrivilege(v bool) {
	o.ObtainOtherPrivilege = &v
}

// GetObtainUserPrivilege returns the ObtainUserPrivilege field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetObtainUserPrivilege() bool {
	if o == nil || IsNil(o.ObtainUserPrivilege) {
		var ret bool
		return ret
	}
	return *o.ObtainUserPrivilege
}

// GetObtainUserPrivilegeOk returns a tuple with the ObtainUserPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetObtainUserPrivilegeOk() (*bool, bool) {
	if o == nil || IsNil(o.ObtainUserPrivilege) {
		return nil, false
	}
	return o.ObtainUserPrivilege, true
}

// HasObtainUserPrivilege returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasObtainUserPrivilege() bool {
	if o != nil && !IsNil(o.ObtainUserPrivilege) {
		return true
	}

	return false
}

// SetObtainUserPrivilege gets a reference to the given bool and assigns it to the ObtainUserPrivilege field.
func (o *ApiBaseMetricV2) SetObtainUserPrivilege(v bool) {
	o.ObtainUserPrivilege = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *ApiBaseMetricV2) SetSeverity(v string) {
	o.Severity = &v
}

// GetUserInteractionRequired returns the UserInteractionRequired field value if set, zero value otherwise.
func (o *ApiBaseMetricV2) GetUserInteractionRequired() bool {
	if o == nil || IsNil(o.UserInteractionRequired) {
		var ret bool
		return ret
	}
	return *o.UserInteractionRequired
}

// GetUserInteractionRequiredOk returns a tuple with the UserInteractionRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBaseMetricV2) GetUserInteractionRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.UserInteractionRequired) {
		return nil, false
	}
	return o.UserInteractionRequired, true
}

// HasUserInteractionRequired returns a boolean if a field has been set.
func (o *ApiBaseMetricV2) HasUserInteractionRequired() bool {
	if o != nil && !IsNil(o.UserInteractionRequired) {
		return true
	}

	return false
}

// SetUserInteractionRequired gets a reference to the given bool and assigns it to the UserInteractionRequired field.
func (o *ApiBaseMetricV2) SetUserInteractionRequired(v bool) {
	o.UserInteractionRequired = &v
}

func (o ApiBaseMetricV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiBaseMetricV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcInsufInfo) {
		toSerialize["acInsufInfo"] = o.AcInsufInfo
	}
	if !IsNil(o.CvssV2) {
		toSerialize["cvssV2"] = o.CvssV2
	}
	if !IsNil(o.ExploitabilityScore) {
		toSerialize["exploitabilityScore"] = o.ExploitabilityScore
	}
	if !IsNil(o.ImpactScore) {
		toSerialize["impactScore"] = o.ImpactScore
	}
	if !IsNil(o.ObtainAllPrivilege) {
		toSerialize["obtainAllPrivilege"] = o.ObtainAllPrivilege
	}
	if !IsNil(o.ObtainOtherPrivilege) {
		toSerialize["obtainOtherPrivilege"] = o.ObtainOtherPrivilege
	}
	if !IsNil(o.ObtainUserPrivilege) {
		toSerialize["obtainUserPrivilege"] = o.ObtainUserPrivilege
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.UserInteractionRequired) {
		toSerialize["userInteractionRequired"] = o.UserInteractionRequired
	}
	return toSerialize, nil
}

type NullableApiBaseMetricV2 struct {
	value *ApiBaseMetricV2
	isSet bool
}

func (v NullableApiBaseMetricV2) Get() *ApiBaseMetricV2 {
	return v.value
}

func (v *NullableApiBaseMetricV2) Set(val *ApiBaseMetricV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBaseMetricV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBaseMetricV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBaseMetricV2(val *ApiBaseMetricV2) *NullableApiBaseMetricV2 {
	return &NullableApiBaseMetricV2{value: val, isSet: true}
}

func (v NullableApiBaseMetricV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBaseMetricV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


