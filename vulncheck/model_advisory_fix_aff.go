/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryFixAff type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryFixAff{}

// AdvisoryFixAff struct for AdvisoryFixAff
type AdvisoryFixAff struct {
	AffectedSince *string `json:"affected_since,omitempty"`
	FixedVersion *string `json:"fixed_version,omitempty"`
	PatchUrl *string `json:"patch_url,omitempty"`
}

// NewAdvisoryFixAff instantiates a new AdvisoryFixAff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryFixAff() *AdvisoryFixAff {
	this := AdvisoryFixAff{}
	return &this
}

// NewAdvisoryFixAffWithDefaults instantiates a new AdvisoryFixAff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryFixAffWithDefaults() *AdvisoryFixAff {
	this := AdvisoryFixAff{}
	return &this
}

// GetAffectedSince returns the AffectedSince field value if set, zero value otherwise.
func (o *AdvisoryFixAff) GetAffectedSince() string {
	if o == nil || IsNil(o.AffectedSince) {
		var ret string
		return ret
	}
	return *o.AffectedSince
}

// GetAffectedSinceOk returns a tuple with the AffectedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFixAff) GetAffectedSinceOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedSince) {
		return nil, false
	}
	return o.AffectedSince, true
}

// HasAffectedSince returns a boolean if a field has been set.
func (o *AdvisoryFixAff) HasAffectedSince() bool {
	if o != nil && !IsNil(o.AffectedSince) {
		return true
	}

	return false
}

// SetAffectedSince gets a reference to the given string and assigns it to the AffectedSince field.
func (o *AdvisoryFixAff) SetAffectedSince(v string) {
	o.AffectedSince = &v
}

// GetFixedVersion returns the FixedVersion field value if set, zero value otherwise.
func (o *AdvisoryFixAff) GetFixedVersion() string {
	if o == nil || IsNil(o.FixedVersion) {
		var ret string
		return ret
	}
	return *o.FixedVersion
}

// GetFixedVersionOk returns a tuple with the FixedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFixAff) GetFixedVersionOk() (*string, bool) {
	if o == nil || IsNil(o.FixedVersion) {
		return nil, false
	}
	return o.FixedVersion, true
}

// HasFixedVersion returns a boolean if a field has been set.
func (o *AdvisoryFixAff) HasFixedVersion() bool {
	if o != nil && !IsNil(o.FixedVersion) {
		return true
	}

	return false
}

// SetFixedVersion gets a reference to the given string and assigns it to the FixedVersion field.
func (o *AdvisoryFixAff) SetFixedVersion(v string) {
	o.FixedVersion = &v
}

// GetPatchUrl returns the PatchUrl field value if set, zero value otherwise.
func (o *AdvisoryFixAff) GetPatchUrl() string {
	if o == nil || IsNil(o.PatchUrl) {
		var ret string
		return ret
	}
	return *o.PatchUrl
}

// GetPatchUrlOk returns a tuple with the PatchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFixAff) GetPatchUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PatchUrl) {
		return nil, false
	}
	return o.PatchUrl, true
}

// HasPatchUrl returns a boolean if a field has been set.
func (o *AdvisoryFixAff) HasPatchUrl() bool {
	if o != nil && !IsNil(o.PatchUrl) {
		return true
	}

	return false
}

// SetPatchUrl gets a reference to the given string and assigns it to the PatchUrl field.
func (o *AdvisoryFixAff) SetPatchUrl(v string) {
	o.PatchUrl = &v
}

func (o AdvisoryFixAff) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryFixAff) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedSince) {
		toSerialize["affected_since"] = o.AffectedSince
	}
	if !IsNil(o.FixedVersion) {
		toSerialize["fixed_version"] = o.FixedVersion
	}
	if !IsNil(o.PatchUrl) {
		toSerialize["patch_url"] = o.PatchUrl
	}
	return toSerialize, nil
}

type NullableAdvisoryFixAff struct {
	value *AdvisoryFixAff
	isSet bool
}

func (v NullableAdvisoryFixAff) Get() *AdvisoryFixAff {
	return v.value
}

func (v *NullableAdvisoryFixAff) Set(val *AdvisoryFixAff) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryFixAff) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryFixAff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryFixAff(val *AdvisoryFixAff) *NullableAdvisoryFixAff {
	return &NullableAdvisoryFixAff{value: val, isSet: true}
}

func (v NullableAdvisoryFixAff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryFixAff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


