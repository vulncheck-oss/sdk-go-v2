/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiProblemTypeData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiProblemTypeData{}

// ApiProblemTypeData struct for ApiProblemTypeData
type ApiProblemTypeData struct {
	Description []ApiProblemTypeDescription `json:"description,omitempty"`
}

// NewApiProblemTypeData instantiates a new ApiProblemTypeData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiProblemTypeData() *ApiProblemTypeData {
	this := ApiProblemTypeData{}
	return &this
}

// NewApiProblemTypeDataWithDefaults instantiates a new ApiProblemTypeData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiProblemTypeDataWithDefaults() *ApiProblemTypeData {
	this := ApiProblemTypeData{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiProblemTypeData) GetDescription() []ApiProblemTypeDescription {
	if o == nil || IsNil(o.Description) {
		var ret []ApiProblemTypeDescription
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiProblemTypeData) GetDescriptionOk() ([]ApiProblemTypeDescription, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiProblemTypeData) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given []ApiProblemTypeDescription and assigns it to the Description field.
func (o *ApiProblemTypeData) SetDescription(v []ApiProblemTypeDescription) {
	o.Description = v
}

func (o ApiProblemTypeData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiProblemTypeData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableApiProblemTypeData struct {
	value *ApiProblemTypeData
	isSet bool
}

func (v NullableApiProblemTypeData) Get() *ApiProblemTypeData {
	return v.value
}

func (v *NullableApiProblemTypeData) Set(val *ApiProblemTypeData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiProblemTypeData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiProblemTypeData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiProblemTypeData(val *ApiProblemTypeData) *NullableApiProblemTypeData {
	return &NullableApiProblemTypeData{value: val, isSet: true}
}

func (v NullableApiProblemTypeData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiProblemTypeData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


