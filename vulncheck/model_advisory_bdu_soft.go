/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryBDUSoft type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryBDUSoft{}

// AdvisoryBDUSoft struct for AdvisoryBDUSoft
type AdvisoryBDUSoft struct {
	Name *string `json:"name,omitempty"`
	Platform *string `json:"platform,omitempty"`
	Text *string `json:"text,omitempty"`
	Types *AdvisoryBDUTypes `json:"types,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryBDUSoft instantiates a new AdvisoryBDUSoft object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryBDUSoft() *AdvisoryBDUSoft {
	this := AdvisoryBDUSoft{}
	return &this
}

// NewAdvisoryBDUSoftWithDefaults instantiates a new AdvisoryBDUSoft object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryBDUSoftWithDefaults() *AdvisoryBDUSoft {
	this := AdvisoryBDUSoft{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryBDUSoft) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUSoft) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryBDUSoft) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryBDUSoft) SetName(v string) {
	o.Name = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *AdvisoryBDUSoft) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUSoft) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *AdvisoryBDUSoft) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *AdvisoryBDUSoft) SetPlatform(v string) {
	o.Platform = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *AdvisoryBDUSoft) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUSoft) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *AdvisoryBDUSoft) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *AdvisoryBDUSoft) SetText(v string) {
	o.Text = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *AdvisoryBDUSoft) GetTypes() AdvisoryBDUTypes {
	if o == nil || IsNil(o.Types) {
		var ret AdvisoryBDUTypes
		return ret
	}
	return *o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUSoft) GetTypesOk() (*AdvisoryBDUTypes, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *AdvisoryBDUSoft) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given AdvisoryBDUTypes and assigns it to the Types field.
func (o *AdvisoryBDUSoft) SetTypes(v AdvisoryBDUTypes) {
	o.Types = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *AdvisoryBDUSoft) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUSoft) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *AdvisoryBDUSoft) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *AdvisoryBDUSoft) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryBDUSoft) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryBDUSoft) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryBDUSoft) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryBDUSoft) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryBDUSoft) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryBDUSoft) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryBDUSoft struct {
	value *AdvisoryBDUSoft
	isSet bool
}

func (v NullableAdvisoryBDUSoft) Get() *AdvisoryBDUSoft {
	return v.value
}

func (v *NullableAdvisoryBDUSoft) Set(val *AdvisoryBDUSoft) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryBDUSoft) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryBDUSoft) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryBDUSoft(val *AdvisoryBDUSoft) *NullableAdvisoryBDUSoft {
	return &NullableAdvisoryBDUSoft{value: val, isSet: true}
}

func (v NullableAdvisoryBDUSoft) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryBDUSoft) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


