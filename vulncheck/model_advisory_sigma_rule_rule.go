/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySigmaRuleRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySigmaRuleRule{}

// AdvisorySigmaRuleRule struct for AdvisorySigmaRuleRule
type AdvisorySigmaRuleRule struct {
	Author *string `json:"author,omitempty"`
	Date *string `json:"date,omitempty"`
	Description *string `json:"description,omitempty"`
	Detection map[string]interface{} `json:"detection,omitempty"`
	FalsePositives []string `json:"false_positives,omitempty"`
	Fields []string `json:"fields,omitempty"`
	Id *string `json:"id,omitempty"`
	Level *string `json:"level,omitempty"`
	Logsource *AdvisoryLogSource `json:"logsource,omitempty"`
	Modified *string `json:"modified,omitempty"`
	References []string `json:"references,omitempty"`
	Related []AdvisoryRelatedRule `json:"related,omitempty"`
	Status *string `json:"status,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisorySigmaRuleRule instantiates a new AdvisorySigmaRuleRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySigmaRuleRule() *AdvisorySigmaRuleRule {
	this := AdvisorySigmaRuleRule{}
	return &this
}

// NewAdvisorySigmaRuleRuleWithDefaults instantiates a new AdvisorySigmaRuleRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySigmaRuleRuleWithDefaults() *AdvisorySigmaRuleRule {
	this := AdvisorySigmaRuleRule{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *AdvisorySigmaRuleRule) SetAuthor(v string) {
	o.Author = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AdvisorySigmaRuleRule) SetDate(v string) {
	o.Date = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisorySigmaRuleRule) SetDescription(v string) {
	o.Description = &v
}

// GetDetection returns the Detection field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetDetection() map[string]interface{} {
	if o == nil || IsNil(o.Detection) {
		var ret map[string]interface{}
		return ret
	}
	return o.Detection
}

// GetDetectionOk returns a tuple with the Detection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetDetectionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Detection) {
		return map[string]interface{}{}, false
	}
	return o.Detection, true
}

// HasDetection returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasDetection() bool {
	if o != nil && !IsNil(o.Detection) {
		return true
	}

	return false
}

// SetDetection gets a reference to the given map[string]interface{} and assigns it to the Detection field.
func (o *AdvisorySigmaRuleRule) SetDetection(v map[string]interface{}) {
	o.Detection = v
}

// GetFalsePositives returns the FalsePositives field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetFalsePositives() []string {
	if o == nil || IsNil(o.FalsePositives) {
		var ret []string
		return ret
	}
	return o.FalsePositives
}

// GetFalsePositivesOk returns a tuple with the FalsePositives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetFalsePositivesOk() ([]string, bool) {
	if o == nil || IsNil(o.FalsePositives) {
		return nil, false
	}
	return o.FalsePositives, true
}

// HasFalsePositives returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasFalsePositives() bool {
	if o != nil && !IsNil(o.FalsePositives) {
		return true
	}

	return false
}

// SetFalsePositives gets a reference to the given []string and assigns it to the FalsePositives field.
func (o *AdvisorySigmaRuleRule) SetFalsePositives(v []string) {
	o.FalsePositives = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetFields() []string {
	if o == nil || IsNil(o.Fields) {
		var ret []string
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *AdvisorySigmaRuleRule) SetFields(v []string) {
	o.Fields = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisorySigmaRuleRule) SetId(v string) {
	o.Id = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *AdvisorySigmaRuleRule) SetLevel(v string) {
	o.Level = &v
}

// GetLogsource returns the Logsource field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetLogsource() AdvisoryLogSource {
	if o == nil || IsNil(o.Logsource) {
		var ret AdvisoryLogSource
		return ret
	}
	return *o.Logsource
}

// GetLogsourceOk returns a tuple with the Logsource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetLogsourceOk() (*AdvisoryLogSource, bool) {
	if o == nil || IsNil(o.Logsource) {
		return nil, false
	}
	return o.Logsource, true
}

// HasLogsource returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasLogsource() bool {
	if o != nil && !IsNil(o.Logsource) {
		return true
	}

	return false
}

// SetLogsource gets a reference to the given AdvisoryLogSource and assigns it to the Logsource field.
func (o *AdvisorySigmaRuleRule) SetLogsource(v AdvisoryLogSource) {
	o.Logsource = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetModified() string {
	if o == nil || IsNil(o.Modified) {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *AdvisorySigmaRuleRule) SetModified(v string) {
	o.Modified = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisorySigmaRuleRule) SetReferences(v []string) {
	o.References = v
}

// GetRelated returns the Related field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetRelated() []AdvisoryRelatedRule {
	if o == nil || IsNil(o.Related) {
		var ret []AdvisoryRelatedRule
		return ret
	}
	return o.Related
}

// GetRelatedOk returns a tuple with the Related field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetRelatedOk() ([]AdvisoryRelatedRule, bool) {
	if o == nil || IsNil(o.Related) {
		return nil, false
	}
	return o.Related, true
}

// HasRelated returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasRelated() bool {
	if o != nil && !IsNil(o.Related) {
		return true
	}

	return false
}

// SetRelated gets a reference to the given []AdvisoryRelatedRule and assigns it to the Related field.
func (o *AdvisorySigmaRuleRule) SetRelated(v []AdvisoryRelatedRule) {
	o.Related = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdvisorySigmaRuleRule) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AdvisorySigmaRuleRule) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisorySigmaRuleRule) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySigmaRuleRule) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisorySigmaRuleRule) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisorySigmaRuleRule) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisorySigmaRuleRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySigmaRuleRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Detection) {
		toSerialize["detection"] = o.Detection
	}
	if !IsNil(o.FalsePositives) {
		toSerialize["false_positives"] = o.FalsePositives
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Logsource) {
		toSerialize["logsource"] = o.Logsource
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Related) {
		toSerialize["related"] = o.Related
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisorySigmaRuleRule struct {
	value *AdvisorySigmaRuleRule
	isSet bool
}

func (v NullableAdvisorySigmaRuleRule) Get() *AdvisorySigmaRuleRule {
	return v.value
}

func (v *NullableAdvisorySigmaRuleRule) Set(val *AdvisorySigmaRuleRule) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySigmaRuleRule) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySigmaRuleRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySigmaRuleRule(val *AdvisorySigmaRuleRule) *NullableAdvisorySigmaRuleRule {
	return &NullableAdvisorySigmaRuleRule{value: val, isSet: true}
}

func (v NullableAdvisorySigmaRuleRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySigmaRuleRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


