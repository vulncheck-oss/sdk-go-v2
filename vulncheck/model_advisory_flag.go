/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryFlag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryFlag{}

// AdvisoryFlag struct for AdvisoryFlag
type AdvisoryFlag struct {
	Date *string `json:"date,omitempty"`
	GroupIds []string `json:"group_ids,omitempty"`
	Label *string `json:"label,omitempty"`
	ProductIds []string `json:"product_ids,omitempty"`
}

// NewAdvisoryFlag instantiates a new AdvisoryFlag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryFlag() *AdvisoryFlag {
	this := AdvisoryFlag{}
	return &this
}

// NewAdvisoryFlagWithDefaults instantiates a new AdvisoryFlag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryFlagWithDefaults() *AdvisoryFlag {
	this := AdvisoryFlag{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AdvisoryFlag) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFlag) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AdvisoryFlag) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AdvisoryFlag) SetDate(v string) {
	o.Date = &v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *AdvisoryFlag) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFlag) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *AdvisoryFlag) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *AdvisoryFlag) SetGroupIds(v []string) {
	o.GroupIds = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *AdvisoryFlag) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFlag) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *AdvisoryFlag) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *AdvisoryFlag) SetLabel(v string) {
	o.Label = &v
}

// GetProductIds returns the ProductIds field value if set, zero value otherwise.
func (o *AdvisoryFlag) GetProductIds() []string {
	if o == nil || IsNil(o.ProductIds) {
		var ret []string
		return ret
	}
	return o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryFlag) GetProductIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductIds) {
		return nil, false
	}
	return o.ProductIds, true
}

// HasProductIds returns a boolean if a field has been set.
func (o *AdvisoryFlag) HasProductIds() bool {
	if o != nil && !IsNil(o.ProductIds) {
		return true
	}

	return false
}

// SetProductIds gets a reference to the given []string and assigns it to the ProductIds field.
func (o *AdvisoryFlag) SetProductIds(v []string) {
	o.ProductIds = v
}

func (o AdvisoryFlag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryFlag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.GroupIds) {
		toSerialize["group_ids"] = o.GroupIds
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.ProductIds) {
		toSerialize["product_ids"] = o.ProductIds
	}
	return toSerialize, nil
}

type NullableAdvisoryFlag struct {
	value *AdvisoryFlag
	isSet bool
}

func (v NullableAdvisoryFlag) Get() *AdvisoryFlag {
	return v.value
}

func (v *NullableAdvisoryFlag) Set(val *AdvisoryFlag) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryFlag) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryFlag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryFlag(val *AdvisoryFlag) *NullableAdvisoryFlag {
	return &NullableAdvisoryFlag{value: val, isSet: true}
}

func (v NullableAdvisoryFlag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryFlag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


