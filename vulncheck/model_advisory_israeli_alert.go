/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryIsraeliAlert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryIsraeliAlert{}

// AdvisoryIsraeliAlert struct for AdvisoryIsraeliAlert
type AdvisoryIsraeliAlert struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DetailsHe *string `json:"details_he,omitempty"`
	HandlingHe *string `json:"handling_he,omitempty"`
	Link *string `json:"link,omitempty"`
	References []string `json:"references,omitempty"`
	SummaryHe *string `json:"summary_he,omitempty"`
	TitleHe *string `json:"title_he,omitempty"`
}

// NewAdvisoryIsraeliAlert instantiates a new AdvisoryIsraeliAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryIsraeliAlert() *AdvisoryIsraeliAlert {
	this := AdvisoryIsraeliAlert{}
	return &this
}

// NewAdvisoryIsraeliAlertWithDefaults instantiates a new AdvisoryIsraeliAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryIsraeliAlertWithDefaults() *AdvisoryIsraeliAlert {
	this := AdvisoryIsraeliAlert{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryIsraeliAlert) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryIsraeliAlert) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDetailsHe returns the DetailsHe field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetDetailsHe() string {
	if o == nil || IsNil(o.DetailsHe) {
		var ret string
		return ret
	}
	return *o.DetailsHe
}

// GetDetailsHeOk returns a tuple with the DetailsHe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetDetailsHeOk() (*string, bool) {
	if o == nil || IsNil(o.DetailsHe) {
		return nil, false
	}
	return o.DetailsHe, true
}

// HasDetailsHe returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasDetailsHe() bool {
	if o != nil && !IsNil(o.DetailsHe) {
		return true
	}

	return false
}

// SetDetailsHe gets a reference to the given string and assigns it to the DetailsHe field.
func (o *AdvisoryIsraeliAlert) SetDetailsHe(v string) {
	o.DetailsHe = &v
}

// GetHandlingHe returns the HandlingHe field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetHandlingHe() string {
	if o == nil || IsNil(o.HandlingHe) {
		var ret string
		return ret
	}
	return *o.HandlingHe
}

// GetHandlingHeOk returns a tuple with the HandlingHe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetHandlingHeOk() (*string, bool) {
	if o == nil || IsNil(o.HandlingHe) {
		return nil, false
	}
	return o.HandlingHe, true
}

// HasHandlingHe returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasHandlingHe() bool {
	if o != nil && !IsNil(o.HandlingHe) {
		return true
	}

	return false
}

// SetHandlingHe gets a reference to the given string and assigns it to the HandlingHe field.
func (o *AdvisoryIsraeliAlert) SetHandlingHe(v string) {
	o.HandlingHe = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryIsraeliAlert) SetLink(v string) {
	o.Link = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryIsraeliAlert) SetReferences(v []string) {
	o.References = v
}

// GetSummaryHe returns the SummaryHe field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetSummaryHe() string {
	if o == nil || IsNil(o.SummaryHe) {
		var ret string
		return ret
	}
	return *o.SummaryHe
}

// GetSummaryHeOk returns a tuple with the SummaryHe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetSummaryHeOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryHe) {
		return nil, false
	}
	return o.SummaryHe, true
}

// HasSummaryHe returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasSummaryHe() bool {
	if o != nil && !IsNil(o.SummaryHe) {
		return true
	}

	return false
}

// SetSummaryHe gets a reference to the given string and assigns it to the SummaryHe field.
func (o *AdvisoryIsraeliAlert) SetSummaryHe(v string) {
	o.SummaryHe = &v
}

// GetTitleHe returns the TitleHe field value if set, zero value otherwise.
func (o *AdvisoryIsraeliAlert) GetTitleHe() string {
	if o == nil || IsNil(o.TitleHe) {
		var ret string
		return ret
	}
	return *o.TitleHe
}

// GetTitleHeOk returns a tuple with the TitleHe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIsraeliAlert) GetTitleHeOk() (*string, bool) {
	if o == nil || IsNil(o.TitleHe) {
		return nil, false
	}
	return o.TitleHe, true
}

// HasTitleHe returns a boolean if a field has been set.
func (o *AdvisoryIsraeliAlert) HasTitleHe() bool {
	if o != nil && !IsNil(o.TitleHe) {
		return true
	}

	return false
}

// SetTitleHe gets a reference to the given string and assigns it to the TitleHe field.
func (o *AdvisoryIsraeliAlert) SetTitleHe(v string) {
	o.TitleHe = &v
}

func (o AdvisoryIsraeliAlert) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryIsraeliAlert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DetailsHe) {
		toSerialize["details_he"] = o.DetailsHe
	}
	if !IsNil(o.HandlingHe) {
		toSerialize["handling_he"] = o.HandlingHe
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.SummaryHe) {
		toSerialize["summary_he"] = o.SummaryHe
	}
	if !IsNil(o.TitleHe) {
		toSerialize["title_he"] = o.TitleHe
	}
	return toSerialize, nil
}

type NullableAdvisoryIsraeliAlert struct {
	value *AdvisoryIsraeliAlert
	isSet bool
}

func (v NullableAdvisoryIsraeliAlert) Get() *AdvisoryIsraeliAlert {
	return v.value
}

func (v *NullableAdvisoryIsraeliAlert) Set(val *AdvisoryIsraeliAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryIsraeliAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryIsraeliAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryIsraeliAlert(val *AdvisoryIsraeliAlert) *NullableAdvisoryIsraeliAlert {
	return &NullableAdvisoryIsraeliAlert{value: val, isSet: true}
}

func (v NullableAdvisoryIsraeliAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryIsraeliAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


