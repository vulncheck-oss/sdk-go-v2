/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAlmaPackage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAlmaPackage{}

// AdvisoryAlmaPackage struct for AdvisoryAlmaPackage
type AdvisoryAlmaPackage struct {
	Arch *string `json:"arch,omitempty"`
	Epoch *string `json:"epoch,omitempty"`
	Filename *string `json:"filename,omitempty"`
	Name *string `json:"name,omitempty"`
	RebootSuggested *int32 `json:"reboot_suggested,omitempty"`
	Release *string `json:"release,omitempty"`
	Source *string `json:"source,omitempty"`
	Sum *string `json:"sum,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdvisoryAlmaPackage instantiates a new AdvisoryAlmaPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAlmaPackage() *AdvisoryAlmaPackage {
	this := AdvisoryAlmaPackage{}
	return &this
}

// NewAdvisoryAlmaPackageWithDefaults instantiates a new AdvisoryAlmaPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAlmaPackageWithDefaults() *AdvisoryAlmaPackage {
	this := AdvisoryAlmaPackage{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetArch() string {
	if o == nil || IsNil(o.Arch) {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetArchOk() (*string, bool) {
	if o == nil || IsNil(o.Arch) {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasArch() bool {
	if o != nil && !IsNil(o.Arch) {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *AdvisoryAlmaPackage) SetArch(v string) {
	o.Arch = &v
}

// GetEpoch returns the Epoch field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetEpoch() string {
	if o == nil || IsNil(o.Epoch) {
		var ret string
		return ret
	}
	return *o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetEpochOk() (*string, bool) {
	if o == nil || IsNil(o.Epoch) {
		return nil, false
	}
	return o.Epoch, true
}

// HasEpoch returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasEpoch() bool {
	if o != nil && !IsNil(o.Epoch) {
		return true
	}

	return false
}

// SetEpoch gets a reference to the given string and assigns it to the Epoch field.
func (o *AdvisoryAlmaPackage) SetEpoch(v string) {
	o.Epoch = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *AdvisoryAlmaPackage) SetFilename(v string) {
	o.Filename = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryAlmaPackage) SetName(v string) {
	o.Name = &v
}

// GetRebootSuggested returns the RebootSuggested field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetRebootSuggested() int32 {
	if o == nil || IsNil(o.RebootSuggested) {
		var ret int32
		return ret
	}
	return *o.RebootSuggested
}

// GetRebootSuggestedOk returns a tuple with the RebootSuggested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetRebootSuggestedOk() (*int32, bool) {
	if o == nil || IsNil(o.RebootSuggested) {
		return nil, false
	}
	return o.RebootSuggested, true
}

// HasRebootSuggested returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasRebootSuggested() bool {
	if o != nil && !IsNil(o.RebootSuggested) {
		return true
	}

	return false
}

// SetRebootSuggested gets a reference to the given int32 and assigns it to the RebootSuggested field.
func (o *AdvisoryAlmaPackage) SetRebootSuggested(v int32) {
	o.RebootSuggested = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *AdvisoryAlmaPackage) SetRelease(v string) {
	o.Release = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *AdvisoryAlmaPackage) SetSource(v string) {
	o.Source = &v
}

// GetSum returns the Sum field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetSum() string {
	if o == nil || IsNil(o.Sum) {
		var ret string
		return ret
	}
	return *o.Sum
}

// GetSumOk returns a tuple with the Sum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetSumOk() (*string, bool) {
	if o == nil || IsNil(o.Sum) {
		return nil, false
	}
	return o.Sum, true
}

// HasSum returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasSum() bool {
	if o != nil && !IsNil(o.Sum) {
		return true
	}

	return false
}

// SetSum gets a reference to the given string and assigns it to the Sum field.
func (o *AdvisoryAlmaPackage) SetSum(v string) {
	o.Sum = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryAlmaPackage) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAlmaPackage) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryAlmaPackage) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryAlmaPackage) SetVersion(v string) {
	o.Version = &v
}

func (o AdvisoryAlmaPackage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAlmaPackage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arch) {
		toSerialize["arch"] = o.Arch
	}
	if !IsNil(o.Epoch) {
		toSerialize["epoch"] = o.Epoch
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RebootSuggested) {
		toSerialize["reboot_suggested"] = o.RebootSuggested
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Sum) {
		toSerialize["sum"] = o.Sum
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdvisoryAlmaPackage struct {
	value *AdvisoryAlmaPackage
	isSet bool
}

func (v NullableAdvisoryAlmaPackage) Get() *AdvisoryAlmaPackage {
	return v.value
}

func (v *NullableAdvisoryAlmaPackage) Set(val *AdvisoryAlmaPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAlmaPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAlmaPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAlmaPackage(val *AdvisoryAlmaPackage) *NullableAdvisoryAlmaPackage {
	return &NullableAdvisoryAlmaPackage{value: val, isSet: true}
}

func (v NullableAdvisoryAlmaPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAlmaPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


