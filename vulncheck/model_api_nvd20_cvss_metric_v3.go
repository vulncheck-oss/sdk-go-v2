/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNVD20CvssMetricV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNVD20CvssMetricV3{}

// ApiNVD20CvssMetricV3 struct for ApiNVD20CvssMetricV3
type ApiNVD20CvssMetricV3 struct {
	CvssData *ApiNVD20CvssDataV3 `json:"cvssData,omitempty"`
	ExploitabilityScore *float32 `json:"exploitabilityScore,omitempty"`
	ImpactScore *float32 `json:"impactScore,omitempty"`
	Source *string `json:"source,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewApiNVD20CvssMetricV3 instantiates a new ApiNVD20CvssMetricV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNVD20CvssMetricV3() *ApiNVD20CvssMetricV3 {
	this := ApiNVD20CvssMetricV3{}
	return &this
}

// NewApiNVD20CvssMetricV3WithDefaults instantiates a new ApiNVD20CvssMetricV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNVD20CvssMetricV3WithDefaults() *ApiNVD20CvssMetricV3 {
	this := ApiNVD20CvssMetricV3{}
	return &this
}

// GetCvssData returns the CvssData field value if set, zero value otherwise.
func (o *ApiNVD20CvssMetricV3) GetCvssData() ApiNVD20CvssDataV3 {
	if o == nil || IsNil(o.CvssData) {
		var ret ApiNVD20CvssDataV3
		return ret
	}
	return *o.CvssData
}

// GetCvssDataOk returns a tuple with the CvssData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CvssMetricV3) GetCvssDataOk() (*ApiNVD20CvssDataV3, bool) {
	if o == nil || IsNil(o.CvssData) {
		return nil, false
	}
	return o.CvssData, true
}

// HasCvssData returns a boolean if a field has been set.
func (o *ApiNVD20CvssMetricV3) HasCvssData() bool {
	if o != nil && !IsNil(o.CvssData) {
		return true
	}

	return false
}

// SetCvssData gets a reference to the given ApiNVD20CvssDataV3 and assigns it to the CvssData field.
func (o *ApiNVD20CvssMetricV3) SetCvssData(v ApiNVD20CvssDataV3) {
	o.CvssData = &v
}

// GetExploitabilityScore returns the ExploitabilityScore field value if set, zero value otherwise.
func (o *ApiNVD20CvssMetricV3) GetExploitabilityScore() float32 {
	if o == nil || IsNil(o.ExploitabilityScore) {
		var ret float32
		return ret
	}
	return *o.ExploitabilityScore
}

// GetExploitabilityScoreOk returns a tuple with the ExploitabilityScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CvssMetricV3) GetExploitabilityScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ExploitabilityScore) {
		return nil, false
	}
	return o.ExploitabilityScore, true
}

// HasExploitabilityScore returns a boolean if a field has been set.
func (o *ApiNVD20CvssMetricV3) HasExploitabilityScore() bool {
	if o != nil && !IsNil(o.ExploitabilityScore) {
		return true
	}

	return false
}

// SetExploitabilityScore gets a reference to the given float32 and assigns it to the ExploitabilityScore field.
func (o *ApiNVD20CvssMetricV3) SetExploitabilityScore(v float32) {
	o.ExploitabilityScore = &v
}

// GetImpactScore returns the ImpactScore field value if set, zero value otherwise.
func (o *ApiNVD20CvssMetricV3) GetImpactScore() float32 {
	if o == nil || IsNil(o.ImpactScore) {
		var ret float32
		return ret
	}
	return *o.ImpactScore
}

// GetImpactScoreOk returns a tuple with the ImpactScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CvssMetricV3) GetImpactScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.ImpactScore) {
		return nil, false
	}
	return o.ImpactScore, true
}

// HasImpactScore returns a boolean if a field has been set.
func (o *ApiNVD20CvssMetricV3) HasImpactScore() bool {
	if o != nil && !IsNil(o.ImpactScore) {
		return true
	}

	return false
}

// SetImpactScore gets a reference to the given float32 and assigns it to the ImpactScore field.
func (o *ApiNVD20CvssMetricV3) SetImpactScore(v float32) {
	o.ImpactScore = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ApiNVD20CvssMetricV3) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CvssMetricV3) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ApiNVD20CvssMetricV3) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ApiNVD20CvssMetricV3) SetSource(v string) {
	o.Source = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiNVD20CvssMetricV3) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CvssMetricV3) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiNVD20CvssMetricV3) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiNVD20CvssMetricV3) SetType(v string) {
	o.Type = &v
}

func (o ApiNVD20CvssMetricV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNVD20CvssMetricV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CvssData) {
		toSerialize["cvssData"] = o.CvssData
	}
	if !IsNil(o.ExploitabilityScore) {
		toSerialize["exploitabilityScore"] = o.ExploitabilityScore
	}
	if !IsNil(o.ImpactScore) {
		toSerialize["impactScore"] = o.ImpactScore
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableApiNVD20CvssMetricV3 struct {
	value *ApiNVD20CvssMetricV3
	isSet bool
}

func (v NullableApiNVD20CvssMetricV3) Get() *ApiNVD20CvssMetricV3 {
	return v.value
}

func (v *NullableApiNVD20CvssMetricV3) Set(val *ApiNVD20CvssMetricV3) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNVD20CvssMetricV3) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNVD20CvssMetricV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNVD20CvssMetricV3(val *ApiNVD20CvssMetricV3) *NullableApiNVD20CvssMetricV3 {
	return &NullableApiNVD20CvssMetricV3{value: val, isSet: true}
}

func (v NullableApiNVD20CvssMetricV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNVD20CvssMetricV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


