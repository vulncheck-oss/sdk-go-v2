/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCommVault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCommVault{}

// AdvisoryCommVault struct for AdvisoryCommVault
type AdvisoryCommVault struct {
	Cve []string `json:"cve,omitempty"`
	CveDetails []AdvisoryCommVaultCVEDetails `json:"cve_details,omitempty"`
	CvssRange *string `json:"cvss_range,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	ImpactedProduct *AdvisoryCommVaultImpactedProduct `json:"impacted_product,omitempty"`
	References []string `json:"references,omitempty"`
	Resolution *AdvisoryCommVaultResolution `json:"resolution,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryCommVault instantiates a new AdvisoryCommVault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCommVault() *AdvisoryCommVault {
	this := AdvisoryCommVault{}
	return &this
}

// NewAdvisoryCommVaultWithDefaults instantiates a new AdvisoryCommVault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCommVaultWithDefaults() *AdvisoryCommVault {
	this := AdvisoryCommVault{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCommVault) SetCve(v []string) {
	o.Cve = v
}

// GetCveDetails returns the CveDetails field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetCveDetails() []AdvisoryCommVaultCVEDetails {
	if o == nil || IsNil(o.CveDetails) {
		var ret []AdvisoryCommVaultCVEDetails
		return ret
	}
	return o.CveDetails
}

// GetCveDetailsOk returns a tuple with the CveDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetCveDetailsOk() ([]AdvisoryCommVaultCVEDetails, bool) {
	if o == nil || IsNil(o.CveDetails) {
		return nil, false
	}
	return o.CveDetails, true
}

// HasCveDetails returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasCveDetails() bool {
	if o != nil && !IsNil(o.CveDetails) {
		return true
	}

	return false
}

// SetCveDetails gets a reference to the given []AdvisoryCommVaultCVEDetails and assigns it to the CveDetails field.
func (o *AdvisoryCommVault) SetCveDetails(v []AdvisoryCommVaultCVEDetails) {
	o.CveDetails = v
}

// GetCvssRange returns the CvssRange field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetCvssRange() string {
	if o == nil || IsNil(o.CvssRange) {
		var ret string
		return ret
	}
	return *o.CvssRange
}

// GetCvssRangeOk returns a tuple with the CvssRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetCvssRangeOk() (*string, bool) {
	if o == nil || IsNil(o.CvssRange) {
		return nil, false
	}
	return o.CvssRange, true
}

// HasCvssRange returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasCvssRange() bool {
	if o != nil && !IsNil(o.CvssRange) {
		return true
	}

	return false
}

// SetCvssRange gets a reference to the given string and assigns it to the CvssRange field.
func (o *AdvisoryCommVault) SetCvssRange(v string) {
	o.CvssRange = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCommVault) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryCommVault) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryCommVault) SetId(v string) {
	o.Id = &v
}

// GetImpactedProduct returns the ImpactedProduct field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetImpactedProduct() AdvisoryCommVaultImpactedProduct {
	if o == nil || IsNil(o.ImpactedProduct) {
		var ret AdvisoryCommVaultImpactedProduct
		return ret
	}
	return *o.ImpactedProduct
}

// GetImpactedProductOk returns a tuple with the ImpactedProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetImpactedProductOk() (*AdvisoryCommVaultImpactedProduct, bool) {
	if o == nil || IsNil(o.ImpactedProduct) {
		return nil, false
	}
	return o.ImpactedProduct, true
}

// HasImpactedProduct returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasImpactedProduct() bool {
	if o != nil && !IsNil(o.ImpactedProduct) {
		return true
	}

	return false
}

// SetImpactedProduct gets a reference to the given AdvisoryCommVaultImpactedProduct and assigns it to the ImpactedProduct field.
func (o *AdvisoryCommVault) SetImpactedProduct(v AdvisoryCommVaultImpactedProduct) {
	o.ImpactedProduct = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryCommVault) SetReferences(v []string) {
	o.References = v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetResolution() AdvisoryCommVaultResolution {
	if o == nil || IsNil(o.Resolution) {
		var ret AdvisoryCommVaultResolution
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetResolutionOk() (*AdvisoryCommVaultResolution, bool) {
	if o == nil || IsNil(o.Resolution) {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasResolution() bool {
	if o != nil && !IsNil(o.Resolution) {
		return true
	}

	return false
}

// SetResolution gets a reference to the given AdvisoryCommVaultResolution and assigns it to the Resolution field.
func (o *AdvisoryCommVault) SetResolution(v AdvisoryCommVaultResolution) {
	o.Resolution = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryCommVault) SetSeverity(v string) {
	o.Severity = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryCommVault) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryCommVault) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryCommVault) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCommVault) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryCommVault) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryCommVault) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryCommVault) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCommVault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.CveDetails) {
		toSerialize["cve_details"] = o.CveDetails
	}
	if !IsNil(o.CvssRange) {
		toSerialize["cvss_range"] = o.CvssRange
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImpactedProduct) {
		toSerialize["impacted_product"] = o.ImpactedProduct
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Resolution) {
		toSerialize["resolution"] = o.Resolution
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryCommVault struct {
	value *AdvisoryCommVault
	isSet bool
}

func (v NullableAdvisoryCommVault) Get() *AdvisoryCommVault {
	return v.value
}

func (v *NullableAdvisoryCommVault) Set(val *AdvisoryCommVault) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCommVault) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCommVault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCommVault(val *AdvisoryCommVault) *NullableAdvisoryCommVault {
	return &NullableAdvisoryCommVault{value: val, isSet: true}
}

func (v NullableAdvisoryCommVault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCommVault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


