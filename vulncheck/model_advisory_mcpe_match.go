/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMCPEMatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMCPEMatch{}

// AdvisoryMCPEMatch struct for AdvisoryMCPEMatch
type AdvisoryMCPEMatch struct {
	Criteria *string `json:"criteria,omitempty"`
	MatchCriteriaId *string `json:"matchCriteriaId,omitempty"`
	VersionEndExcluding *string `json:"versionEndExcluding,omitempty"`
	VersionEndIncluding *string `json:"versionEndIncluding,omitempty"`
	VersionStartExcluding *string `json:"versionStartExcluding,omitempty"`
	VersionStartIncluding *string `json:"versionStartIncluding,omitempty"`
	Vulnerable *bool `json:"vulnerable,omitempty"`
}

// NewAdvisoryMCPEMatch instantiates a new AdvisoryMCPEMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMCPEMatch() *AdvisoryMCPEMatch {
	this := AdvisoryMCPEMatch{}
	return &this
}

// NewAdvisoryMCPEMatchWithDefaults instantiates a new AdvisoryMCPEMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMCPEMatchWithDefaults() *AdvisoryMCPEMatch {
	this := AdvisoryMCPEMatch{}
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetCriteria() string {
	if o == nil || IsNil(o.Criteria) {
		var ret string
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given string and assigns it to the Criteria field.
func (o *AdvisoryMCPEMatch) SetCriteria(v string) {
	o.Criteria = &v
}

// GetMatchCriteriaId returns the MatchCriteriaId field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetMatchCriteriaId() string {
	if o == nil || IsNil(o.MatchCriteriaId) {
		var ret string
		return ret
	}
	return *o.MatchCriteriaId
}

// GetMatchCriteriaIdOk returns a tuple with the MatchCriteriaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetMatchCriteriaIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchCriteriaId) {
		return nil, false
	}
	return o.MatchCriteriaId, true
}

// HasMatchCriteriaId returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasMatchCriteriaId() bool {
	if o != nil && !IsNil(o.MatchCriteriaId) {
		return true
	}

	return false
}

// SetMatchCriteriaId gets a reference to the given string and assigns it to the MatchCriteriaId field.
func (o *AdvisoryMCPEMatch) SetMatchCriteriaId(v string) {
	o.MatchCriteriaId = &v
}

// GetVersionEndExcluding returns the VersionEndExcluding field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetVersionEndExcluding() string {
	if o == nil || IsNil(o.VersionEndExcluding) {
		var ret string
		return ret
	}
	return *o.VersionEndExcluding
}

// GetVersionEndExcludingOk returns a tuple with the VersionEndExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetVersionEndExcludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionEndExcluding) {
		return nil, false
	}
	return o.VersionEndExcluding, true
}

// HasVersionEndExcluding returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasVersionEndExcluding() bool {
	if o != nil && !IsNil(o.VersionEndExcluding) {
		return true
	}

	return false
}

// SetVersionEndExcluding gets a reference to the given string and assigns it to the VersionEndExcluding field.
func (o *AdvisoryMCPEMatch) SetVersionEndExcluding(v string) {
	o.VersionEndExcluding = &v
}

// GetVersionEndIncluding returns the VersionEndIncluding field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetVersionEndIncluding() string {
	if o == nil || IsNil(o.VersionEndIncluding) {
		var ret string
		return ret
	}
	return *o.VersionEndIncluding
}

// GetVersionEndIncludingOk returns a tuple with the VersionEndIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetVersionEndIncludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionEndIncluding) {
		return nil, false
	}
	return o.VersionEndIncluding, true
}

// HasVersionEndIncluding returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasVersionEndIncluding() bool {
	if o != nil && !IsNil(o.VersionEndIncluding) {
		return true
	}

	return false
}

// SetVersionEndIncluding gets a reference to the given string and assigns it to the VersionEndIncluding field.
func (o *AdvisoryMCPEMatch) SetVersionEndIncluding(v string) {
	o.VersionEndIncluding = &v
}

// GetVersionStartExcluding returns the VersionStartExcluding field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetVersionStartExcluding() string {
	if o == nil || IsNil(o.VersionStartExcluding) {
		var ret string
		return ret
	}
	return *o.VersionStartExcluding
}

// GetVersionStartExcludingOk returns a tuple with the VersionStartExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetVersionStartExcludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionStartExcluding) {
		return nil, false
	}
	return o.VersionStartExcluding, true
}

// HasVersionStartExcluding returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasVersionStartExcluding() bool {
	if o != nil && !IsNil(o.VersionStartExcluding) {
		return true
	}

	return false
}

// SetVersionStartExcluding gets a reference to the given string and assigns it to the VersionStartExcluding field.
func (o *AdvisoryMCPEMatch) SetVersionStartExcluding(v string) {
	o.VersionStartExcluding = &v
}

// GetVersionStartIncluding returns the VersionStartIncluding field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetVersionStartIncluding() string {
	if o == nil || IsNil(o.VersionStartIncluding) {
		var ret string
		return ret
	}
	return *o.VersionStartIncluding
}

// GetVersionStartIncludingOk returns a tuple with the VersionStartIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetVersionStartIncludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionStartIncluding) {
		return nil, false
	}
	return o.VersionStartIncluding, true
}

// HasVersionStartIncluding returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasVersionStartIncluding() bool {
	if o != nil && !IsNil(o.VersionStartIncluding) {
		return true
	}

	return false
}

// SetVersionStartIncluding gets a reference to the given string and assigns it to the VersionStartIncluding field.
func (o *AdvisoryMCPEMatch) SetVersionStartIncluding(v string) {
	o.VersionStartIncluding = &v
}

// GetVulnerable returns the Vulnerable field value if set, zero value otherwise.
func (o *AdvisoryMCPEMatch) GetVulnerable() bool {
	if o == nil || IsNil(o.Vulnerable) {
		var ret bool
		return ret
	}
	return *o.Vulnerable
}

// GetVulnerableOk returns a tuple with the Vulnerable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCPEMatch) GetVulnerableOk() (*bool, bool) {
	if o == nil || IsNil(o.Vulnerable) {
		return nil, false
	}
	return o.Vulnerable, true
}

// HasVulnerable returns a boolean if a field has been set.
func (o *AdvisoryMCPEMatch) HasVulnerable() bool {
	if o != nil && !IsNil(o.Vulnerable) {
		return true
	}

	return false
}

// SetVulnerable gets a reference to the given bool and assigns it to the Vulnerable field.
func (o *AdvisoryMCPEMatch) SetVulnerable(v bool) {
	o.Vulnerable = &v
}

func (o AdvisoryMCPEMatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMCPEMatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.MatchCriteriaId) {
		toSerialize["matchCriteriaId"] = o.MatchCriteriaId
	}
	if !IsNil(o.VersionEndExcluding) {
		toSerialize["versionEndExcluding"] = o.VersionEndExcluding
	}
	if !IsNil(o.VersionEndIncluding) {
		toSerialize["versionEndIncluding"] = o.VersionEndIncluding
	}
	if !IsNil(o.VersionStartExcluding) {
		toSerialize["versionStartExcluding"] = o.VersionStartExcluding
	}
	if !IsNil(o.VersionStartIncluding) {
		toSerialize["versionStartIncluding"] = o.VersionStartIncluding
	}
	if !IsNil(o.Vulnerable) {
		toSerialize["vulnerable"] = o.Vulnerable
	}
	return toSerialize, nil
}

type NullableAdvisoryMCPEMatch struct {
	value *AdvisoryMCPEMatch
	isSet bool
}

func (v NullableAdvisoryMCPEMatch) Get() *AdvisoryMCPEMatch {
	return v.value
}

func (v *NullableAdvisoryMCPEMatch) Set(val *AdvisoryMCPEMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMCPEMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMCPEMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMCPEMatch(val *AdvisoryMCPEMatch) *NullableAdvisoryMCPEMatch {
	return &NullableAdvisoryMCPEMatch{value: val, isSet: true}
}

func (v NullableAdvisoryMCPEMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMCPEMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


