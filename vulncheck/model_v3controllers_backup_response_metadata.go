/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the V3controllersBackupResponseMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3controllersBackupResponseMetadata{}

// V3controllersBackupResponseMetadata struct for V3controllersBackupResponseMetadata
type V3controllersBackupResponseMetadata struct {
	Index *string `json:"index,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewV3controllersBackupResponseMetadata instantiates a new V3controllersBackupResponseMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3controllersBackupResponseMetadata() *V3controllersBackupResponseMetadata {
	this := V3controllersBackupResponseMetadata{}
	return &this
}

// NewV3controllersBackupResponseMetadataWithDefaults instantiates a new V3controllersBackupResponseMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3controllersBackupResponseMetadataWithDefaults() *V3controllersBackupResponseMetadata {
	this := V3controllersBackupResponseMetadata{}
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *V3controllersBackupResponseMetadata) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3controllersBackupResponseMetadata) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *V3controllersBackupResponseMetadata) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *V3controllersBackupResponseMetadata) SetIndex(v string) {
	o.Index = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *V3controllersBackupResponseMetadata) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3controllersBackupResponseMetadata) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *V3controllersBackupResponseMetadata) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *V3controllersBackupResponseMetadata) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o V3controllersBackupResponseMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3controllersBackupResponseMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableV3controllersBackupResponseMetadata struct {
	value *V3controllersBackupResponseMetadata
	isSet bool
}

func (v NullableV3controllersBackupResponseMetadata) Get() *V3controllersBackupResponseMetadata {
	return v.value
}

func (v *NullableV3controllersBackupResponseMetadata) Set(val *V3controllersBackupResponseMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV3controllersBackupResponseMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV3controllersBackupResponseMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3controllersBackupResponseMetadata(val *V3controllersBackupResponseMetadata) *NullableV3controllersBackupResponseMetadata {
	return &NullableV3controllersBackupResponseMetadata{value: val, isSet: true}
}

func (v NullableV3controllersBackupResponseMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3controllersBackupResponseMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


