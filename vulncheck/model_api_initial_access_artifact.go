/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiInitialAccessArtifact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiInitialAccessArtifact{}

// ApiInitialAccessArtifact struct for ApiInitialAccessArtifact
type ApiInitialAccessArtifact struct {
	// ArtifactName is a title to associate with this artifact.
	ArtifactName *string `json:"artifactName,omitempty"`
	// ArtifactsURL are URLs to the available artifact.
	ArtifactsURL []string `json:"artifactsURL,omitempty"`
	// ...
	BaiduQueries []string `json:"baiduQueries,omitempty"`
	// ...
	BaiduRawQueries []string `json:"baiduRawQueries,omitempty"`
	// CensysQueries are queries for examining potential Internet-exposed devices & applications with Censys in URL form.
	CensysQueries []string `json:"censysQueries,omitempty"`
	// CensysRawQueries are raw queries for examining potential Internet-exposed devices & applications with Censys.
	CensysRawQueries []string `json:"censysRawQueries,omitempty"`
	// CloneSSHURL is the git URL to clone the artifact with.
	CloneSSHURL *string `json:"cloneSSHURL,omitempty"`
	// DateAdded is when this artifact entry was first added to the InitialAccess data set.
	DateAdded *string `json:"dateAdded,omitempty"`
	// Exploit indicates whether or not an exploit is available in this artifact.
	Exploit *bool `json:"exploit,omitempty"`
	// FOFAQueries are raw queries for examining potential Internet-exposed devices & applications with FOFA.
	FofaQueries []string `json:"fofaQueries,omitempty"`
	FofaRawQueries []string `json:"fofaRawQueries,omitempty"`
	// google queries
	GoogleQueries []string `json:"googleQueries,omitempty"`
	// raw google queries
	GoogleRawQueries []string `json:"googleRawQueries,omitempty"`
	// GreynoiseQueries are queries for finding the vulnerability via honeypot data.
	GreynoiseQueries []string `json:"greynoiseQueries,omitempty"`
	// MITRE ATT&CK techniques
	MitreAttackTechniques []string `json:"mitreAttackTechniques,omitempty"`
	// NmapScript indicates whether or not an nmap script for scanning environment exists in this artifact.
	NmapScript *bool `json:"nmapScript,omitempty"`
	// PCAP indicates whether of not a package capture of the exploit PoC exploiting a vulnerable system exists in this artifact.
	Pcap *bool `json:"pcap,omitempty"`
	// Product are the software that has the vulnerability.
	Product []string `json:"product,omitempty"`
	// ShodanQueries are queries for examining potential Internet-exposed devices & applications with Shodan in URL form.
	ShodanQueries []string `json:"shodanQueries,omitempty"`
	// ShodanRawQueries are raw queries for examining potential Internet-exposed devices & applications with Shodan.
	ShodanRawQueries []string `json:"shodanRawQueries,omitempty"`
	// SnortRule indicates whether or not a Snort rule designed to detect the exploitation of the vulnerability over the network exists in this artifact.
	SnortRule *bool `json:"snortRule,omitempty"`
	// SuricataRule indicates whether or not a Suricata rule designed to detect the exploitation of the vulnerability over the network exists in this artifact.
	SuricataRule *bool `json:"suricataRule,omitempty"`
	// TargetDocker indicates whether or not there is an available docker image with the vulnerability.
	TargetDocker *bool `json:"targetDocker,omitempty"`
	// Encrypted communications?
	TargetEncryptedComms *string `json:"targetEncryptedComms,omitempty"`
	// TargetService indicates the service (HTTP, FTP, etc) that this exploit targets.
	TargetService *string `json:"targetService,omitempty"`
	// Vendor of the vulnerable product
	Vendor *string `json:"vendor,omitempty"`
	// VersionScanner indicates whether or not the exploit PoC can determine if target system is vulnerable without sending exploit payload in this artifact.
	VersionScanner *bool `json:"versionScanner,omitempty"`
	// YARA indicates whether or not a YARA rule designed to detect the exploit on an endpoint exists in this artifact.
	Yara *bool `json:"yara,omitempty"`
	// Zeroday indicates whether or not it is a VulnCheck zeroday.
	Zeroday *bool `json:"zeroday,omitempty"`
	// ZoomEyeQueries are raw queries for examining potential Internet-exposed devices & applications with ZoomEye.
	ZoomEyeQueries []string `json:"zoomEyeQueries,omitempty"`
	ZoomEyeRawQueries []string `json:"zoomEyeRawQueries,omitempty"`
}

// NewApiInitialAccessArtifact instantiates a new ApiInitialAccessArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiInitialAccessArtifact() *ApiInitialAccessArtifact {
	this := ApiInitialAccessArtifact{}
	return &this
}

// NewApiInitialAccessArtifactWithDefaults instantiates a new ApiInitialAccessArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiInitialAccessArtifactWithDefaults() *ApiInitialAccessArtifact {
	this := ApiInitialAccessArtifact{}
	return &this
}

// GetArtifactName returns the ArtifactName field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetArtifactName() string {
	if o == nil || IsNil(o.ArtifactName) {
		var ret string
		return ret
	}
	return *o.ArtifactName
}

// GetArtifactNameOk returns a tuple with the ArtifactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetArtifactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactName) {
		return nil, false
	}
	return o.ArtifactName, true
}

// HasArtifactName returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasArtifactName() bool {
	if o != nil && !IsNil(o.ArtifactName) {
		return true
	}

	return false
}

// SetArtifactName gets a reference to the given string and assigns it to the ArtifactName field.
func (o *ApiInitialAccessArtifact) SetArtifactName(v string) {
	o.ArtifactName = &v
}

// GetArtifactsURL returns the ArtifactsURL field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetArtifactsURL() []string {
	if o == nil || IsNil(o.ArtifactsURL) {
		var ret []string
		return ret
	}
	return o.ArtifactsURL
}

// GetArtifactsURLOk returns a tuple with the ArtifactsURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetArtifactsURLOk() ([]string, bool) {
	if o == nil || IsNil(o.ArtifactsURL) {
		return nil, false
	}
	return o.ArtifactsURL, true
}

// HasArtifactsURL returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasArtifactsURL() bool {
	if o != nil && !IsNil(o.ArtifactsURL) {
		return true
	}

	return false
}

// SetArtifactsURL gets a reference to the given []string and assigns it to the ArtifactsURL field.
func (o *ApiInitialAccessArtifact) SetArtifactsURL(v []string) {
	o.ArtifactsURL = v
}

// GetBaiduQueries returns the BaiduQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetBaiduQueries() []string {
	if o == nil || IsNil(o.BaiduQueries) {
		var ret []string
		return ret
	}
	return o.BaiduQueries
}

// GetBaiduQueriesOk returns a tuple with the BaiduQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetBaiduQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.BaiduQueries) {
		return nil, false
	}
	return o.BaiduQueries, true
}

// HasBaiduQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasBaiduQueries() bool {
	if o != nil && !IsNil(o.BaiduQueries) {
		return true
	}

	return false
}

// SetBaiduQueries gets a reference to the given []string and assigns it to the BaiduQueries field.
func (o *ApiInitialAccessArtifact) SetBaiduQueries(v []string) {
	o.BaiduQueries = v
}

// GetBaiduRawQueries returns the BaiduRawQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetBaiduRawQueries() []string {
	if o == nil || IsNil(o.BaiduRawQueries) {
		var ret []string
		return ret
	}
	return o.BaiduRawQueries
}

// GetBaiduRawQueriesOk returns a tuple with the BaiduRawQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetBaiduRawQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.BaiduRawQueries) {
		return nil, false
	}
	return o.BaiduRawQueries, true
}

// HasBaiduRawQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasBaiduRawQueries() bool {
	if o != nil && !IsNil(o.BaiduRawQueries) {
		return true
	}

	return false
}

// SetBaiduRawQueries gets a reference to the given []string and assigns it to the BaiduRawQueries field.
func (o *ApiInitialAccessArtifact) SetBaiduRawQueries(v []string) {
	o.BaiduRawQueries = v
}

// GetCensysQueries returns the CensysQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetCensysQueries() []string {
	if o == nil || IsNil(o.CensysQueries) {
		var ret []string
		return ret
	}
	return o.CensysQueries
}

// GetCensysQueriesOk returns a tuple with the CensysQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetCensysQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.CensysQueries) {
		return nil, false
	}
	return o.CensysQueries, true
}

// HasCensysQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasCensysQueries() bool {
	if o != nil && !IsNil(o.CensysQueries) {
		return true
	}

	return false
}

// SetCensysQueries gets a reference to the given []string and assigns it to the CensysQueries field.
func (o *ApiInitialAccessArtifact) SetCensysQueries(v []string) {
	o.CensysQueries = v
}

// GetCensysRawQueries returns the CensysRawQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetCensysRawQueries() []string {
	if o == nil || IsNil(o.CensysRawQueries) {
		var ret []string
		return ret
	}
	return o.CensysRawQueries
}

// GetCensysRawQueriesOk returns a tuple with the CensysRawQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetCensysRawQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.CensysRawQueries) {
		return nil, false
	}
	return o.CensysRawQueries, true
}

// HasCensysRawQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasCensysRawQueries() bool {
	if o != nil && !IsNil(o.CensysRawQueries) {
		return true
	}

	return false
}

// SetCensysRawQueries gets a reference to the given []string and assigns it to the CensysRawQueries field.
func (o *ApiInitialAccessArtifact) SetCensysRawQueries(v []string) {
	o.CensysRawQueries = v
}

// GetCloneSSHURL returns the CloneSSHURL field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetCloneSSHURL() string {
	if o == nil || IsNil(o.CloneSSHURL) {
		var ret string
		return ret
	}
	return *o.CloneSSHURL
}

// GetCloneSSHURLOk returns a tuple with the CloneSSHURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetCloneSSHURLOk() (*string, bool) {
	if o == nil || IsNil(o.CloneSSHURL) {
		return nil, false
	}
	return o.CloneSSHURL, true
}

// HasCloneSSHURL returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasCloneSSHURL() bool {
	if o != nil && !IsNil(o.CloneSSHURL) {
		return true
	}

	return false
}

// SetCloneSSHURL gets a reference to the given string and assigns it to the CloneSSHURL field.
func (o *ApiInitialAccessArtifact) SetCloneSSHURL(v string) {
	o.CloneSSHURL = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *ApiInitialAccessArtifact) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetExploit returns the Exploit field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetExploit() bool {
	if o == nil || IsNil(o.Exploit) {
		var ret bool
		return ret
	}
	return *o.Exploit
}

// GetExploitOk returns a tuple with the Exploit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetExploitOk() (*bool, bool) {
	if o == nil || IsNil(o.Exploit) {
		return nil, false
	}
	return o.Exploit, true
}

// HasExploit returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasExploit() bool {
	if o != nil && !IsNil(o.Exploit) {
		return true
	}

	return false
}

// SetExploit gets a reference to the given bool and assigns it to the Exploit field.
func (o *ApiInitialAccessArtifact) SetExploit(v bool) {
	o.Exploit = &v
}

// GetFofaQueries returns the FofaQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetFofaQueries() []string {
	if o == nil || IsNil(o.FofaQueries) {
		var ret []string
		return ret
	}
	return o.FofaQueries
}

// GetFofaQueriesOk returns a tuple with the FofaQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetFofaQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.FofaQueries) {
		return nil, false
	}
	return o.FofaQueries, true
}

// HasFofaQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasFofaQueries() bool {
	if o != nil && !IsNil(o.FofaQueries) {
		return true
	}

	return false
}

// SetFofaQueries gets a reference to the given []string and assigns it to the FofaQueries field.
func (o *ApiInitialAccessArtifact) SetFofaQueries(v []string) {
	o.FofaQueries = v
}

// GetFofaRawQueries returns the FofaRawQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetFofaRawQueries() []string {
	if o == nil || IsNil(o.FofaRawQueries) {
		var ret []string
		return ret
	}
	return o.FofaRawQueries
}

// GetFofaRawQueriesOk returns a tuple with the FofaRawQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetFofaRawQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.FofaRawQueries) {
		return nil, false
	}
	return o.FofaRawQueries, true
}

// HasFofaRawQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasFofaRawQueries() bool {
	if o != nil && !IsNil(o.FofaRawQueries) {
		return true
	}

	return false
}

// SetFofaRawQueries gets a reference to the given []string and assigns it to the FofaRawQueries field.
func (o *ApiInitialAccessArtifact) SetFofaRawQueries(v []string) {
	o.FofaRawQueries = v
}

// GetGoogleQueries returns the GoogleQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetGoogleQueries() []string {
	if o == nil || IsNil(o.GoogleQueries) {
		var ret []string
		return ret
	}
	return o.GoogleQueries
}

// GetGoogleQueriesOk returns a tuple with the GoogleQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetGoogleQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.GoogleQueries) {
		return nil, false
	}
	return o.GoogleQueries, true
}

// HasGoogleQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasGoogleQueries() bool {
	if o != nil && !IsNil(o.GoogleQueries) {
		return true
	}

	return false
}

// SetGoogleQueries gets a reference to the given []string and assigns it to the GoogleQueries field.
func (o *ApiInitialAccessArtifact) SetGoogleQueries(v []string) {
	o.GoogleQueries = v
}

// GetGoogleRawQueries returns the GoogleRawQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetGoogleRawQueries() []string {
	if o == nil || IsNil(o.GoogleRawQueries) {
		var ret []string
		return ret
	}
	return o.GoogleRawQueries
}

// GetGoogleRawQueriesOk returns a tuple with the GoogleRawQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetGoogleRawQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.GoogleRawQueries) {
		return nil, false
	}
	return o.GoogleRawQueries, true
}

// HasGoogleRawQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasGoogleRawQueries() bool {
	if o != nil && !IsNil(o.GoogleRawQueries) {
		return true
	}

	return false
}

// SetGoogleRawQueries gets a reference to the given []string and assigns it to the GoogleRawQueries field.
func (o *ApiInitialAccessArtifact) SetGoogleRawQueries(v []string) {
	o.GoogleRawQueries = v
}

// GetGreynoiseQueries returns the GreynoiseQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetGreynoiseQueries() []string {
	if o == nil || IsNil(o.GreynoiseQueries) {
		var ret []string
		return ret
	}
	return o.GreynoiseQueries
}

// GetGreynoiseQueriesOk returns a tuple with the GreynoiseQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetGreynoiseQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.GreynoiseQueries) {
		return nil, false
	}
	return o.GreynoiseQueries, true
}

// HasGreynoiseQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasGreynoiseQueries() bool {
	if o != nil && !IsNil(o.GreynoiseQueries) {
		return true
	}

	return false
}

// SetGreynoiseQueries gets a reference to the given []string and assigns it to the GreynoiseQueries field.
func (o *ApiInitialAccessArtifact) SetGreynoiseQueries(v []string) {
	o.GreynoiseQueries = v
}

// GetMitreAttackTechniques returns the MitreAttackTechniques field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetMitreAttackTechniques() []string {
	if o == nil || IsNil(o.MitreAttackTechniques) {
		var ret []string
		return ret
	}
	return o.MitreAttackTechniques
}

// GetMitreAttackTechniquesOk returns a tuple with the MitreAttackTechniques field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetMitreAttackTechniquesOk() ([]string, bool) {
	if o == nil || IsNil(o.MitreAttackTechniques) {
		return nil, false
	}
	return o.MitreAttackTechniques, true
}

// HasMitreAttackTechniques returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasMitreAttackTechniques() bool {
	if o != nil && !IsNil(o.MitreAttackTechniques) {
		return true
	}

	return false
}

// SetMitreAttackTechniques gets a reference to the given []string and assigns it to the MitreAttackTechniques field.
func (o *ApiInitialAccessArtifact) SetMitreAttackTechniques(v []string) {
	o.MitreAttackTechniques = v
}

// GetNmapScript returns the NmapScript field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetNmapScript() bool {
	if o == nil || IsNil(o.NmapScript) {
		var ret bool
		return ret
	}
	return *o.NmapScript
}

// GetNmapScriptOk returns a tuple with the NmapScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetNmapScriptOk() (*bool, bool) {
	if o == nil || IsNil(o.NmapScript) {
		return nil, false
	}
	return o.NmapScript, true
}

// HasNmapScript returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasNmapScript() bool {
	if o != nil && !IsNil(o.NmapScript) {
		return true
	}

	return false
}

// SetNmapScript gets a reference to the given bool and assigns it to the NmapScript field.
func (o *ApiInitialAccessArtifact) SetNmapScript(v bool) {
	o.NmapScript = &v
}

// GetPcap returns the Pcap field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetPcap() bool {
	if o == nil || IsNil(o.Pcap) {
		var ret bool
		return ret
	}
	return *o.Pcap
}

// GetPcapOk returns a tuple with the Pcap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetPcapOk() (*bool, bool) {
	if o == nil || IsNil(o.Pcap) {
		return nil, false
	}
	return o.Pcap, true
}

// HasPcap returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasPcap() bool {
	if o != nil && !IsNil(o.Pcap) {
		return true
	}

	return false
}

// SetPcap gets a reference to the given bool and assigns it to the Pcap field.
func (o *ApiInitialAccessArtifact) SetPcap(v bool) {
	o.Pcap = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetProduct() []string {
	if o == nil || IsNil(o.Product) {
		var ret []string
		return ret
	}
	return o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetProductOk() ([]string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given []string and assigns it to the Product field.
func (o *ApiInitialAccessArtifact) SetProduct(v []string) {
	o.Product = v
}

// GetShodanQueries returns the ShodanQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetShodanQueries() []string {
	if o == nil || IsNil(o.ShodanQueries) {
		var ret []string
		return ret
	}
	return o.ShodanQueries
}

// GetShodanQueriesOk returns a tuple with the ShodanQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetShodanQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.ShodanQueries) {
		return nil, false
	}
	return o.ShodanQueries, true
}

// HasShodanQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasShodanQueries() bool {
	if o != nil && !IsNil(o.ShodanQueries) {
		return true
	}

	return false
}

// SetShodanQueries gets a reference to the given []string and assigns it to the ShodanQueries field.
func (o *ApiInitialAccessArtifact) SetShodanQueries(v []string) {
	o.ShodanQueries = v
}

// GetShodanRawQueries returns the ShodanRawQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetShodanRawQueries() []string {
	if o == nil || IsNil(o.ShodanRawQueries) {
		var ret []string
		return ret
	}
	return o.ShodanRawQueries
}

// GetShodanRawQueriesOk returns a tuple with the ShodanRawQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetShodanRawQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.ShodanRawQueries) {
		return nil, false
	}
	return o.ShodanRawQueries, true
}

// HasShodanRawQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasShodanRawQueries() bool {
	if o != nil && !IsNil(o.ShodanRawQueries) {
		return true
	}

	return false
}

// SetShodanRawQueries gets a reference to the given []string and assigns it to the ShodanRawQueries field.
func (o *ApiInitialAccessArtifact) SetShodanRawQueries(v []string) {
	o.ShodanRawQueries = v
}

// GetSnortRule returns the SnortRule field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetSnortRule() bool {
	if o == nil || IsNil(o.SnortRule) {
		var ret bool
		return ret
	}
	return *o.SnortRule
}

// GetSnortRuleOk returns a tuple with the SnortRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetSnortRuleOk() (*bool, bool) {
	if o == nil || IsNil(o.SnortRule) {
		return nil, false
	}
	return o.SnortRule, true
}

// HasSnortRule returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasSnortRule() bool {
	if o != nil && !IsNil(o.SnortRule) {
		return true
	}

	return false
}

// SetSnortRule gets a reference to the given bool and assigns it to the SnortRule field.
func (o *ApiInitialAccessArtifact) SetSnortRule(v bool) {
	o.SnortRule = &v
}

// GetSuricataRule returns the SuricataRule field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetSuricataRule() bool {
	if o == nil || IsNil(o.SuricataRule) {
		var ret bool
		return ret
	}
	return *o.SuricataRule
}

// GetSuricataRuleOk returns a tuple with the SuricataRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetSuricataRuleOk() (*bool, bool) {
	if o == nil || IsNil(o.SuricataRule) {
		return nil, false
	}
	return o.SuricataRule, true
}

// HasSuricataRule returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasSuricataRule() bool {
	if o != nil && !IsNil(o.SuricataRule) {
		return true
	}

	return false
}

// SetSuricataRule gets a reference to the given bool and assigns it to the SuricataRule field.
func (o *ApiInitialAccessArtifact) SetSuricataRule(v bool) {
	o.SuricataRule = &v
}

// GetTargetDocker returns the TargetDocker field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetTargetDocker() bool {
	if o == nil || IsNil(o.TargetDocker) {
		var ret bool
		return ret
	}
	return *o.TargetDocker
}

// GetTargetDockerOk returns a tuple with the TargetDocker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetTargetDockerOk() (*bool, bool) {
	if o == nil || IsNil(o.TargetDocker) {
		return nil, false
	}
	return o.TargetDocker, true
}

// HasTargetDocker returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasTargetDocker() bool {
	if o != nil && !IsNil(o.TargetDocker) {
		return true
	}

	return false
}

// SetTargetDocker gets a reference to the given bool and assigns it to the TargetDocker field.
func (o *ApiInitialAccessArtifact) SetTargetDocker(v bool) {
	o.TargetDocker = &v
}

// GetTargetEncryptedComms returns the TargetEncryptedComms field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetTargetEncryptedComms() string {
	if o == nil || IsNil(o.TargetEncryptedComms) {
		var ret string
		return ret
	}
	return *o.TargetEncryptedComms
}

// GetTargetEncryptedCommsOk returns a tuple with the TargetEncryptedComms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetTargetEncryptedCommsOk() (*string, bool) {
	if o == nil || IsNil(o.TargetEncryptedComms) {
		return nil, false
	}
	return o.TargetEncryptedComms, true
}

// HasTargetEncryptedComms returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasTargetEncryptedComms() bool {
	if o != nil && !IsNil(o.TargetEncryptedComms) {
		return true
	}

	return false
}

// SetTargetEncryptedComms gets a reference to the given string and assigns it to the TargetEncryptedComms field.
func (o *ApiInitialAccessArtifact) SetTargetEncryptedComms(v string) {
	o.TargetEncryptedComms = &v
}

// GetTargetService returns the TargetService field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetTargetService() string {
	if o == nil || IsNil(o.TargetService) {
		var ret string
		return ret
	}
	return *o.TargetService
}

// GetTargetServiceOk returns a tuple with the TargetService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetTargetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.TargetService) {
		return nil, false
	}
	return o.TargetService, true
}

// HasTargetService returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasTargetService() bool {
	if o != nil && !IsNil(o.TargetService) {
		return true
	}

	return false
}

// SetTargetService gets a reference to the given string and assigns it to the TargetService field.
func (o *ApiInitialAccessArtifact) SetTargetService(v string) {
	o.TargetService = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ApiInitialAccessArtifact) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersionScanner returns the VersionScanner field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetVersionScanner() bool {
	if o == nil || IsNil(o.VersionScanner) {
		var ret bool
		return ret
	}
	return *o.VersionScanner
}

// GetVersionScannerOk returns a tuple with the VersionScanner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetVersionScannerOk() (*bool, bool) {
	if o == nil || IsNil(o.VersionScanner) {
		return nil, false
	}
	return o.VersionScanner, true
}

// HasVersionScanner returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasVersionScanner() bool {
	if o != nil && !IsNil(o.VersionScanner) {
		return true
	}

	return false
}

// SetVersionScanner gets a reference to the given bool and assigns it to the VersionScanner field.
func (o *ApiInitialAccessArtifact) SetVersionScanner(v bool) {
	o.VersionScanner = &v
}

// GetYara returns the Yara field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetYara() bool {
	if o == nil || IsNil(o.Yara) {
		var ret bool
		return ret
	}
	return *o.Yara
}

// GetYaraOk returns a tuple with the Yara field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetYaraOk() (*bool, bool) {
	if o == nil || IsNil(o.Yara) {
		return nil, false
	}
	return o.Yara, true
}

// HasYara returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasYara() bool {
	if o != nil && !IsNil(o.Yara) {
		return true
	}

	return false
}

// SetYara gets a reference to the given bool and assigns it to the Yara field.
func (o *ApiInitialAccessArtifact) SetYara(v bool) {
	o.Yara = &v
}

// GetZeroday returns the Zeroday field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetZeroday() bool {
	if o == nil || IsNil(o.Zeroday) {
		var ret bool
		return ret
	}
	return *o.Zeroday
}

// GetZerodayOk returns a tuple with the Zeroday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetZerodayOk() (*bool, bool) {
	if o == nil || IsNil(o.Zeroday) {
		return nil, false
	}
	return o.Zeroday, true
}

// HasZeroday returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasZeroday() bool {
	if o != nil && !IsNil(o.Zeroday) {
		return true
	}

	return false
}

// SetZeroday gets a reference to the given bool and assigns it to the Zeroday field.
func (o *ApiInitialAccessArtifact) SetZeroday(v bool) {
	o.Zeroday = &v
}

// GetZoomEyeQueries returns the ZoomEyeQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetZoomEyeQueries() []string {
	if o == nil || IsNil(o.ZoomEyeQueries) {
		var ret []string
		return ret
	}
	return o.ZoomEyeQueries
}

// GetZoomEyeQueriesOk returns a tuple with the ZoomEyeQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetZoomEyeQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.ZoomEyeQueries) {
		return nil, false
	}
	return o.ZoomEyeQueries, true
}

// HasZoomEyeQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasZoomEyeQueries() bool {
	if o != nil && !IsNil(o.ZoomEyeQueries) {
		return true
	}

	return false
}

// SetZoomEyeQueries gets a reference to the given []string and assigns it to the ZoomEyeQueries field.
func (o *ApiInitialAccessArtifact) SetZoomEyeQueries(v []string) {
	o.ZoomEyeQueries = v
}

// GetZoomEyeRawQueries returns the ZoomEyeRawQueries field value if set, zero value otherwise.
func (o *ApiInitialAccessArtifact) GetZoomEyeRawQueries() []string {
	if o == nil || IsNil(o.ZoomEyeRawQueries) {
		var ret []string
		return ret
	}
	return o.ZoomEyeRawQueries
}

// GetZoomEyeRawQueriesOk returns a tuple with the ZoomEyeRawQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccessArtifact) GetZoomEyeRawQueriesOk() ([]string, bool) {
	if o == nil || IsNil(o.ZoomEyeRawQueries) {
		return nil, false
	}
	return o.ZoomEyeRawQueries, true
}

// HasZoomEyeRawQueries returns a boolean if a field has been set.
func (o *ApiInitialAccessArtifact) HasZoomEyeRawQueries() bool {
	if o != nil && !IsNil(o.ZoomEyeRawQueries) {
		return true
	}

	return false
}

// SetZoomEyeRawQueries gets a reference to the given []string and assigns it to the ZoomEyeRawQueries field.
func (o *ApiInitialAccessArtifact) SetZoomEyeRawQueries(v []string) {
	o.ZoomEyeRawQueries = v
}

func (o ApiInitialAccessArtifact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiInitialAccessArtifact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArtifactName) {
		toSerialize["artifactName"] = o.ArtifactName
	}
	if !IsNil(o.ArtifactsURL) {
		toSerialize["artifactsURL"] = o.ArtifactsURL
	}
	if !IsNil(o.BaiduQueries) {
		toSerialize["baiduQueries"] = o.BaiduQueries
	}
	if !IsNil(o.BaiduRawQueries) {
		toSerialize["baiduRawQueries"] = o.BaiduRawQueries
	}
	if !IsNil(o.CensysQueries) {
		toSerialize["censysQueries"] = o.CensysQueries
	}
	if !IsNil(o.CensysRawQueries) {
		toSerialize["censysRawQueries"] = o.CensysRawQueries
	}
	if !IsNil(o.CloneSSHURL) {
		toSerialize["cloneSSHURL"] = o.CloneSSHURL
	}
	if !IsNil(o.DateAdded) {
		toSerialize["dateAdded"] = o.DateAdded
	}
	if !IsNil(o.Exploit) {
		toSerialize["exploit"] = o.Exploit
	}
	if !IsNil(o.FofaQueries) {
		toSerialize["fofaQueries"] = o.FofaQueries
	}
	if !IsNil(o.FofaRawQueries) {
		toSerialize["fofaRawQueries"] = o.FofaRawQueries
	}
	if !IsNil(o.GoogleQueries) {
		toSerialize["googleQueries"] = o.GoogleQueries
	}
	if !IsNil(o.GoogleRawQueries) {
		toSerialize["googleRawQueries"] = o.GoogleRawQueries
	}
	if !IsNil(o.GreynoiseQueries) {
		toSerialize["greynoiseQueries"] = o.GreynoiseQueries
	}
	if !IsNil(o.MitreAttackTechniques) {
		toSerialize["mitreAttackTechniques"] = o.MitreAttackTechniques
	}
	if !IsNil(o.NmapScript) {
		toSerialize["nmapScript"] = o.NmapScript
	}
	if !IsNil(o.Pcap) {
		toSerialize["pcap"] = o.Pcap
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ShodanQueries) {
		toSerialize["shodanQueries"] = o.ShodanQueries
	}
	if !IsNil(o.ShodanRawQueries) {
		toSerialize["shodanRawQueries"] = o.ShodanRawQueries
	}
	if !IsNil(o.SnortRule) {
		toSerialize["snortRule"] = o.SnortRule
	}
	if !IsNil(o.SuricataRule) {
		toSerialize["suricataRule"] = o.SuricataRule
	}
	if !IsNil(o.TargetDocker) {
		toSerialize["targetDocker"] = o.TargetDocker
	}
	if !IsNil(o.TargetEncryptedComms) {
		toSerialize["targetEncryptedComms"] = o.TargetEncryptedComms
	}
	if !IsNil(o.TargetService) {
		toSerialize["targetService"] = o.TargetService
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.VersionScanner) {
		toSerialize["versionScanner"] = o.VersionScanner
	}
	if !IsNil(o.Yara) {
		toSerialize["yara"] = o.Yara
	}
	if !IsNil(o.Zeroday) {
		toSerialize["zeroday"] = o.Zeroday
	}
	if !IsNil(o.ZoomEyeQueries) {
		toSerialize["zoomEyeQueries"] = o.ZoomEyeQueries
	}
	if !IsNil(o.ZoomEyeRawQueries) {
		toSerialize["zoomEyeRawQueries"] = o.ZoomEyeRawQueries
	}
	return toSerialize, nil
}

type NullableApiInitialAccessArtifact struct {
	value *ApiInitialAccessArtifact
	isSet bool
}

func (v NullableApiInitialAccessArtifact) Get() *ApiInitialAccessArtifact {
	return v.value
}

func (v *NullableApiInitialAccessArtifact) Set(val *ApiInitialAccessArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInitialAccessArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInitialAccessArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInitialAccessArtifact(val *ApiInitialAccessArtifact) *NullableApiInitialAccessArtifact {
	return &NullableApiInitialAccessArtifact{value: val, isSet: true}
}

func (v NullableApiInitialAccessArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInitialAccessArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


