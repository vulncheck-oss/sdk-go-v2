/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCvsssV23 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCvsssV23{}

// AdvisoryCvsssV23 struct for AdvisoryCvsssV23
type AdvisoryCvsssV23 struct {
	Basescore *string `json:"basescore,omitempty"`
	Temporalscore *string `json:"temporalscore,omitempty"`
}

// NewAdvisoryCvsssV23 instantiates a new AdvisoryCvsssV23 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCvsssV23() *AdvisoryCvsssV23 {
	this := AdvisoryCvsssV23{}
	return &this
}

// NewAdvisoryCvsssV23WithDefaults instantiates a new AdvisoryCvsssV23 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCvsssV23WithDefaults() *AdvisoryCvsssV23 {
	this := AdvisoryCvsssV23{}
	return &this
}

// GetBasescore returns the Basescore field value if set, zero value otherwise.
func (o *AdvisoryCvsssV23) GetBasescore() string {
	if o == nil || IsNil(o.Basescore) {
		var ret string
		return ret
	}
	return *o.Basescore
}

// GetBasescoreOk returns a tuple with the Basescore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvsssV23) GetBasescoreOk() (*string, bool) {
	if o == nil || IsNil(o.Basescore) {
		return nil, false
	}
	return o.Basescore, true
}

// HasBasescore returns a boolean if a field has been set.
func (o *AdvisoryCvsssV23) HasBasescore() bool {
	if o != nil && !IsNil(o.Basescore) {
		return true
	}

	return false
}

// SetBasescore gets a reference to the given string and assigns it to the Basescore field.
func (o *AdvisoryCvsssV23) SetBasescore(v string) {
	o.Basescore = &v
}

// GetTemporalscore returns the Temporalscore field value if set, zero value otherwise.
func (o *AdvisoryCvsssV23) GetTemporalscore() string {
	if o == nil || IsNil(o.Temporalscore) {
		var ret string
		return ret
	}
	return *o.Temporalscore
}

// GetTemporalscoreOk returns a tuple with the Temporalscore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvsssV23) GetTemporalscoreOk() (*string, bool) {
	if o == nil || IsNil(o.Temporalscore) {
		return nil, false
	}
	return o.Temporalscore, true
}

// HasTemporalscore returns a boolean if a field has been set.
func (o *AdvisoryCvsssV23) HasTemporalscore() bool {
	if o != nil && !IsNil(o.Temporalscore) {
		return true
	}

	return false
}

// SetTemporalscore gets a reference to the given string and assigns it to the Temporalscore field.
func (o *AdvisoryCvsssV23) SetTemporalscore(v string) {
	o.Temporalscore = &v
}

func (o AdvisoryCvsssV23) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCvsssV23) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Basescore) {
		toSerialize["basescore"] = o.Basescore
	}
	if !IsNil(o.Temporalscore) {
		toSerialize["temporalscore"] = o.Temporalscore
	}
	return toSerialize, nil
}

type NullableAdvisoryCvsssV23 struct {
	value *AdvisoryCvsssV23
	isSet bool
}

func (v NullableAdvisoryCvsssV23) Get() *AdvisoryCvsssV23 {
	return v.value
}

func (v *NullableAdvisoryCvsssV23) Set(val *AdvisoryCvsssV23) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCvsssV23) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCvsssV23) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCvsssV23(val *AdvisoryCvsssV23) *NullableAdvisoryCvsssV23 {
	return &NullableAdvisoryCvsssV23{value: val, isSet: true}
}

func (v NullableAdvisoryCvsssV23) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCvsssV23) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


