/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNVD20TemporalCVSSV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNVD20TemporalCVSSV3{}

// ApiNVD20TemporalCVSSV3 struct for ApiNVD20TemporalCVSSV3
type ApiNVD20TemporalCVSSV3 struct {
	AssociatedBaseMetricV3 *ApiNVD20TemporalAssociatedBaseMetric `json:"associatedBaseMetricV3,omitempty"`
	ExploitCodeMaturity *string `json:"exploitCodeMaturity,omitempty"`
	RemediationLevel *string `json:"remediationLevel,omitempty"`
	ReportConfidence *string `json:"reportConfidence,omitempty"`
	TemporalScore *float32 `json:"temporalScore,omitempty"`
	VectorString *string `json:"vectorString,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewApiNVD20TemporalCVSSV3 instantiates a new ApiNVD20TemporalCVSSV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNVD20TemporalCVSSV3() *ApiNVD20TemporalCVSSV3 {
	this := ApiNVD20TemporalCVSSV3{}
	return &this
}

// NewApiNVD20TemporalCVSSV3WithDefaults instantiates a new ApiNVD20TemporalCVSSV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNVD20TemporalCVSSV3WithDefaults() *ApiNVD20TemporalCVSSV3 {
	this := ApiNVD20TemporalCVSSV3{}
	return &this
}

// GetAssociatedBaseMetricV3 returns the AssociatedBaseMetricV3 field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetAssociatedBaseMetricV3() ApiNVD20TemporalAssociatedBaseMetric {
	if o == nil || IsNil(o.AssociatedBaseMetricV3) {
		var ret ApiNVD20TemporalAssociatedBaseMetric
		return ret
	}
	return *o.AssociatedBaseMetricV3
}

// GetAssociatedBaseMetricV3Ok returns a tuple with the AssociatedBaseMetricV3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetAssociatedBaseMetricV3Ok() (*ApiNVD20TemporalAssociatedBaseMetric, bool) {
	if o == nil || IsNil(o.AssociatedBaseMetricV3) {
		return nil, false
	}
	return o.AssociatedBaseMetricV3, true
}

// HasAssociatedBaseMetricV3 returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasAssociatedBaseMetricV3() bool {
	if o != nil && !IsNil(o.AssociatedBaseMetricV3) {
		return true
	}

	return false
}

// SetAssociatedBaseMetricV3 gets a reference to the given ApiNVD20TemporalAssociatedBaseMetric and assigns it to the AssociatedBaseMetricV3 field.
func (o *ApiNVD20TemporalCVSSV3) SetAssociatedBaseMetricV3(v ApiNVD20TemporalAssociatedBaseMetric) {
	o.AssociatedBaseMetricV3 = &v
}

// GetExploitCodeMaturity returns the ExploitCodeMaturity field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetExploitCodeMaturity() string {
	if o == nil || IsNil(o.ExploitCodeMaturity) {
		var ret string
		return ret
	}
	return *o.ExploitCodeMaturity
}

// GetExploitCodeMaturityOk returns a tuple with the ExploitCodeMaturity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetExploitCodeMaturityOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitCodeMaturity) {
		return nil, false
	}
	return o.ExploitCodeMaturity, true
}

// HasExploitCodeMaturity returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasExploitCodeMaturity() bool {
	if o != nil && !IsNil(o.ExploitCodeMaturity) {
		return true
	}

	return false
}

// SetExploitCodeMaturity gets a reference to the given string and assigns it to the ExploitCodeMaturity field.
func (o *ApiNVD20TemporalCVSSV3) SetExploitCodeMaturity(v string) {
	o.ExploitCodeMaturity = &v
}

// GetRemediationLevel returns the RemediationLevel field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetRemediationLevel() string {
	if o == nil || IsNil(o.RemediationLevel) {
		var ret string
		return ret
	}
	return *o.RemediationLevel
}

// GetRemediationLevelOk returns a tuple with the RemediationLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetRemediationLevelOk() (*string, bool) {
	if o == nil || IsNil(o.RemediationLevel) {
		return nil, false
	}
	return o.RemediationLevel, true
}

// HasRemediationLevel returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasRemediationLevel() bool {
	if o != nil && !IsNil(o.RemediationLevel) {
		return true
	}

	return false
}

// SetRemediationLevel gets a reference to the given string and assigns it to the RemediationLevel field.
func (o *ApiNVD20TemporalCVSSV3) SetRemediationLevel(v string) {
	o.RemediationLevel = &v
}

// GetReportConfidence returns the ReportConfidence field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetReportConfidence() string {
	if o == nil || IsNil(o.ReportConfidence) {
		var ret string
		return ret
	}
	return *o.ReportConfidence
}

// GetReportConfidenceOk returns a tuple with the ReportConfidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetReportConfidenceOk() (*string, bool) {
	if o == nil || IsNil(o.ReportConfidence) {
		return nil, false
	}
	return o.ReportConfidence, true
}

// HasReportConfidence returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasReportConfidence() bool {
	if o != nil && !IsNil(o.ReportConfidence) {
		return true
	}

	return false
}

// SetReportConfidence gets a reference to the given string and assigns it to the ReportConfidence field.
func (o *ApiNVD20TemporalCVSSV3) SetReportConfidence(v string) {
	o.ReportConfidence = &v
}

// GetTemporalScore returns the TemporalScore field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetTemporalScore() float32 {
	if o == nil || IsNil(o.TemporalScore) {
		var ret float32
		return ret
	}
	return *o.TemporalScore
}

// GetTemporalScoreOk returns a tuple with the TemporalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetTemporalScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.TemporalScore) {
		return nil, false
	}
	return o.TemporalScore, true
}

// HasTemporalScore returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasTemporalScore() bool {
	if o != nil && !IsNil(o.TemporalScore) {
		return true
	}

	return false
}

// SetTemporalScore gets a reference to the given float32 and assigns it to the TemporalScore field.
func (o *ApiNVD20TemporalCVSSV3) SetTemporalScore(v float32) {
	o.TemporalScore = &v
}

// GetVectorString returns the VectorString field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetVectorString() string {
	if o == nil || IsNil(o.VectorString) {
		var ret string
		return ret
	}
	return *o.VectorString
}

// GetVectorStringOk returns a tuple with the VectorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetVectorStringOk() (*string, bool) {
	if o == nil || IsNil(o.VectorString) {
		return nil, false
	}
	return o.VectorString, true
}

// HasVectorString returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasVectorString() bool {
	if o != nil && !IsNil(o.VectorString) {
		return true
	}

	return false
}

// SetVectorString gets a reference to the given string and assigns it to the VectorString field.
func (o *ApiNVD20TemporalCVSSV3) SetVectorString(v string) {
	o.VectorString = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApiNVD20TemporalCVSSV3) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20TemporalCVSSV3) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApiNVD20TemporalCVSSV3) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ApiNVD20TemporalCVSSV3) SetVersion(v string) {
	o.Version = &v
}

func (o ApiNVD20TemporalCVSSV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNVD20TemporalCVSSV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssociatedBaseMetricV3) {
		toSerialize["associatedBaseMetricV3"] = o.AssociatedBaseMetricV3
	}
	if !IsNil(o.ExploitCodeMaturity) {
		toSerialize["exploitCodeMaturity"] = o.ExploitCodeMaturity
	}
	if !IsNil(o.RemediationLevel) {
		toSerialize["remediationLevel"] = o.RemediationLevel
	}
	if !IsNil(o.ReportConfidence) {
		toSerialize["reportConfidence"] = o.ReportConfidence
	}
	if !IsNil(o.TemporalScore) {
		toSerialize["temporalScore"] = o.TemporalScore
	}
	if !IsNil(o.VectorString) {
		toSerialize["vectorString"] = o.VectorString
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableApiNVD20TemporalCVSSV3 struct {
	value *ApiNVD20TemporalCVSSV3
	isSet bool
}

func (v NullableApiNVD20TemporalCVSSV3) Get() *ApiNVD20TemporalCVSSV3 {
	return v.value
}

func (v *NullableApiNVD20TemporalCVSSV3) Set(val *ApiNVD20TemporalCVSSV3) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNVD20TemporalCVSSV3) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNVD20TemporalCVSSV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNVD20TemporalCVSSV3(val *ApiNVD20TemporalCVSSV3) *NullableApiNVD20TemporalCVSSV3 {
	return &NullableApiNVD20TemporalCVSSV3{value: val, isSet: true}
}

func (v NullableApiNVD20TemporalCVSSV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNVD20TemporalCVSSV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


