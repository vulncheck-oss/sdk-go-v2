/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryJVN type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryJVN{}

// AdvisoryJVN struct for AdvisoryJVN
type AdvisoryJVN struct {
	AffectedEn *string `json:"affected_en,omitempty"`
	AffectedJa *string `json:"affected_ja,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DescriptionEn *string `json:"description_en,omitempty"`
	DescriptionJa *string `json:"description_ja,omitempty"`
	Id *string `json:"id,omitempty"`
	References []string `json:"references,omitempty"`
	SolutionEn *string `json:"solution_en,omitempty"`
	SolutionJa *string `json:"solution_ja,omitempty"`
	SummaryEn *string `json:"summary_en,omitempty"`
	SummaryJa *string `json:"summary_ja,omitempty"`
	TitleEn *string `json:"title_en,omitempty"`
	TitleJa *string `json:"title_ja,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryJVN instantiates a new AdvisoryJVN object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryJVN() *AdvisoryJVN {
	this := AdvisoryJVN{}
	return &this
}

// NewAdvisoryJVNWithDefaults instantiates a new AdvisoryJVN object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryJVNWithDefaults() *AdvisoryJVN {
	this := AdvisoryJVN{}
	return &this
}

// GetAffectedEn returns the AffectedEn field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetAffectedEn() string {
	if o == nil || IsNil(o.AffectedEn) {
		var ret string
		return ret
	}
	return *o.AffectedEn
}

// GetAffectedEnOk returns a tuple with the AffectedEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetAffectedEnOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedEn) {
		return nil, false
	}
	return o.AffectedEn, true
}

// HasAffectedEn returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasAffectedEn() bool {
	if o != nil && !IsNil(o.AffectedEn) {
		return true
	}

	return false
}

// SetAffectedEn gets a reference to the given string and assigns it to the AffectedEn field.
func (o *AdvisoryJVN) SetAffectedEn(v string) {
	o.AffectedEn = &v
}

// GetAffectedJa returns the AffectedJa field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetAffectedJa() string {
	if o == nil || IsNil(o.AffectedJa) {
		var ret string
		return ret
	}
	return *o.AffectedJa
}

// GetAffectedJaOk returns a tuple with the AffectedJa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetAffectedJaOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedJa) {
		return nil, false
	}
	return o.AffectedJa, true
}

// HasAffectedJa returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasAffectedJa() bool {
	if o != nil && !IsNil(o.AffectedJa) {
		return true
	}

	return false
}

// SetAffectedJa gets a reference to the given string and assigns it to the AffectedJa field.
func (o *AdvisoryJVN) SetAffectedJa(v string) {
	o.AffectedJa = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryJVN) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryJVN) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescriptionEn returns the DescriptionEn field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetDescriptionEn() string {
	if o == nil || IsNil(o.DescriptionEn) {
		var ret string
		return ret
	}
	return *o.DescriptionEn
}

// GetDescriptionEnOk returns a tuple with the DescriptionEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetDescriptionEnOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionEn) {
		return nil, false
	}
	return o.DescriptionEn, true
}

// HasDescriptionEn returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasDescriptionEn() bool {
	if o != nil && !IsNil(o.DescriptionEn) {
		return true
	}

	return false
}

// SetDescriptionEn gets a reference to the given string and assigns it to the DescriptionEn field.
func (o *AdvisoryJVN) SetDescriptionEn(v string) {
	o.DescriptionEn = &v
}

// GetDescriptionJa returns the DescriptionJa field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetDescriptionJa() string {
	if o == nil || IsNil(o.DescriptionJa) {
		var ret string
		return ret
	}
	return *o.DescriptionJa
}

// GetDescriptionJaOk returns a tuple with the DescriptionJa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetDescriptionJaOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionJa) {
		return nil, false
	}
	return o.DescriptionJa, true
}

// HasDescriptionJa returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasDescriptionJa() bool {
	if o != nil && !IsNil(o.DescriptionJa) {
		return true
	}

	return false
}

// SetDescriptionJa gets a reference to the given string and assigns it to the DescriptionJa field.
func (o *AdvisoryJVN) SetDescriptionJa(v string) {
	o.DescriptionJa = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvisoryJVN) SetId(v string) {
	o.Id = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryJVN) SetReferences(v []string) {
	o.References = v
}

// GetSolutionEn returns the SolutionEn field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetSolutionEn() string {
	if o == nil || IsNil(o.SolutionEn) {
		var ret string
		return ret
	}
	return *o.SolutionEn
}

// GetSolutionEnOk returns a tuple with the SolutionEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetSolutionEnOk() (*string, bool) {
	if o == nil || IsNil(o.SolutionEn) {
		return nil, false
	}
	return o.SolutionEn, true
}

// HasSolutionEn returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasSolutionEn() bool {
	if o != nil && !IsNil(o.SolutionEn) {
		return true
	}

	return false
}

// SetSolutionEn gets a reference to the given string and assigns it to the SolutionEn field.
func (o *AdvisoryJVN) SetSolutionEn(v string) {
	o.SolutionEn = &v
}

// GetSolutionJa returns the SolutionJa field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetSolutionJa() string {
	if o == nil || IsNil(o.SolutionJa) {
		var ret string
		return ret
	}
	return *o.SolutionJa
}

// GetSolutionJaOk returns a tuple with the SolutionJa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetSolutionJaOk() (*string, bool) {
	if o == nil || IsNil(o.SolutionJa) {
		return nil, false
	}
	return o.SolutionJa, true
}

// HasSolutionJa returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasSolutionJa() bool {
	if o != nil && !IsNil(o.SolutionJa) {
		return true
	}

	return false
}

// SetSolutionJa gets a reference to the given string and assigns it to the SolutionJa field.
func (o *AdvisoryJVN) SetSolutionJa(v string) {
	o.SolutionJa = &v
}

// GetSummaryEn returns the SummaryEn field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetSummaryEn() string {
	if o == nil || IsNil(o.SummaryEn) {
		var ret string
		return ret
	}
	return *o.SummaryEn
}

// GetSummaryEnOk returns a tuple with the SummaryEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetSummaryEnOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryEn) {
		return nil, false
	}
	return o.SummaryEn, true
}

// HasSummaryEn returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasSummaryEn() bool {
	if o != nil && !IsNil(o.SummaryEn) {
		return true
	}

	return false
}

// SetSummaryEn gets a reference to the given string and assigns it to the SummaryEn field.
func (o *AdvisoryJVN) SetSummaryEn(v string) {
	o.SummaryEn = &v
}

// GetSummaryJa returns the SummaryJa field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetSummaryJa() string {
	if o == nil || IsNil(o.SummaryJa) {
		var ret string
		return ret
	}
	return *o.SummaryJa
}

// GetSummaryJaOk returns a tuple with the SummaryJa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetSummaryJaOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryJa) {
		return nil, false
	}
	return o.SummaryJa, true
}

// HasSummaryJa returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasSummaryJa() bool {
	if o != nil && !IsNil(o.SummaryJa) {
		return true
	}

	return false
}

// SetSummaryJa gets a reference to the given string and assigns it to the SummaryJa field.
func (o *AdvisoryJVN) SetSummaryJa(v string) {
	o.SummaryJa = &v
}

// GetTitleEn returns the TitleEn field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetTitleEn() string {
	if o == nil || IsNil(o.TitleEn) {
		var ret string
		return ret
	}
	return *o.TitleEn
}

// GetTitleEnOk returns a tuple with the TitleEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetTitleEnOk() (*string, bool) {
	if o == nil || IsNil(o.TitleEn) {
		return nil, false
	}
	return o.TitleEn, true
}

// HasTitleEn returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasTitleEn() bool {
	if o != nil && !IsNil(o.TitleEn) {
		return true
	}

	return false
}

// SetTitleEn gets a reference to the given string and assigns it to the TitleEn field.
func (o *AdvisoryJVN) SetTitleEn(v string) {
	o.TitleEn = &v
}

// GetTitleJa returns the TitleJa field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetTitleJa() string {
	if o == nil || IsNil(o.TitleJa) {
		var ret string
		return ret
	}
	return *o.TitleJa
}

// GetTitleJaOk returns a tuple with the TitleJa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetTitleJaOk() (*string, bool) {
	if o == nil || IsNil(o.TitleJa) {
		return nil, false
	}
	return o.TitleJa, true
}

// HasTitleJa returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasTitleJa() bool {
	if o != nil && !IsNil(o.TitleJa) {
		return true
	}

	return false
}

// SetTitleJa gets a reference to the given string and assigns it to the TitleJa field.
func (o *AdvisoryJVN) SetTitleJa(v string) {
	o.TitleJa = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryJVN) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryJVN) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJVN) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryJVN) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryJVN) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryJVN) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryJVN) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedEn) {
		toSerialize["affected_en"] = o.AffectedEn
	}
	if !IsNil(o.AffectedJa) {
		toSerialize["affected_ja"] = o.AffectedJa
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DescriptionEn) {
		toSerialize["description_en"] = o.DescriptionEn
	}
	if !IsNil(o.DescriptionJa) {
		toSerialize["description_ja"] = o.DescriptionJa
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.SolutionEn) {
		toSerialize["solution_en"] = o.SolutionEn
	}
	if !IsNil(o.SolutionJa) {
		toSerialize["solution_ja"] = o.SolutionJa
	}
	if !IsNil(o.SummaryEn) {
		toSerialize["summary_en"] = o.SummaryEn
	}
	if !IsNil(o.SummaryJa) {
		toSerialize["summary_ja"] = o.SummaryJa
	}
	if !IsNil(o.TitleEn) {
		toSerialize["title_en"] = o.TitleEn
	}
	if !IsNil(o.TitleJa) {
		toSerialize["title_ja"] = o.TitleJa
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryJVN struct {
	value *AdvisoryJVN
	isSet bool
}

func (v NullableAdvisoryJVN) Get() *AdvisoryJVN {
	return v.value
}

func (v *NullableAdvisoryJVN) Set(val *AdvisoryJVN) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryJVN) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryJVN) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryJVN(val *AdvisoryJVN) *NullableAdvisoryJVN {
	return &NullableAdvisoryJVN{value: val, isSet: true}
}

func (v NullableAdvisoryJVN) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryJVN) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


