/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMContainers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMContainers{}

// AdvisoryMContainers struct for AdvisoryMContainers
type AdvisoryMContainers struct {
	Adp []AdvisoryADPContainer `json:"adp,omitempty"`
	Cna *AdvisoryMCna `json:"cna,omitempty"`
}

// NewAdvisoryMContainers instantiates a new AdvisoryMContainers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMContainers() *AdvisoryMContainers {
	this := AdvisoryMContainers{}
	return &this
}

// NewAdvisoryMContainersWithDefaults instantiates a new AdvisoryMContainers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMContainersWithDefaults() *AdvisoryMContainers {
	this := AdvisoryMContainers{}
	return &this
}

// GetAdp returns the Adp field value if set, zero value otherwise.
func (o *AdvisoryMContainers) GetAdp() []AdvisoryADPContainer {
	if o == nil || IsNil(o.Adp) {
		var ret []AdvisoryADPContainer
		return ret
	}
	return o.Adp
}

// GetAdpOk returns a tuple with the Adp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMContainers) GetAdpOk() ([]AdvisoryADPContainer, bool) {
	if o == nil || IsNil(o.Adp) {
		return nil, false
	}
	return o.Adp, true
}

// HasAdp returns a boolean if a field has been set.
func (o *AdvisoryMContainers) HasAdp() bool {
	if o != nil && !IsNil(o.Adp) {
		return true
	}

	return false
}

// SetAdp gets a reference to the given []AdvisoryADPContainer and assigns it to the Adp field.
func (o *AdvisoryMContainers) SetAdp(v []AdvisoryADPContainer) {
	o.Adp = v
}

// GetCna returns the Cna field value if set, zero value otherwise.
func (o *AdvisoryMContainers) GetCna() AdvisoryMCna {
	if o == nil || IsNil(o.Cna) {
		var ret AdvisoryMCna
		return ret
	}
	return *o.Cna
}

// GetCnaOk returns a tuple with the Cna field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMContainers) GetCnaOk() (*AdvisoryMCna, bool) {
	if o == nil || IsNil(o.Cna) {
		return nil, false
	}
	return o.Cna, true
}

// HasCna returns a boolean if a field has been set.
func (o *AdvisoryMContainers) HasCna() bool {
	if o != nil && !IsNil(o.Cna) {
		return true
	}

	return false
}

// SetCna gets a reference to the given AdvisoryMCna and assigns it to the Cna field.
func (o *AdvisoryMContainers) SetCna(v AdvisoryMCna) {
	o.Cna = &v
}

func (o AdvisoryMContainers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMContainers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adp) {
		toSerialize["adp"] = o.Adp
	}
	if !IsNil(o.Cna) {
		toSerialize["cna"] = o.Cna
	}
	return toSerialize, nil
}

type NullableAdvisoryMContainers struct {
	value *AdvisoryMContainers
	isSet bool
}

func (v NullableAdvisoryMContainers) Get() *AdvisoryMContainers {
	return v.value
}

func (v *NullableAdvisoryMContainers) Set(val *AdvisoryMContainers) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMContainers) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMContainers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMContainers(val *AdvisoryMContainers) *NullableAdvisoryMContainers {
	return &NullableAdvisoryMContainers{value: val, isSet: true}
}

func (v NullableAdvisoryMContainers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMContainers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


