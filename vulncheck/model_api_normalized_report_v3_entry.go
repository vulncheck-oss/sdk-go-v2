/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNormalizedReportV3Entry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNormalizedReportV3Entry{}

// ApiNormalizedReportV3Entry struct for ApiNormalizedReportV3Entry
type ApiNormalizedReportV3Entry struct {
	DateAdded *string `json:"date_added,omitempty"`
	Name *string `json:"name,omitempty"`
	Refsource *string `json:"refsource,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewApiNormalizedReportV3Entry instantiates a new ApiNormalizedReportV3Entry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNormalizedReportV3Entry() *ApiNormalizedReportV3Entry {
	this := ApiNormalizedReportV3Entry{}
	return &this
}

// NewApiNormalizedReportV3EntryWithDefaults instantiates a new ApiNormalizedReportV3Entry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNormalizedReportV3EntryWithDefaults() *ApiNormalizedReportV3Entry {
	this := ApiNormalizedReportV3Entry{}
	return &this
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *ApiNormalizedReportV3Entry) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedReportV3Entry) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *ApiNormalizedReportV3Entry) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *ApiNormalizedReportV3Entry) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiNormalizedReportV3Entry) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedReportV3Entry) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiNormalizedReportV3Entry) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiNormalizedReportV3Entry) SetName(v string) {
	o.Name = &v
}

// GetRefsource returns the Refsource field value if set, zero value otherwise.
func (o *ApiNormalizedReportV3Entry) GetRefsource() string {
	if o == nil || IsNil(o.Refsource) {
		var ret string
		return ret
	}
	return *o.Refsource
}

// GetRefsourceOk returns a tuple with the Refsource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedReportV3Entry) GetRefsourceOk() (*string, bool) {
	if o == nil || IsNil(o.Refsource) {
		return nil, false
	}
	return o.Refsource, true
}

// HasRefsource returns a boolean if a field has been set.
func (o *ApiNormalizedReportV3Entry) HasRefsource() bool {
	if o != nil && !IsNil(o.Refsource) {
		return true
	}

	return false
}

// SetRefsource gets a reference to the given string and assigns it to the Refsource field.
func (o *ApiNormalizedReportV3Entry) SetRefsource(v string) {
	o.Refsource = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApiNormalizedReportV3Entry) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNormalizedReportV3Entry) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApiNormalizedReportV3Entry) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApiNormalizedReportV3Entry) SetUrl(v string) {
	o.Url = &v
}

func (o ApiNormalizedReportV3Entry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNormalizedReportV3Entry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Refsource) {
		toSerialize["refsource"] = o.Refsource
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableApiNormalizedReportV3Entry struct {
	value *ApiNormalizedReportV3Entry
	isSet bool
}

func (v NullableApiNormalizedReportV3Entry) Get() *ApiNormalizedReportV3Entry {
	return v.value
}

func (v *NullableApiNormalizedReportV3Entry) Set(val *ApiNormalizedReportV3Entry) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNormalizedReportV3Entry) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNormalizedReportV3Entry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNormalizedReportV3Entry(val *ApiNormalizedReportV3Entry) *NullableApiNormalizedReportV3Entry {
	return &NullableApiNormalizedReportV3Entry{value: val, isSet: true}
}

func (v NullableApiNormalizedReportV3Entry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNormalizedReportV3Entry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


