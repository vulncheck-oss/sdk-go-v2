/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryPyPAAffected type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryPyPAAffected{}

// AdvisoryPyPAAffected struct for AdvisoryPyPAAffected
type AdvisoryPyPAAffected struct {
	Package *AdvisoryPyPAPackage `json:"package,omitempty"`
	Ranges []AdvisoryPyPARange `json:"ranges,omitempty"`
	Versions []string `json:"versions,omitempty"`
}

// NewAdvisoryPyPAAffected instantiates a new AdvisoryPyPAAffected object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryPyPAAffected() *AdvisoryPyPAAffected {
	this := AdvisoryPyPAAffected{}
	return &this
}

// NewAdvisoryPyPAAffectedWithDefaults instantiates a new AdvisoryPyPAAffected object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryPyPAAffectedWithDefaults() *AdvisoryPyPAAffected {
	this := AdvisoryPyPAAffected{}
	return &this
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *AdvisoryPyPAAffected) GetPackage() AdvisoryPyPAPackage {
	if o == nil || IsNil(o.Package) {
		var ret AdvisoryPyPAPackage
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPyPAAffected) GetPackageOk() (*AdvisoryPyPAPackage, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *AdvisoryPyPAAffected) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given AdvisoryPyPAPackage and assigns it to the Package field.
func (o *AdvisoryPyPAAffected) SetPackage(v AdvisoryPyPAPackage) {
	o.Package = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *AdvisoryPyPAAffected) GetRanges() []AdvisoryPyPARange {
	if o == nil || IsNil(o.Ranges) {
		var ret []AdvisoryPyPARange
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPyPAAffected) GetRangesOk() ([]AdvisoryPyPARange, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *AdvisoryPyPAAffected) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []AdvisoryPyPARange and assigns it to the Ranges field.
func (o *AdvisoryPyPAAffected) SetRanges(v []AdvisoryPyPARange) {
	o.Ranges = v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *AdvisoryPyPAAffected) GetVersions() []string {
	if o == nil || IsNil(o.Versions) {
		var ret []string
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryPyPAAffected) GetVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *AdvisoryPyPAAffected) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []string and assigns it to the Versions field.
func (o *AdvisoryPyPAAffected) SetVersions(v []string) {
	o.Versions = v
}

func (o AdvisoryPyPAAffected) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryPyPAAffected) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableAdvisoryPyPAAffected struct {
	value *AdvisoryPyPAAffected
	isSet bool
}

func (v NullableAdvisoryPyPAAffected) Get() *AdvisoryPyPAAffected {
	return v.value
}

func (v *NullableAdvisoryPyPAAffected) Set(val *AdvisoryPyPAAffected) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryPyPAAffected) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryPyPAAffected) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryPyPAAffected(val *AdvisoryPyPAAffected) *NullableAdvisoryPyPAAffected {
	return &NullableAdvisoryPyPAAffected{value: val, isSet: true}
}

func (v NullableAdvisoryPyPAAffected) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryPyPAAffected) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


