/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCoreImpactExploit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCoreImpactExploit{}

// AdvisoryCoreImpactExploit struct for AdvisoryCoreImpactExploit
type AdvisoryCoreImpactExploit struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	ExploitType *string `json:"exploit_type,omitempty"`
	Platform *string `json:"platform,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisoryCoreImpactExploit instantiates a new AdvisoryCoreImpactExploit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCoreImpactExploit() *AdvisoryCoreImpactExploit {
	this := AdvisoryCoreImpactExploit{}
	return &this
}

// NewAdvisoryCoreImpactExploitWithDefaults instantiates a new AdvisoryCoreImpactExploit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCoreImpactExploitWithDefaults() *AdvisoryCoreImpactExploit {
	this := AdvisoryCoreImpactExploit{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCoreImpactExploit) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCoreImpactExploit) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCoreImpactExploit) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCoreImpactExploit) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCoreImpactExploit) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCoreImpactExploit) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCoreImpactExploit) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCoreImpactExploit) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetExploitType returns the ExploitType field value if set, zero value otherwise.
func (o *AdvisoryCoreImpactExploit) GetExploitType() string {
	if o == nil || IsNil(o.ExploitType) {
		var ret string
		return ret
	}
	return *o.ExploitType
}

// GetExploitTypeOk returns a tuple with the ExploitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCoreImpactExploit) GetExploitTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitType) {
		return nil, false
	}
	return o.ExploitType, true
}

// HasExploitType returns a boolean if a field has been set.
func (o *AdvisoryCoreImpactExploit) HasExploitType() bool {
	if o != nil && !IsNil(o.ExploitType) {
		return true
	}

	return false
}

// SetExploitType gets a reference to the given string and assigns it to the ExploitType field.
func (o *AdvisoryCoreImpactExploit) SetExploitType(v string) {
	o.ExploitType = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *AdvisoryCoreImpactExploit) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCoreImpactExploit) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *AdvisoryCoreImpactExploit) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *AdvisoryCoreImpactExploit) SetPlatform(v string) {
	o.Platform = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryCoreImpactExploit) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCoreImpactExploit) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryCoreImpactExploit) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryCoreImpactExploit) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisoryCoreImpactExploit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCoreImpactExploit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.ExploitType) {
		toSerialize["exploit_type"] = o.ExploitType
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisoryCoreImpactExploit struct {
	value *AdvisoryCoreImpactExploit
	isSet bool
}

func (v NullableAdvisoryCoreImpactExploit) Get() *AdvisoryCoreImpactExploit {
	return v.value
}

func (v *NullableAdvisoryCoreImpactExploit) Set(val *AdvisoryCoreImpactExploit) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCoreImpactExploit) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCoreImpactExploit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCoreImpactExploit(val *AdvisoryCoreImpactExploit) *NullableAdvisoryCoreImpactExploit {
	return &NullableAdvisoryCoreImpactExploit{value: val, isSet: true}
}

func (v NullableAdvisoryCoreImpactExploit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCoreImpactExploit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


