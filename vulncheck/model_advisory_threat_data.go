/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryThreatData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryThreatData{}

// AdvisoryThreatData struct for AdvisoryThreatData
type AdvisoryThreatData struct {
	Category *string `json:"category,omitempty"`
	Details *string `json:"details,omitempty"`
	ProductIds []string `json:"product_ids,omitempty"`
}

// NewAdvisoryThreatData instantiates a new AdvisoryThreatData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryThreatData() *AdvisoryThreatData {
	this := AdvisoryThreatData{}
	return &this
}

// NewAdvisoryThreatDataWithDefaults instantiates a new AdvisoryThreatData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryThreatDataWithDefaults() *AdvisoryThreatData {
	this := AdvisoryThreatData{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisoryThreatData) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatData) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisoryThreatData) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisoryThreatData) SetCategory(v string) {
	o.Category = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AdvisoryThreatData) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatData) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *AdvisoryThreatData) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *AdvisoryThreatData) SetDetails(v string) {
	o.Details = &v
}

// GetProductIds returns the ProductIds field value if set, zero value otherwise.
func (o *AdvisoryThreatData) GetProductIds() []string {
	if o == nil || IsNil(o.ProductIds) {
		var ret []string
		return ret
	}
	return o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatData) GetProductIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductIds) {
		return nil, false
	}
	return o.ProductIds, true
}

// HasProductIds returns a boolean if a field has been set.
func (o *AdvisoryThreatData) HasProductIds() bool {
	if o != nil && !IsNil(o.ProductIds) {
		return true
	}

	return false
}

// SetProductIds gets a reference to the given []string and assigns it to the ProductIds field.
func (o *AdvisoryThreatData) SetProductIds(v []string) {
	o.ProductIds = v
}

func (o AdvisoryThreatData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryThreatData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.ProductIds) {
		toSerialize["product_ids"] = o.ProductIds
	}
	return toSerialize, nil
}

type NullableAdvisoryThreatData struct {
	value *AdvisoryThreatData
	isSet bool
}

func (v NullableAdvisoryThreatData) Get() *AdvisoryThreatData {
	return v.value
}

func (v *NullableAdvisoryThreatData) Set(val *AdvisoryThreatData) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryThreatData) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryThreatData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryThreatData(val *AdvisoryThreatData) *NullableAdvisoryThreatData {
	return &NullableAdvisoryThreatData{value: val, isSet: true}
}

func (v NullableAdvisoryThreatData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryThreatData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


