/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryLenovo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryLenovo{}

// AdvisoryLenovo struct for AdvisoryLenovo
type AdvisoryLenovo struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	IndustryIdentifiers []string `json:"industry_identifiers,omitempty"`
	LastUpdated *string `json:"last_updated,omitempty"`
	LenovoId *string `json:"lenovo_id,omitempty"`
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryLenovo instantiates a new AdvisoryLenovo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryLenovo() *AdvisoryLenovo {
	this := AdvisoryLenovo{}
	return &this
}

// NewAdvisoryLenovoWithDefaults instantiates a new AdvisoryLenovo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryLenovoWithDefaults() *AdvisoryLenovo {
	this := AdvisoryLenovo{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryLenovo) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryLenovo) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetIndustryIdentifiers returns the IndustryIdentifiers field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetIndustryIdentifiers() []string {
	if o == nil || IsNil(o.IndustryIdentifiers) {
		var ret []string
		return ret
	}
	return o.IndustryIdentifiers
}

// GetIndustryIdentifiersOk returns a tuple with the IndustryIdentifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetIndustryIdentifiersOk() ([]string, bool) {
	if o == nil || IsNil(o.IndustryIdentifiers) {
		return nil, false
	}
	return o.IndustryIdentifiers, true
}

// HasIndustryIdentifiers returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasIndustryIdentifiers() bool {
	if o != nil && !IsNil(o.IndustryIdentifiers) {
		return true
	}

	return false
}

// SetIndustryIdentifiers gets a reference to the given []string and assigns it to the IndustryIdentifiers field.
func (o *AdvisoryLenovo) SetIndustryIdentifiers(v []string) {
	o.IndustryIdentifiers = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *AdvisoryLenovo) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetLenovoId returns the LenovoId field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetLenovoId() string {
	if o == nil || IsNil(o.LenovoId) {
		var ret string
		return ret
	}
	return *o.LenovoId
}

// GetLenovoIdOk returns a tuple with the LenovoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetLenovoIdOk() (*string, bool) {
	if o == nil || IsNil(o.LenovoId) {
		return nil, false
	}
	return o.LenovoId, true
}

// HasLenovoId returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasLenovoId() bool {
	if o != nil && !IsNil(o.LenovoId) {
		return true
	}

	return false
}

// SetLenovoId gets a reference to the given string and assigns it to the LenovoId field.
func (o *AdvisoryLenovo) SetLenovoId(v string) {
	o.LenovoId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryLenovo) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryLenovo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryLenovo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryLenovo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryLenovo) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryLenovo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryLenovo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.IndustryIdentifiers) {
		toSerialize["industry_identifiers"] = o.IndustryIdentifiers
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if !IsNil(o.LenovoId) {
		toSerialize["lenovo_id"] = o.LenovoId
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryLenovo struct {
	value *AdvisoryLenovo
	isSet bool
}

func (v NullableAdvisoryLenovo) Get() *AdvisoryLenovo {
	return v.value
}

func (v *NullableAdvisoryLenovo) Set(val *AdvisoryLenovo) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryLenovo) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryLenovo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryLenovo(val *AdvisoryLenovo) *NullableAdvisoryLenovo {
	return &NullableAdvisoryLenovo{value: val, isSet: true}
}

func (v NullableAdvisoryLenovo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryLenovo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


