/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySoftwareUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySoftwareUpdate{}

// AdvisorySoftwareUpdate struct for AdvisorySoftwareUpdate
type AdvisorySoftwareUpdate struct {
	AffectedVersion *string `json:"affectedVersion,omitempty"`
	Cves []string `json:"cves,omitempty"`
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	SoftwareProduct *string `json:"softwareProduct,omitempty"`
	UpdatedVersion *string `json:"updatedVersion,omitempty"`
}

// NewAdvisorySoftwareUpdate instantiates a new AdvisorySoftwareUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySoftwareUpdate() *AdvisorySoftwareUpdate {
	this := AdvisorySoftwareUpdate{}
	return &this
}

// NewAdvisorySoftwareUpdateWithDefaults instantiates a new AdvisorySoftwareUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySoftwareUpdateWithDefaults() *AdvisorySoftwareUpdate {
	this := AdvisorySoftwareUpdate{}
	return &this
}

// GetAffectedVersion returns the AffectedVersion field value if set, zero value otherwise.
func (o *AdvisorySoftwareUpdate) GetAffectedVersion() string {
	if o == nil || IsNil(o.AffectedVersion) {
		var ret string
		return ret
	}
	return *o.AffectedVersion
}

// GetAffectedVersionOk returns a tuple with the AffectedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySoftwareUpdate) GetAffectedVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedVersion) {
		return nil, false
	}
	return o.AffectedVersion, true
}

// HasAffectedVersion returns a boolean if a field has been set.
func (o *AdvisorySoftwareUpdate) HasAffectedVersion() bool {
	if o != nil && !IsNil(o.AffectedVersion) {
		return true
	}

	return false
}

// SetAffectedVersion gets a reference to the given string and assigns it to the AffectedVersion field.
func (o *AdvisorySoftwareUpdate) SetAffectedVersion(v string) {
	o.AffectedVersion = &v
}

// GetCves returns the Cves field value if set, zero value otherwise.
func (o *AdvisorySoftwareUpdate) GetCves() []string {
	if o == nil || IsNil(o.Cves) {
		var ret []string
		return ret
	}
	return o.Cves
}

// GetCvesOk returns a tuple with the Cves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySoftwareUpdate) GetCvesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cves) {
		return nil, false
	}
	return o.Cves, true
}

// HasCves returns a boolean if a field has been set.
func (o *AdvisorySoftwareUpdate) HasCves() bool {
	if o != nil && !IsNil(o.Cves) {
		return true
	}

	return false
}

// SetCves gets a reference to the given []string and assigns it to the Cves field.
func (o *AdvisorySoftwareUpdate) SetCves(v []string) {
	o.Cves = v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *AdvisorySoftwareUpdate) GetOperatingSystem() string {
	if o == nil || IsNil(o.OperatingSystem) {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySoftwareUpdate) GetOperatingSystemOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *AdvisorySoftwareUpdate) HasOperatingSystem() bool {
	if o != nil && !IsNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *AdvisorySoftwareUpdate) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetSoftwareProduct returns the SoftwareProduct field value if set, zero value otherwise.
func (o *AdvisorySoftwareUpdate) GetSoftwareProduct() string {
	if o == nil || IsNil(o.SoftwareProduct) {
		var ret string
		return ret
	}
	return *o.SoftwareProduct
}

// GetSoftwareProductOk returns a tuple with the SoftwareProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySoftwareUpdate) GetSoftwareProductOk() (*string, bool) {
	if o == nil || IsNil(o.SoftwareProduct) {
		return nil, false
	}
	return o.SoftwareProduct, true
}

// HasSoftwareProduct returns a boolean if a field has been set.
func (o *AdvisorySoftwareUpdate) HasSoftwareProduct() bool {
	if o != nil && !IsNil(o.SoftwareProduct) {
		return true
	}

	return false
}

// SetSoftwareProduct gets a reference to the given string and assigns it to the SoftwareProduct field.
func (o *AdvisorySoftwareUpdate) SetSoftwareProduct(v string) {
	o.SoftwareProduct = &v
}

// GetUpdatedVersion returns the UpdatedVersion field value if set, zero value otherwise.
func (o *AdvisorySoftwareUpdate) GetUpdatedVersion() string {
	if o == nil || IsNil(o.UpdatedVersion) {
		var ret string
		return ret
	}
	return *o.UpdatedVersion
}

// GetUpdatedVersionOk returns a tuple with the UpdatedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySoftwareUpdate) GetUpdatedVersionOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedVersion) {
		return nil, false
	}
	return o.UpdatedVersion, true
}

// HasUpdatedVersion returns a boolean if a field has been set.
func (o *AdvisorySoftwareUpdate) HasUpdatedVersion() bool {
	if o != nil && !IsNil(o.UpdatedVersion) {
		return true
	}

	return false
}

// SetUpdatedVersion gets a reference to the given string and assigns it to the UpdatedVersion field.
func (o *AdvisorySoftwareUpdate) SetUpdatedVersion(v string) {
	o.UpdatedVersion = &v
}

func (o AdvisorySoftwareUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySoftwareUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedVersion) {
		toSerialize["affectedVersion"] = o.AffectedVersion
	}
	if !IsNil(o.Cves) {
		toSerialize["cves"] = o.Cves
	}
	if !IsNil(o.OperatingSystem) {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if !IsNil(o.SoftwareProduct) {
		toSerialize["softwareProduct"] = o.SoftwareProduct
	}
	if !IsNil(o.UpdatedVersion) {
		toSerialize["updatedVersion"] = o.UpdatedVersion
	}
	return toSerialize, nil
}

type NullableAdvisorySoftwareUpdate struct {
	value *AdvisorySoftwareUpdate
	isSet bool
}

func (v NullableAdvisorySoftwareUpdate) Get() *AdvisorySoftwareUpdate {
	return v.value
}

func (v *NullableAdvisorySoftwareUpdate) Set(val *AdvisorySoftwareUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySoftwareUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySoftwareUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySoftwareUpdate(val *AdvisorySoftwareUpdate) *NullableAdvisorySoftwareUpdate {
	return &NullableAdvisorySoftwareUpdate{value: val, isSet: true}
}

func (v NullableAdvisorySoftwareUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySoftwareUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


