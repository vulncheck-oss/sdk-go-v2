/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySeverity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySeverity{}

// AdvisorySeverity struct for AdvisorySeverity
type AdvisorySeverity struct {
	Score *string `json:"score,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewAdvisorySeverity instantiates a new AdvisorySeverity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySeverity() *AdvisorySeverity {
	this := AdvisorySeverity{}
	return &this
}

// NewAdvisorySeverityWithDefaults instantiates a new AdvisorySeverity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySeverityWithDefaults() *AdvisorySeverity {
	this := AdvisorySeverity{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *AdvisorySeverity) GetScore() string {
	if o == nil || IsNil(o.Score) {
		var ret string
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeverity) GetScoreOk() (*string, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *AdvisorySeverity) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given string and assigns it to the Score field.
func (o *AdvisorySeverity) SetScore(v string) {
	o.Score = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisorySeverity) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeverity) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisorySeverity) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisorySeverity) SetType(v string) {
	o.Type = &v
}

func (o AdvisorySeverity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySeverity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAdvisorySeverity struct {
	value *AdvisorySeverity
	isSet bool
}

func (v NullableAdvisorySeverity) Get() *AdvisorySeverity {
	return v.value
}

func (v *NullableAdvisorySeverity) Set(val *AdvisorySeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySeverity(val *AdvisorySeverity) *NullableAdvisorySeverity {
	return &NullableAdvisorySeverity{value: val, isSet: true}
}

func (v NullableAdvisorySeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


