/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryGEHealthcareAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryGEHealthcareAdvisory{}

// AdvisoryGEHealthcareAdvisory struct for AdvisoryGEHealthcareAdvisory
type AdvisoryGEHealthcareAdvisory struct {
	BaseScore *string `json:"base_score,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DateLastUpdated *string `json:"date_last_updated,omitempty"`
	Description *string `json:"description,omitempty"`
	References []string `json:"references,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryGEHealthcareAdvisory instantiates a new AdvisoryGEHealthcareAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryGEHealthcareAdvisory() *AdvisoryGEHealthcareAdvisory {
	this := AdvisoryGEHealthcareAdvisory{}
	return &this
}

// NewAdvisoryGEHealthcareAdvisoryWithDefaults instantiates a new AdvisoryGEHealthcareAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryGEHealthcareAdvisoryWithDefaults() *AdvisoryGEHealthcareAdvisory {
	this := AdvisoryGEHealthcareAdvisory{}
	return &this
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetBaseScore() string {
	if o == nil || IsNil(o.BaseScore) {
		var ret string
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetBaseScoreOk() (*string, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given string and assigns it to the BaseScore field.
func (o *AdvisoryGEHealthcareAdvisory) SetBaseScore(v string) {
	o.BaseScore = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryGEHealthcareAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryGEHealthcareAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDateLastUpdated returns the DateLastUpdated field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetDateLastUpdated() string {
	if o == nil || IsNil(o.DateLastUpdated) {
		var ret string
		return ret
	}
	return *o.DateLastUpdated
}

// GetDateLastUpdatedOk returns a tuple with the DateLastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetDateLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateLastUpdated) {
		return nil, false
	}
	return o.DateLastUpdated, true
}

// HasDateLastUpdated returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasDateLastUpdated() bool {
	if o != nil && !IsNil(o.DateLastUpdated) {
		return true
	}

	return false
}

// SetDateLastUpdated gets a reference to the given string and assigns it to the DateLastUpdated field.
func (o *AdvisoryGEHealthcareAdvisory) SetDateLastUpdated(v string) {
	o.DateLastUpdated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryGEHealthcareAdvisory) SetDescription(v string) {
	o.Description = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryGEHealthcareAdvisory) SetReferences(v []string) {
	o.References = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryGEHealthcareAdvisory) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryGEHealthcareAdvisory) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryGEHealthcareAdvisory) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryGEHealthcareAdvisory) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryGEHealthcareAdvisory) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryGEHealthcareAdvisory) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryGEHealthcareAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryGEHealthcareAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseScore) {
		toSerialize["base_score"] = o.BaseScore
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DateLastUpdated) {
		toSerialize["date_last_updated"] = o.DateLastUpdated
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryGEHealthcareAdvisory struct {
	value *AdvisoryGEHealthcareAdvisory
	isSet bool
}

func (v NullableAdvisoryGEHealthcareAdvisory) Get() *AdvisoryGEHealthcareAdvisory {
	return v.value
}

func (v *NullableAdvisoryGEHealthcareAdvisory) Set(val *AdvisoryGEHealthcareAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryGEHealthcareAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryGEHealthcareAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryGEHealthcareAdvisory(val *AdvisoryGEHealthcareAdvisory) *NullableAdvisoryGEHealthcareAdvisory {
	return &NullableAdvisoryGEHealthcareAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryGEHealthcareAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryGEHealthcareAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


