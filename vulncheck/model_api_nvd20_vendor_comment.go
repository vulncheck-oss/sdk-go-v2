/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNVD20VendorComment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNVD20VendorComment{}

// ApiNVD20VendorComment struct for ApiNVD20VendorComment
type ApiNVD20VendorComment struct {
	Comment *string `json:"comment,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Organization *string `json:"organization,omitempty"`
}

// NewApiNVD20VendorComment instantiates a new ApiNVD20VendorComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNVD20VendorComment() *ApiNVD20VendorComment {
	this := ApiNVD20VendorComment{}
	return &this
}

// NewApiNVD20VendorCommentWithDefaults instantiates a new ApiNVD20VendorComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNVD20VendorCommentWithDefaults() *ApiNVD20VendorComment {
	this := ApiNVD20VendorComment{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApiNVD20VendorComment) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20VendorComment) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApiNVD20VendorComment) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApiNVD20VendorComment) SetComment(v string) {
	o.Comment = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ApiNVD20VendorComment) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20VendorComment) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ApiNVD20VendorComment) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *ApiNVD20VendorComment) SetLastModified(v string) {
	o.LastModified = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *ApiNVD20VendorComment) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20VendorComment) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *ApiNVD20VendorComment) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *ApiNVD20VendorComment) SetOrganization(v string) {
	o.Organization = &v
}

func (o ApiNVD20VendorComment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNVD20VendorComment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	return toSerialize, nil
}

type NullableApiNVD20VendorComment struct {
	value *ApiNVD20VendorComment
	isSet bool
}

func (v NullableApiNVD20VendorComment) Get() *ApiNVD20VendorComment {
	return v.value
}

func (v *NullableApiNVD20VendorComment) Set(val *ApiNVD20VendorComment) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNVD20VendorComment) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNVD20VendorComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNVD20VendorComment(val *ApiNVD20VendorComment) *NullableApiNVD20VendorComment {
	return &NullableApiNVD20VendorComment{value: val, isSet: true}
}

func (v NullableApiNVD20VendorComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNVD20VendorComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


