/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryThreatActorWithExternalObjects type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryThreatActorWithExternalObjects{}

// AdvisoryThreatActorWithExternalObjects struct for AdvisoryThreatActorWithExternalObjects
type AdvisoryThreatActorWithExternalObjects struct {
	Country *string `json:"country,omitempty"`
	CveReferences []AdvisoryCVEReference `json:"cve_references,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	MalpediaUrl *string `json:"malpedia_url,omitempty"`
	MispId *string `json:"misp_id,omitempty"`
	MispThreatActor *AdvisoryMISPValueNoID `json:"misp_threat_actor,omitempty"`
	MitreAttackGroup *AdvisoryMITREAttackGroupNoID `json:"mitre_attack_group,omitempty"`
	MitreGroupCti *AdvisoryMitreGroupCTI `json:"mitre_group_cti,omitempty"`
	MitreId *string `json:"mitre_id,omitempty"`
	ThreatActorName *string `json:"threat_actor_name,omitempty"`
	Tools []AdvisoryTool `json:"tools,omitempty"`
	VendorNamesForThreatActors []AdvisoryVendorNameForThreatActor `json:"vendor_names_for_threat_actors,omitempty"`
	VendorsAndProductsTargeted []AdvisoryVendorProduct `json:"vendors_and_products_targeted,omitempty"`
}

// NewAdvisoryThreatActorWithExternalObjects instantiates a new AdvisoryThreatActorWithExternalObjects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryThreatActorWithExternalObjects() *AdvisoryThreatActorWithExternalObjects {
	this := AdvisoryThreatActorWithExternalObjects{}
	return &this
}

// NewAdvisoryThreatActorWithExternalObjectsWithDefaults instantiates a new AdvisoryThreatActorWithExternalObjects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryThreatActorWithExternalObjectsWithDefaults() *AdvisoryThreatActorWithExternalObjects {
	this := AdvisoryThreatActorWithExternalObjects{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AdvisoryThreatActorWithExternalObjects) SetCountry(v string) {
	o.Country = &v
}

// GetCveReferences returns the CveReferences field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetCveReferences() []AdvisoryCVEReference {
	if o == nil || IsNil(o.CveReferences) {
		var ret []AdvisoryCVEReference
		return ret
	}
	return o.CveReferences
}

// GetCveReferencesOk returns a tuple with the CveReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetCveReferencesOk() ([]AdvisoryCVEReference, bool) {
	if o == nil || IsNil(o.CveReferences) {
		return nil, false
	}
	return o.CveReferences, true
}

// HasCveReferences returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasCveReferences() bool {
	if o != nil && !IsNil(o.CveReferences) {
		return true
	}

	return false
}

// SetCveReferences gets a reference to the given []AdvisoryCVEReference and assigns it to the CveReferences field.
func (o *AdvisoryThreatActorWithExternalObjects) SetCveReferences(v []AdvisoryCVEReference) {
	o.CveReferences = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryThreatActorWithExternalObjects) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetMalpediaUrl returns the MalpediaUrl field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetMalpediaUrl() string {
	if o == nil || IsNil(o.MalpediaUrl) {
		var ret string
		return ret
	}
	return *o.MalpediaUrl
}

// GetMalpediaUrlOk returns a tuple with the MalpediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetMalpediaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MalpediaUrl) {
		return nil, false
	}
	return o.MalpediaUrl, true
}

// HasMalpediaUrl returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasMalpediaUrl() bool {
	if o != nil && !IsNil(o.MalpediaUrl) {
		return true
	}

	return false
}

// SetMalpediaUrl gets a reference to the given string and assigns it to the MalpediaUrl field.
func (o *AdvisoryThreatActorWithExternalObjects) SetMalpediaUrl(v string) {
	o.MalpediaUrl = &v
}

// GetMispId returns the MispId field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetMispId() string {
	if o == nil || IsNil(o.MispId) {
		var ret string
		return ret
	}
	return *o.MispId
}

// GetMispIdOk returns a tuple with the MispId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetMispIdOk() (*string, bool) {
	if o == nil || IsNil(o.MispId) {
		return nil, false
	}
	return o.MispId, true
}

// HasMispId returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasMispId() bool {
	if o != nil && !IsNil(o.MispId) {
		return true
	}

	return false
}

// SetMispId gets a reference to the given string and assigns it to the MispId field.
func (o *AdvisoryThreatActorWithExternalObjects) SetMispId(v string) {
	o.MispId = &v
}

// GetMispThreatActor returns the MispThreatActor field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetMispThreatActor() AdvisoryMISPValueNoID {
	if o == nil || IsNil(o.MispThreatActor) {
		var ret AdvisoryMISPValueNoID
		return ret
	}
	return *o.MispThreatActor
}

// GetMispThreatActorOk returns a tuple with the MispThreatActor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetMispThreatActorOk() (*AdvisoryMISPValueNoID, bool) {
	if o == nil || IsNil(o.MispThreatActor) {
		return nil, false
	}
	return o.MispThreatActor, true
}

// HasMispThreatActor returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasMispThreatActor() bool {
	if o != nil && !IsNil(o.MispThreatActor) {
		return true
	}

	return false
}

// SetMispThreatActor gets a reference to the given AdvisoryMISPValueNoID and assigns it to the MispThreatActor field.
func (o *AdvisoryThreatActorWithExternalObjects) SetMispThreatActor(v AdvisoryMISPValueNoID) {
	o.MispThreatActor = &v
}

// GetMitreAttackGroup returns the MitreAttackGroup field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetMitreAttackGroup() AdvisoryMITREAttackGroupNoID {
	if o == nil || IsNil(o.MitreAttackGroup) {
		var ret AdvisoryMITREAttackGroupNoID
		return ret
	}
	return *o.MitreAttackGroup
}

// GetMitreAttackGroupOk returns a tuple with the MitreAttackGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetMitreAttackGroupOk() (*AdvisoryMITREAttackGroupNoID, bool) {
	if o == nil || IsNil(o.MitreAttackGroup) {
		return nil, false
	}
	return o.MitreAttackGroup, true
}

// HasMitreAttackGroup returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasMitreAttackGroup() bool {
	if o != nil && !IsNil(o.MitreAttackGroup) {
		return true
	}

	return false
}

// SetMitreAttackGroup gets a reference to the given AdvisoryMITREAttackGroupNoID and assigns it to the MitreAttackGroup field.
func (o *AdvisoryThreatActorWithExternalObjects) SetMitreAttackGroup(v AdvisoryMITREAttackGroupNoID) {
	o.MitreAttackGroup = &v
}

// GetMitreGroupCti returns the MitreGroupCti field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetMitreGroupCti() AdvisoryMitreGroupCTI {
	if o == nil || IsNil(o.MitreGroupCti) {
		var ret AdvisoryMitreGroupCTI
		return ret
	}
	return *o.MitreGroupCti
}

// GetMitreGroupCtiOk returns a tuple with the MitreGroupCti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetMitreGroupCtiOk() (*AdvisoryMitreGroupCTI, bool) {
	if o == nil || IsNil(o.MitreGroupCti) {
		return nil, false
	}
	return o.MitreGroupCti, true
}

// HasMitreGroupCti returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasMitreGroupCti() bool {
	if o != nil && !IsNil(o.MitreGroupCti) {
		return true
	}

	return false
}

// SetMitreGroupCti gets a reference to the given AdvisoryMitreGroupCTI and assigns it to the MitreGroupCti field.
func (o *AdvisoryThreatActorWithExternalObjects) SetMitreGroupCti(v AdvisoryMitreGroupCTI) {
	o.MitreGroupCti = &v
}

// GetMitreId returns the MitreId field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetMitreId() string {
	if o == nil || IsNil(o.MitreId) {
		var ret string
		return ret
	}
	return *o.MitreId
}

// GetMitreIdOk returns a tuple with the MitreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetMitreIdOk() (*string, bool) {
	if o == nil || IsNil(o.MitreId) {
		return nil, false
	}
	return o.MitreId, true
}

// HasMitreId returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasMitreId() bool {
	if o != nil && !IsNil(o.MitreId) {
		return true
	}

	return false
}

// SetMitreId gets a reference to the given string and assigns it to the MitreId field.
func (o *AdvisoryThreatActorWithExternalObjects) SetMitreId(v string) {
	o.MitreId = &v
}

// GetThreatActorName returns the ThreatActorName field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetThreatActorName() string {
	if o == nil || IsNil(o.ThreatActorName) {
		var ret string
		return ret
	}
	return *o.ThreatActorName
}

// GetThreatActorNameOk returns a tuple with the ThreatActorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetThreatActorNameOk() (*string, bool) {
	if o == nil || IsNil(o.ThreatActorName) {
		return nil, false
	}
	return o.ThreatActorName, true
}

// HasThreatActorName returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasThreatActorName() bool {
	if o != nil && !IsNil(o.ThreatActorName) {
		return true
	}

	return false
}

// SetThreatActorName gets a reference to the given string and assigns it to the ThreatActorName field.
func (o *AdvisoryThreatActorWithExternalObjects) SetThreatActorName(v string) {
	o.ThreatActorName = &v
}

// GetTools returns the Tools field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetTools() []AdvisoryTool {
	if o == nil || IsNil(o.Tools) {
		var ret []AdvisoryTool
		return ret
	}
	return o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetToolsOk() ([]AdvisoryTool, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given []AdvisoryTool and assigns it to the Tools field.
func (o *AdvisoryThreatActorWithExternalObjects) SetTools(v []AdvisoryTool) {
	o.Tools = v
}

// GetVendorNamesForThreatActors returns the VendorNamesForThreatActors field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetVendorNamesForThreatActors() []AdvisoryVendorNameForThreatActor {
	if o == nil || IsNil(o.VendorNamesForThreatActors) {
		var ret []AdvisoryVendorNameForThreatActor
		return ret
	}
	return o.VendorNamesForThreatActors
}

// GetVendorNamesForThreatActorsOk returns a tuple with the VendorNamesForThreatActors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetVendorNamesForThreatActorsOk() ([]AdvisoryVendorNameForThreatActor, bool) {
	if o == nil || IsNil(o.VendorNamesForThreatActors) {
		return nil, false
	}
	return o.VendorNamesForThreatActors, true
}

// HasVendorNamesForThreatActors returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasVendorNamesForThreatActors() bool {
	if o != nil && !IsNil(o.VendorNamesForThreatActors) {
		return true
	}

	return false
}

// SetVendorNamesForThreatActors gets a reference to the given []AdvisoryVendorNameForThreatActor and assigns it to the VendorNamesForThreatActors field.
func (o *AdvisoryThreatActorWithExternalObjects) SetVendorNamesForThreatActors(v []AdvisoryVendorNameForThreatActor) {
	o.VendorNamesForThreatActors = v
}

// GetVendorsAndProductsTargeted returns the VendorsAndProductsTargeted field value if set, zero value otherwise.
func (o *AdvisoryThreatActorWithExternalObjects) GetVendorsAndProductsTargeted() []AdvisoryVendorProduct {
	if o == nil || IsNil(o.VendorsAndProductsTargeted) {
		var ret []AdvisoryVendorProduct
		return ret
	}
	return o.VendorsAndProductsTargeted
}

// GetVendorsAndProductsTargetedOk returns a tuple with the VendorsAndProductsTargeted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryThreatActorWithExternalObjects) GetVendorsAndProductsTargetedOk() ([]AdvisoryVendorProduct, bool) {
	if o == nil || IsNil(o.VendorsAndProductsTargeted) {
		return nil, false
	}
	return o.VendorsAndProductsTargeted, true
}

// HasVendorsAndProductsTargeted returns a boolean if a field has been set.
func (o *AdvisoryThreatActorWithExternalObjects) HasVendorsAndProductsTargeted() bool {
	if o != nil && !IsNil(o.VendorsAndProductsTargeted) {
		return true
	}

	return false
}

// SetVendorsAndProductsTargeted gets a reference to the given []AdvisoryVendorProduct and assigns it to the VendorsAndProductsTargeted field.
func (o *AdvisoryThreatActorWithExternalObjects) SetVendorsAndProductsTargeted(v []AdvisoryVendorProduct) {
	o.VendorsAndProductsTargeted = v
}

func (o AdvisoryThreatActorWithExternalObjects) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryThreatActorWithExternalObjects) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.CveReferences) {
		toSerialize["cve_references"] = o.CveReferences
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.MalpediaUrl) {
		toSerialize["malpedia_url"] = o.MalpediaUrl
	}
	if !IsNil(o.MispId) {
		toSerialize["misp_id"] = o.MispId
	}
	if !IsNil(o.MispThreatActor) {
		toSerialize["misp_threat_actor"] = o.MispThreatActor
	}
	if !IsNil(o.MitreAttackGroup) {
		toSerialize["mitre_attack_group"] = o.MitreAttackGroup
	}
	if !IsNil(o.MitreGroupCti) {
		toSerialize["mitre_group_cti"] = o.MitreGroupCti
	}
	if !IsNil(o.MitreId) {
		toSerialize["mitre_id"] = o.MitreId
	}
	if !IsNil(o.ThreatActorName) {
		toSerialize["threat_actor_name"] = o.ThreatActorName
	}
	if !IsNil(o.Tools) {
		toSerialize["tools"] = o.Tools
	}
	if !IsNil(o.VendorNamesForThreatActors) {
		toSerialize["vendor_names_for_threat_actors"] = o.VendorNamesForThreatActors
	}
	if !IsNil(o.VendorsAndProductsTargeted) {
		toSerialize["vendors_and_products_targeted"] = o.VendorsAndProductsTargeted
	}
	return toSerialize, nil
}

type NullableAdvisoryThreatActorWithExternalObjects struct {
	value *AdvisoryThreatActorWithExternalObjects
	isSet bool
}

func (v NullableAdvisoryThreatActorWithExternalObjects) Get() *AdvisoryThreatActorWithExternalObjects {
	return v.value
}

func (v *NullableAdvisoryThreatActorWithExternalObjects) Set(val *AdvisoryThreatActorWithExternalObjects) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryThreatActorWithExternalObjects) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryThreatActorWithExternalObjects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryThreatActorWithExternalObjects(val *AdvisoryThreatActorWithExternalObjects) *NullableAdvisoryThreatActorWithExternalObjects {
	return &NullableAdvisoryThreatActorWithExternalObjects{value: val, isSet: true}
}

func (v NullableAdvisoryThreatActorWithExternalObjects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryThreatActorWithExternalObjects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


