/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiExploitChainCVE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExploitChainCVE{}

// ApiExploitChainCVE struct for ApiExploitChainCVE
type ApiExploitChainCVE struct {
	Cve *string `json:"cve,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewApiExploitChainCVE instantiates a new ApiExploitChainCVE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExploitChainCVE() *ApiExploitChainCVE {
	this := ApiExploitChainCVE{}
	return &this
}

// NewApiExploitChainCVEWithDefaults instantiates a new ApiExploitChainCVE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExploitChainCVEWithDefaults() *ApiExploitChainCVE {
	this := ApiExploitChainCVE{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiExploitChainCVE) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitChainCVE) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiExploitChainCVE) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *ApiExploitChainCVE) SetCve(v string) {
	o.Cve = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiExploitChainCVE) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitChainCVE) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiExploitChainCVE) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiExploitChainCVE) SetType(v string) {
	o.Type = &v
}

func (o ApiExploitChainCVE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiExploitChainCVE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableApiExploitChainCVE struct {
	value *ApiExploitChainCVE
	isSet bool
}

func (v NullableApiExploitChainCVE) Get() *ApiExploitChainCVE {
	return v.value
}

func (v *NullableApiExploitChainCVE) Set(val *ApiExploitChainCVE) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExploitChainCVE) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExploitChainCVE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExploitChainCVE(val *ApiExploitChainCVE) *NullableApiExploitChainCVE {
	return &NullableApiExploitChainCVE{value: val, isSet: true}
}

func (v NullableApiExploitChainCVE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExploitChainCVE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


