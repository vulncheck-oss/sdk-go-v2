/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRustsecFrontMatterVersions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRustsecFrontMatterVersions{}

// AdvisoryRustsecFrontMatterVersions struct for AdvisoryRustsecFrontMatterVersions
type AdvisoryRustsecFrontMatterVersions struct {
	Patched []string `json:"patched,omitempty"`
	// Versions which were never vulnerable (optional)
	Unaffected []string `json:"unaffected,omitempty"`
}

// NewAdvisoryRustsecFrontMatterVersions instantiates a new AdvisoryRustsecFrontMatterVersions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRustsecFrontMatterVersions() *AdvisoryRustsecFrontMatterVersions {
	this := AdvisoryRustsecFrontMatterVersions{}
	return &this
}

// NewAdvisoryRustsecFrontMatterVersionsWithDefaults instantiates a new AdvisoryRustsecFrontMatterVersions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRustsecFrontMatterVersionsWithDefaults() *AdvisoryRustsecFrontMatterVersions {
	this := AdvisoryRustsecFrontMatterVersions{}
	return &this
}

// GetPatched returns the Patched field value if set, zero value otherwise.
func (o *AdvisoryRustsecFrontMatterVersions) GetPatched() []string {
	if o == nil || IsNil(o.Patched) {
		var ret []string
		return ret
	}
	return o.Patched
}

// GetPatchedOk returns a tuple with the Patched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecFrontMatterVersions) GetPatchedOk() ([]string, bool) {
	if o == nil || IsNil(o.Patched) {
		return nil, false
	}
	return o.Patched, true
}

// HasPatched returns a boolean if a field has been set.
func (o *AdvisoryRustsecFrontMatterVersions) HasPatched() bool {
	if o != nil && !IsNil(o.Patched) {
		return true
	}

	return false
}

// SetPatched gets a reference to the given []string and assigns it to the Patched field.
func (o *AdvisoryRustsecFrontMatterVersions) SetPatched(v []string) {
	o.Patched = v
}

// GetUnaffected returns the Unaffected field value if set, zero value otherwise.
func (o *AdvisoryRustsecFrontMatterVersions) GetUnaffected() []string {
	if o == nil || IsNil(o.Unaffected) {
		var ret []string
		return ret
	}
	return o.Unaffected
}

// GetUnaffectedOk returns a tuple with the Unaffected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRustsecFrontMatterVersions) GetUnaffectedOk() ([]string, bool) {
	if o == nil || IsNil(o.Unaffected) {
		return nil, false
	}
	return o.Unaffected, true
}

// HasUnaffected returns a boolean if a field has been set.
func (o *AdvisoryRustsecFrontMatterVersions) HasUnaffected() bool {
	if o != nil && !IsNil(o.Unaffected) {
		return true
	}

	return false
}

// SetUnaffected gets a reference to the given []string and assigns it to the Unaffected field.
func (o *AdvisoryRustsecFrontMatterVersions) SetUnaffected(v []string) {
	o.Unaffected = v
}

func (o AdvisoryRustsecFrontMatterVersions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRustsecFrontMatterVersions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Patched) {
		toSerialize["patched"] = o.Patched
	}
	if !IsNil(o.Unaffected) {
		toSerialize["unaffected"] = o.Unaffected
	}
	return toSerialize, nil
}

type NullableAdvisoryRustsecFrontMatterVersions struct {
	value *AdvisoryRustsecFrontMatterVersions
	isSet bool
}

func (v NullableAdvisoryRustsecFrontMatterVersions) Get() *AdvisoryRustsecFrontMatterVersions {
	return v.value
}

func (v *NullableAdvisoryRustsecFrontMatterVersions) Set(val *AdvisoryRustsecFrontMatterVersions) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRustsecFrontMatterVersions) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRustsecFrontMatterVersions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRustsecFrontMatterVersions(val *AdvisoryRustsecFrontMatterVersions) *NullableAdvisoryRustsecFrontMatterVersions {
	return &NullableAdvisoryRustsecFrontMatterVersions{value: val, isSet: true}
}

func (v NullableAdvisoryRustsecFrontMatterVersions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRustsecFrontMatterVersions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


