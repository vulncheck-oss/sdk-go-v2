/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryWolfiPackage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryWolfiPackage{}

// AdvisoryWolfiPackage struct for AdvisoryWolfiPackage
type AdvisoryWolfiPackage struct {
	Name *string `json:"name,omitempty"`
	Secfixes []AdvisoryWolfiSecFix `json:"secfixes,omitempty"`
}

// NewAdvisoryWolfiPackage instantiates a new AdvisoryWolfiPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryWolfiPackage() *AdvisoryWolfiPackage {
	this := AdvisoryWolfiPackage{}
	return &this
}

// NewAdvisoryWolfiPackageWithDefaults instantiates a new AdvisoryWolfiPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryWolfiPackageWithDefaults() *AdvisoryWolfiPackage {
	this := AdvisoryWolfiPackage{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryWolfiPackage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryWolfiPackage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryWolfiPackage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryWolfiPackage) SetName(v string) {
	o.Name = &v
}

// GetSecfixes returns the Secfixes field value if set, zero value otherwise.
func (o *AdvisoryWolfiPackage) GetSecfixes() []AdvisoryWolfiSecFix {
	if o == nil || IsNil(o.Secfixes) {
		var ret []AdvisoryWolfiSecFix
		return ret
	}
	return o.Secfixes
}

// GetSecfixesOk returns a tuple with the Secfixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryWolfiPackage) GetSecfixesOk() ([]AdvisoryWolfiSecFix, bool) {
	if o == nil || IsNil(o.Secfixes) {
		return nil, false
	}
	return o.Secfixes, true
}

// HasSecfixes returns a boolean if a field has been set.
func (o *AdvisoryWolfiPackage) HasSecfixes() bool {
	if o != nil && !IsNil(o.Secfixes) {
		return true
	}

	return false
}

// SetSecfixes gets a reference to the given []AdvisoryWolfiSecFix and assigns it to the Secfixes field.
func (o *AdvisoryWolfiPackage) SetSecfixes(v []AdvisoryWolfiSecFix) {
	o.Secfixes = v
}

func (o AdvisoryWolfiPackage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryWolfiPackage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Secfixes) {
		toSerialize["secfixes"] = o.Secfixes
	}
	return toSerialize, nil
}

type NullableAdvisoryWolfiPackage struct {
	value *AdvisoryWolfiPackage
	isSet bool
}

func (v NullableAdvisoryWolfiPackage) Get() *AdvisoryWolfiPackage {
	return v.value
}

func (v *NullableAdvisoryWolfiPackage) Set(val *AdvisoryWolfiPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryWolfiPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryWolfiPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryWolfiPackage(val *AdvisoryWolfiPackage) *NullableAdvisoryWolfiPackage {
	return &NullableAdvisoryWolfiPackage{value: val, isSet: true}
}

func (v NullableAdvisoryWolfiPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryWolfiPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


