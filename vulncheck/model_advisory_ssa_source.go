/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySSASource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySSASource{}

// AdvisorySSASource struct for AdvisorySSASource
type AdvisorySSASource struct {
	Document *AdvisorySiemensDocument `json:"document,omitempty"`
	ProductTree *AdvisorySiemensProductTree `json:"product_tree,omitempty"`
	Vulnerabilities []AdvisorySiemensVulnerability `json:"vulnerabilities,omitempty"`
}

// NewAdvisorySSASource instantiates a new AdvisorySSASource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySSASource() *AdvisorySSASource {
	this := AdvisorySSASource{}
	return &this
}

// NewAdvisorySSASourceWithDefaults instantiates a new AdvisorySSASource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySSASourceWithDefaults() *AdvisorySSASource {
	this := AdvisorySSASource{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *AdvisorySSASource) GetDocument() AdvisorySiemensDocument {
	if o == nil || IsNil(o.Document) {
		var ret AdvisorySiemensDocument
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySSASource) GetDocumentOk() (*AdvisorySiemensDocument, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *AdvisorySSASource) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given AdvisorySiemensDocument and assigns it to the Document field.
func (o *AdvisorySSASource) SetDocument(v AdvisorySiemensDocument) {
	o.Document = &v
}

// GetProductTree returns the ProductTree field value if set, zero value otherwise.
func (o *AdvisorySSASource) GetProductTree() AdvisorySiemensProductTree {
	if o == nil || IsNil(o.ProductTree) {
		var ret AdvisorySiemensProductTree
		return ret
	}
	return *o.ProductTree
}

// GetProductTreeOk returns a tuple with the ProductTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySSASource) GetProductTreeOk() (*AdvisorySiemensProductTree, bool) {
	if o == nil || IsNil(o.ProductTree) {
		return nil, false
	}
	return o.ProductTree, true
}

// HasProductTree returns a boolean if a field has been set.
func (o *AdvisorySSASource) HasProductTree() bool {
	if o != nil && !IsNil(o.ProductTree) {
		return true
	}

	return false
}

// SetProductTree gets a reference to the given AdvisorySiemensProductTree and assigns it to the ProductTree field.
func (o *AdvisorySSASource) SetProductTree(v AdvisorySiemensProductTree) {
	o.ProductTree = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *AdvisorySSASource) GetVulnerabilities() []AdvisorySiemensVulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []AdvisorySiemensVulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySSASource) GetVulnerabilitiesOk() ([]AdvisorySiemensVulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *AdvisorySSASource) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []AdvisorySiemensVulnerability and assigns it to the Vulnerabilities field.
func (o *AdvisorySSASource) SetVulnerabilities(v []AdvisorySiemensVulnerability) {
	o.Vulnerabilities = v
}

func (o AdvisorySSASource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySSASource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.ProductTree) {
		toSerialize["product_tree"] = o.ProductTree
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return toSerialize, nil
}

type NullableAdvisorySSASource struct {
	value *AdvisorySSASource
	isSet bool
}

func (v NullableAdvisorySSASource) Get() *AdvisorySSASource {
	return v.value
}

func (v *NullableAdvisorySSASource) Set(val *AdvisorySSASource) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySSASource) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySSASource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySSASource(val *AdvisorySSASource) *NullableAdvisorySSASource {
	return &NullableAdvisorySSASource{value: val, isSet: true}
}

func (v NullableAdvisorySSASource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySSASource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


