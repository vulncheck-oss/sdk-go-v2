/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCPEName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCPEName{}

// ApiCPEName struct for ApiCPEName
type ApiCPEName struct {
	Cpe22Uri *string `json:"cpe22Uri,omitempty"`
	Cpe23Uri *string `json:"cpe23Uri,omitempty"`
	LastModifiedDate *string `json:"lastModifiedDate,omitempty"`
}

// NewApiCPEName instantiates a new ApiCPEName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCPEName() *ApiCPEName {
	this := ApiCPEName{}
	return &this
}

// NewApiCPENameWithDefaults instantiates a new ApiCPEName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCPENameWithDefaults() *ApiCPEName {
	this := ApiCPEName{}
	return &this
}

// GetCpe22Uri returns the Cpe22Uri field value if set, zero value otherwise.
func (o *ApiCPEName) GetCpe22Uri() string {
	if o == nil || IsNil(o.Cpe22Uri) {
		var ret string
		return ret
	}
	return *o.Cpe22Uri
}

// GetCpe22UriOk returns a tuple with the Cpe22Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEName) GetCpe22UriOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe22Uri) {
		return nil, false
	}
	return o.Cpe22Uri, true
}

// HasCpe22Uri returns a boolean if a field has been set.
func (o *ApiCPEName) HasCpe22Uri() bool {
	if o != nil && !IsNil(o.Cpe22Uri) {
		return true
	}

	return false
}

// SetCpe22Uri gets a reference to the given string and assigns it to the Cpe22Uri field.
func (o *ApiCPEName) SetCpe22Uri(v string) {
	o.Cpe22Uri = &v
}

// GetCpe23Uri returns the Cpe23Uri field value if set, zero value otherwise.
func (o *ApiCPEName) GetCpe23Uri() string {
	if o == nil || IsNil(o.Cpe23Uri) {
		var ret string
		return ret
	}
	return *o.Cpe23Uri
}

// GetCpe23UriOk returns a tuple with the Cpe23Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEName) GetCpe23UriOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe23Uri) {
		return nil, false
	}
	return o.Cpe23Uri, true
}

// HasCpe23Uri returns a boolean if a field has been set.
func (o *ApiCPEName) HasCpe23Uri() bool {
	if o != nil && !IsNil(o.Cpe23Uri) {
		return true
	}

	return false
}

// SetCpe23Uri gets a reference to the given string and assigns it to the Cpe23Uri field.
func (o *ApiCPEName) SetCpe23Uri(v string) {
	o.Cpe23Uri = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *ApiCPEName) GetLastModifiedDate() string {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEName) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *ApiCPEName) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *ApiCPEName) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

func (o ApiCPEName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCPEName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpe22Uri) {
		toSerialize["cpe22Uri"] = o.Cpe22Uri
	}
	if !IsNil(o.Cpe23Uri) {
		toSerialize["cpe23Uri"] = o.Cpe23Uri
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	return toSerialize, nil
}

type NullableApiCPEName struct {
	value *ApiCPEName
	isSet bool
}

func (v NullableApiCPEName) Get() *ApiCPEName {
	return v.value
}

func (v *NullableApiCPEName) Set(val *ApiCPEName) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCPEName) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCPEName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCPEName(val *ApiCPEName) *NullableApiCPEName {
	return &NullableApiCPEName{value: val, isSet: true}
}

func (v NullableApiCPEName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCPEName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


