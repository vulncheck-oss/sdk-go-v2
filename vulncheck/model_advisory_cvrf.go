/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCvrf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCvrf{}

// AdvisoryCvrf struct for AdvisoryCvrf
type AdvisoryCvrf struct {
	Cve []string `json:"cve,omitempty"`
	Notes []AdvisoryDocumentNote `json:"notes,omitempty"`
	ProductTree *AdvisoryProductTree `json:"productTree,omitempty"`
	References []AdvisoryCVRFReference `json:"references,omitempty"`
	Title *string `json:"title,omitempty"`
	Tracking *AdvisoryDocumentTracking `json:"tracking,omitempty"`
	Vulnerabilities []AdvisoryVulnerability `json:"vulnerabilities,omitempty"`
}

// NewAdvisoryCvrf instantiates a new AdvisoryCvrf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCvrf() *AdvisoryCvrf {
	this := AdvisoryCvrf{}
	return &this
}

// NewAdvisoryCvrfWithDefaults instantiates a new AdvisoryCvrf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCvrfWithDefaults() *AdvisoryCvrf {
	this := AdvisoryCvrf{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCvrf) SetCve(v []string) {
	o.Cve = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetNotes() []AdvisoryDocumentNote {
	if o == nil || IsNil(o.Notes) {
		var ret []AdvisoryDocumentNote
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetNotesOk() ([]AdvisoryDocumentNote, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []AdvisoryDocumentNote and assigns it to the Notes field.
func (o *AdvisoryCvrf) SetNotes(v []AdvisoryDocumentNote) {
	o.Notes = v
}

// GetProductTree returns the ProductTree field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetProductTree() AdvisoryProductTree {
	if o == nil || IsNil(o.ProductTree) {
		var ret AdvisoryProductTree
		return ret
	}
	return *o.ProductTree
}

// GetProductTreeOk returns a tuple with the ProductTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetProductTreeOk() (*AdvisoryProductTree, bool) {
	if o == nil || IsNil(o.ProductTree) {
		return nil, false
	}
	return o.ProductTree, true
}

// HasProductTree returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasProductTree() bool {
	if o != nil && !IsNil(o.ProductTree) {
		return true
	}

	return false
}

// SetProductTree gets a reference to the given AdvisoryProductTree and assigns it to the ProductTree field.
func (o *AdvisoryCvrf) SetProductTree(v AdvisoryProductTree) {
	o.ProductTree = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetReferences() []AdvisoryCVRFReference {
	if o == nil || IsNil(o.References) {
		var ret []AdvisoryCVRFReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetReferencesOk() ([]AdvisoryCVRFReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []AdvisoryCVRFReference and assigns it to the References field.
func (o *AdvisoryCvrf) SetReferences(v []AdvisoryCVRFReference) {
	o.References = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryCvrf) SetTitle(v string) {
	o.Title = &v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetTracking() AdvisoryDocumentTracking {
	if o == nil || IsNil(o.Tracking) {
		var ret AdvisoryDocumentTracking
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetTrackingOk() (*AdvisoryDocumentTracking, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given AdvisoryDocumentTracking and assigns it to the Tracking field.
func (o *AdvisoryCvrf) SetTracking(v AdvisoryDocumentTracking) {
	o.Tracking = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *AdvisoryCvrf) GetVulnerabilities() []AdvisoryVulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []AdvisoryVulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCvrf) GetVulnerabilitiesOk() ([]AdvisoryVulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *AdvisoryCvrf) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []AdvisoryVulnerability and assigns it to the Vulnerabilities field.
func (o *AdvisoryCvrf) SetVulnerabilities(v []AdvisoryVulnerability) {
	o.Vulnerabilities = v
}

func (o AdvisoryCvrf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCvrf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ProductTree) {
		toSerialize["productTree"] = o.ProductTree
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return toSerialize, nil
}

type NullableAdvisoryCvrf struct {
	value *AdvisoryCvrf
	isSet bool
}

func (v NullableAdvisoryCvrf) Get() *AdvisoryCvrf {
	return v.value
}

func (v *NullableAdvisoryCvrf) Set(val *AdvisoryCvrf) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCvrf) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCvrf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCvrf(val *AdvisoryCvrf) *NullableAdvisoryCvrf {
	return &NullableAdvisoryCvrf{value: val, isSet: true}
}

func (v NullableAdvisoryCvrf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCvrf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


