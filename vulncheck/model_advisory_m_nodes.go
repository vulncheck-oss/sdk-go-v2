/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMNodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMNodes{}

// AdvisoryMNodes struct for AdvisoryMNodes
type AdvisoryMNodes struct {
	CpeMatch []AdvisoryMCPEMatch `json:"cpeMatch,omitempty"`
	Negate *bool `json:"negate,omitempty"`
	Operator *string `json:"operator,omitempty"`
}

// NewAdvisoryMNodes instantiates a new AdvisoryMNodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMNodes() *AdvisoryMNodes {
	this := AdvisoryMNodes{}
	return &this
}

// NewAdvisoryMNodesWithDefaults instantiates a new AdvisoryMNodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMNodesWithDefaults() *AdvisoryMNodes {
	this := AdvisoryMNodes{}
	return &this
}

// GetCpeMatch returns the CpeMatch field value if set, zero value otherwise.
func (o *AdvisoryMNodes) GetCpeMatch() []AdvisoryMCPEMatch {
	if o == nil || IsNil(o.CpeMatch) {
		var ret []AdvisoryMCPEMatch
		return ret
	}
	return o.CpeMatch
}

// GetCpeMatchOk returns a tuple with the CpeMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMNodes) GetCpeMatchOk() ([]AdvisoryMCPEMatch, bool) {
	if o == nil || IsNil(o.CpeMatch) {
		return nil, false
	}
	return o.CpeMatch, true
}

// HasCpeMatch returns a boolean if a field has been set.
func (o *AdvisoryMNodes) HasCpeMatch() bool {
	if o != nil && !IsNil(o.CpeMatch) {
		return true
	}

	return false
}

// SetCpeMatch gets a reference to the given []AdvisoryMCPEMatch and assigns it to the CpeMatch field.
func (o *AdvisoryMNodes) SetCpeMatch(v []AdvisoryMCPEMatch) {
	o.CpeMatch = v
}

// GetNegate returns the Negate field value if set, zero value otherwise.
func (o *AdvisoryMNodes) GetNegate() bool {
	if o == nil || IsNil(o.Negate) {
		var ret bool
		return ret
	}
	return *o.Negate
}

// GetNegateOk returns a tuple with the Negate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMNodes) GetNegateOk() (*bool, bool) {
	if o == nil || IsNil(o.Negate) {
		return nil, false
	}
	return o.Negate, true
}

// HasNegate returns a boolean if a field has been set.
func (o *AdvisoryMNodes) HasNegate() bool {
	if o != nil && !IsNil(o.Negate) {
		return true
	}

	return false
}

// SetNegate gets a reference to the given bool and assigns it to the Negate field.
func (o *AdvisoryMNodes) SetNegate(v bool) {
	o.Negate = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *AdvisoryMNodes) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMNodes) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *AdvisoryMNodes) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *AdvisoryMNodes) SetOperator(v string) {
	o.Operator = &v
}

func (o AdvisoryMNodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMNodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpeMatch) {
		toSerialize["cpeMatch"] = o.CpeMatch
	}
	if !IsNil(o.Negate) {
		toSerialize["negate"] = o.Negate
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableAdvisoryMNodes struct {
	value *AdvisoryMNodes
	isSet bool
}

func (v NullableAdvisoryMNodes) Get() *AdvisoryMNodes {
	return v.value
}

func (v *NullableAdvisoryMNodes) Set(val *AdvisoryMNodes) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMNodes) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMNodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMNodes(val *AdvisoryMNodes) *NullableAdvisoryMNodes {
	return &NullableAdvisoryMNodes{value: val, isSet: true}
}

func (v NullableAdvisoryMNodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMNodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


