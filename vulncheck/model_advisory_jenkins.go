/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryJenkins type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryJenkins{}

// AdvisoryJenkins struct for AdvisoryJenkins
type AdvisoryJenkins struct {
	Affected *string `json:"affected,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Fix *string `json:"fix,omitempty"`
	Link *string `json:"link,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAdvisoryJenkins instantiates a new AdvisoryJenkins object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryJenkins() *AdvisoryJenkins {
	this := AdvisoryJenkins{}
	return &this
}

// NewAdvisoryJenkinsWithDefaults instantiates a new AdvisoryJenkins object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryJenkinsWithDefaults() *AdvisoryJenkins {
	this := AdvisoryJenkins{}
	return &this
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *AdvisoryJenkins) GetAffected() string {
	if o == nil || IsNil(o.Affected) {
		var ret string
		return ret
	}
	return *o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJenkins) GetAffectedOk() (*string, bool) {
	if o == nil || IsNil(o.Affected) {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *AdvisoryJenkins) HasAffected() bool {
	if o != nil && !IsNil(o.Affected) {
		return true
	}

	return false
}

// SetAffected gets a reference to the given string and assigns it to the Affected field.
func (o *AdvisoryJenkins) SetAffected(v string) {
	o.Affected = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryJenkins) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJenkins) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryJenkins) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryJenkins) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryJenkins) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJenkins) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryJenkins) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryJenkins) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetFix returns the Fix field value if set, zero value otherwise.
func (o *AdvisoryJenkins) GetFix() string {
	if o == nil || IsNil(o.Fix) {
		var ret string
		return ret
	}
	return *o.Fix
}

// GetFixOk returns a tuple with the Fix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJenkins) GetFixOk() (*string, bool) {
	if o == nil || IsNil(o.Fix) {
		return nil, false
	}
	return o.Fix, true
}

// HasFix returns a boolean if a field has been set.
func (o *AdvisoryJenkins) HasFix() bool {
	if o != nil && !IsNil(o.Fix) {
		return true
	}

	return false
}

// SetFix gets a reference to the given string and assigns it to the Fix field.
func (o *AdvisoryJenkins) SetFix(v string) {
	o.Fix = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryJenkins) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJenkins) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryJenkins) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryJenkins) SetLink(v string) {
	o.Link = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryJenkins) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJenkins) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryJenkins) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryJenkins) SetTitle(v string) {
	o.Title = &v
}

func (o AdvisoryJenkins) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryJenkins) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Affected) {
		toSerialize["affected"] = o.Affected
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Fix) {
		toSerialize["fix"] = o.Fix
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAdvisoryJenkins struct {
	value *AdvisoryJenkins
	isSet bool
}

func (v NullableAdvisoryJenkins) Get() *AdvisoryJenkins {
	return v.value
}

func (v *NullableAdvisoryJenkins) Set(val *AdvisoryJenkins) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryJenkins) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryJenkins) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryJenkins(val *AdvisoryJenkins) *NullableAdvisoryJenkins {
	return &NullableAdvisoryJenkins{value: val, isSet: true}
}

func (v NullableAdvisoryJenkins) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryJenkins) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


