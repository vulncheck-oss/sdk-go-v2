/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryIAVA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryIAVA{}

// AdvisoryIAVA struct for AdvisoryIAVA
type AdvisoryIAVA struct {
	IAVA *string `json:"IAVA,omitempty"`
	Cve []string `json:"cve,omitempty"`
}

// NewAdvisoryIAVA instantiates a new AdvisoryIAVA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryIAVA() *AdvisoryIAVA {
	this := AdvisoryIAVA{}
	return &this
}

// NewAdvisoryIAVAWithDefaults instantiates a new AdvisoryIAVA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryIAVAWithDefaults() *AdvisoryIAVA {
	this := AdvisoryIAVA{}
	return &this
}

// GetIAVA returns the IAVA field value if set, zero value otherwise.
func (o *AdvisoryIAVA) GetIAVA() string {
	if o == nil || IsNil(o.IAVA) {
		var ret string
		return ret
	}
	return *o.IAVA
}

// GetIAVAOk returns a tuple with the IAVA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIAVA) GetIAVAOk() (*string, bool) {
	if o == nil || IsNil(o.IAVA) {
		return nil, false
	}
	return o.IAVA, true
}

// HasIAVA returns a boolean if a field has been set.
func (o *AdvisoryIAVA) HasIAVA() bool {
	if o != nil && !IsNil(o.IAVA) {
		return true
	}

	return false
}

// SetIAVA gets a reference to the given string and assigns it to the IAVA field.
func (o *AdvisoryIAVA) SetIAVA(v string) {
	o.IAVA = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryIAVA) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryIAVA) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryIAVA) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryIAVA) SetCve(v []string) {
	o.Cve = v
}

func (o AdvisoryIAVA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryIAVA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IAVA) {
		toSerialize["IAVA"] = o.IAVA
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	return toSerialize, nil
}

type NullableAdvisoryIAVA struct {
	value *AdvisoryIAVA
	isSet bool
}

func (v NullableAdvisoryIAVA) Get() *AdvisoryIAVA {
	return v.value
}

func (v *NullableAdvisoryIAVA) Set(val *AdvisoryIAVA) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryIAVA) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryIAVA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryIAVA(val *AdvisoryIAVA) *NullableAdvisoryIAVA {
	return &NullableAdvisoryIAVA{value: val, isSet: true}
}

func (v NullableAdvisoryIAVA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryIAVA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


