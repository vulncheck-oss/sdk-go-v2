/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiSSVC type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSSVC{}

// ApiSSVC struct for ApiSSVC
type ApiSSVC struct {
	Automatable *string `json:"automatable,omitempty"`
	Exploitation *string `json:"exploitation,omitempty"`
	Source *string `json:"source,omitempty"`
	TechnicalImpact *string `json:"technicalImpact,omitempty"`
}

// NewApiSSVC instantiates a new ApiSSVC object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSSVC() *ApiSSVC {
	this := ApiSSVC{}
	return &this
}

// NewApiSSVCWithDefaults instantiates a new ApiSSVC object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSSVCWithDefaults() *ApiSSVC {
	this := ApiSSVC{}
	return &this
}

// GetAutomatable returns the Automatable field value if set, zero value otherwise.
func (o *ApiSSVC) GetAutomatable() string {
	if o == nil || IsNil(o.Automatable) {
		var ret string
		return ret
	}
	return *o.Automatable
}

// GetAutomatableOk returns a tuple with the Automatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSSVC) GetAutomatableOk() (*string, bool) {
	if o == nil || IsNil(o.Automatable) {
		return nil, false
	}
	return o.Automatable, true
}

// HasAutomatable returns a boolean if a field has been set.
func (o *ApiSSVC) HasAutomatable() bool {
	if o != nil && !IsNil(o.Automatable) {
		return true
	}

	return false
}

// SetAutomatable gets a reference to the given string and assigns it to the Automatable field.
func (o *ApiSSVC) SetAutomatable(v string) {
	o.Automatable = &v
}

// GetExploitation returns the Exploitation field value if set, zero value otherwise.
func (o *ApiSSVC) GetExploitation() string {
	if o == nil || IsNil(o.Exploitation) {
		var ret string
		return ret
	}
	return *o.Exploitation
}

// GetExploitationOk returns a tuple with the Exploitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSSVC) GetExploitationOk() (*string, bool) {
	if o == nil || IsNil(o.Exploitation) {
		return nil, false
	}
	return o.Exploitation, true
}

// HasExploitation returns a boolean if a field has been set.
func (o *ApiSSVC) HasExploitation() bool {
	if o != nil && !IsNil(o.Exploitation) {
		return true
	}

	return false
}

// SetExploitation gets a reference to the given string and assigns it to the Exploitation field.
func (o *ApiSSVC) SetExploitation(v string) {
	o.Exploitation = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ApiSSVC) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSSVC) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ApiSSVC) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ApiSSVC) SetSource(v string) {
	o.Source = &v
}

// GetTechnicalImpact returns the TechnicalImpact field value if set, zero value otherwise.
func (o *ApiSSVC) GetTechnicalImpact() string {
	if o == nil || IsNil(o.TechnicalImpact) {
		var ret string
		return ret
	}
	return *o.TechnicalImpact
}

// GetTechnicalImpactOk returns a tuple with the TechnicalImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSSVC) GetTechnicalImpactOk() (*string, bool) {
	if o == nil || IsNil(o.TechnicalImpact) {
		return nil, false
	}
	return o.TechnicalImpact, true
}

// HasTechnicalImpact returns a boolean if a field has been set.
func (o *ApiSSVC) HasTechnicalImpact() bool {
	if o != nil && !IsNil(o.TechnicalImpact) {
		return true
	}

	return false
}

// SetTechnicalImpact gets a reference to the given string and assigns it to the TechnicalImpact field.
func (o *ApiSSVC) SetTechnicalImpact(v string) {
	o.TechnicalImpact = &v
}

func (o ApiSSVC) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSSVC) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Automatable) {
		toSerialize["automatable"] = o.Automatable
	}
	if !IsNil(o.Exploitation) {
		toSerialize["exploitation"] = o.Exploitation
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.TechnicalImpact) {
		toSerialize["technicalImpact"] = o.TechnicalImpact
	}
	return toSerialize, nil
}

type NullableApiSSVC struct {
	value *ApiSSVC
	isSet bool
}

func (v NullableApiSSVC) Get() *ApiSSVC {
	return v.value
}

func (v *NullableApiSSVC) Set(val *ApiSSVC) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSSVC) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSSVC) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSSVC(val *ApiSSVC) *NullableApiSSVC {
	return &NullableApiSSVC{value: val, isSet: true}
}

func (v NullableApiSSVC) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSSVC) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


