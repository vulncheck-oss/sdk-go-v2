/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryKEVCatalogVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryKEVCatalogVulnerability{}

// AdvisoryKEVCatalogVulnerability struct for AdvisoryKEVCatalogVulnerability
type AdvisoryKEVCatalogVulnerability struct {
	Cve []string `json:"cve,omitempty"`
	Cwes []string `json:"cwes,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DueDate *string `json:"dueDate,omitempty"`
	KnownRansomwareCampaignUse *string `json:"knownRansomwareCampaignUse,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Product *string `json:"product,omitempty"`
	RequiredAction *string `json:"requiredAction,omitempty"`
	ShortDescription *string `json:"shortDescription,omitempty"`
	VendorProject *string `json:"vendorProject,omitempty"`
	VulnerabilityName *string `json:"vulnerabilityName,omitempty"`
}

// NewAdvisoryKEVCatalogVulnerability instantiates a new AdvisoryKEVCatalogVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryKEVCatalogVulnerability() *AdvisoryKEVCatalogVulnerability {
	this := AdvisoryKEVCatalogVulnerability{}
	return &this
}

// NewAdvisoryKEVCatalogVulnerabilityWithDefaults instantiates a new AdvisoryKEVCatalogVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryKEVCatalogVulnerabilityWithDefaults() *AdvisoryKEVCatalogVulnerability {
	this := AdvisoryKEVCatalogVulnerability{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryKEVCatalogVulnerability) SetCve(v []string) {
	o.Cve = v
}

// GetCwes returns the Cwes field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetCwes() []string {
	if o == nil || IsNil(o.Cwes) {
		var ret []string
		return ret
	}
	return o.Cwes
}

// GetCwesOk returns a tuple with the Cwes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetCwesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cwes) {
		return nil, false
	}
	return o.Cwes, true
}

// HasCwes returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasCwes() bool {
	if o != nil && !IsNil(o.Cwes) {
		return true
	}

	return false
}

// SetCwes gets a reference to the given []string and assigns it to the Cwes field.
func (o *AdvisoryKEVCatalogVulnerability) SetCwes(v []string) {
	o.Cwes = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryKEVCatalogVulnerability) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *AdvisoryKEVCatalogVulnerability) SetDueDate(v string) {
	o.DueDate = &v
}

// GetKnownRansomwareCampaignUse returns the KnownRansomwareCampaignUse field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetKnownRansomwareCampaignUse() string {
	if o == nil || IsNil(o.KnownRansomwareCampaignUse) {
		var ret string
		return ret
	}
	return *o.KnownRansomwareCampaignUse
}

// GetKnownRansomwareCampaignUseOk returns a tuple with the KnownRansomwareCampaignUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetKnownRansomwareCampaignUseOk() (*string, bool) {
	if o == nil || IsNil(o.KnownRansomwareCampaignUse) {
		return nil, false
	}
	return o.KnownRansomwareCampaignUse, true
}

// HasKnownRansomwareCampaignUse returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasKnownRansomwareCampaignUse() bool {
	if o != nil && !IsNil(o.KnownRansomwareCampaignUse) {
		return true
	}

	return false
}

// SetKnownRansomwareCampaignUse gets a reference to the given string and assigns it to the KnownRansomwareCampaignUse field.
func (o *AdvisoryKEVCatalogVulnerability) SetKnownRansomwareCampaignUse(v string) {
	o.KnownRansomwareCampaignUse = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *AdvisoryKEVCatalogVulnerability) SetNotes(v string) {
	o.Notes = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryKEVCatalogVulnerability) SetProduct(v string) {
	o.Product = &v
}

// GetRequiredAction returns the RequiredAction field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetRequiredAction() string {
	if o == nil || IsNil(o.RequiredAction) {
		var ret string
		return ret
	}
	return *o.RequiredAction
}

// GetRequiredActionOk returns a tuple with the RequiredAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetRequiredActionOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredAction) {
		return nil, false
	}
	return o.RequiredAction, true
}

// HasRequiredAction returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasRequiredAction() bool {
	if o != nil && !IsNil(o.RequiredAction) {
		return true
	}

	return false
}

// SetRequiredAction gets a reference to the given string and assigns it to the RequiredAction field.
func (o *AdvisoryKEVCatalogVulnerability) SetRequiredAction(v string) {
	o.RequiredAction = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *AdvisoryKEVCatalogVulnerability) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetVendorProject returns the VendorProject field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetVendorProject() string {
	if o == nil || IsNil(o.VendorProject) {
		var ret string
		return ret
	}
	return *o.VendorProject
}

// GetVendorProjectOk returns a tuple with the VendorProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetVendorProjectOk() (*string, bool) {
	if o == nil || IsNil(o.VendorProject) {
		return nil, false
	}
	return o.VendorProject, true
}

// HasVendorProject returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasVendorProject() bool {
	if o != nil && !IsNil(o.VendorProject) {
		return true
	}

	return false
}

// SetVendorProject gets a reference to the given string and assigns it to the VendorProject field.
func (o *AdvisoryKEVCatalogVulnerability) SetVendorProject(v string) {
	o.VendorProject = &v
}

// GetVulnerabilityName returns the VulnerabilityName field value if set, zero value otherwise.
func (o *AdvisoryKEVCatalogVulnerability) GetVulnerabilityName() string {
	if o == nil || IsNil(o.VulnerabilityName) {
		var ret string
		return ret
	}
	return *o.VulnerabilityName
}

// GetVulnerabilityNameOk returns a tuple with the VulnerabilityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryKEVCatalogVulnerability) GetVulnerabilityNameOk() (*string, bool) {
	if o == nil || IsNil(o.VulnerabilityName) {
		return nil, false
	}
	return o.VulnerabilityName, true
}

// HasVulnerabilityName returns a boolean if a field has been set.
func (o *AdvisoryKEVCatalogVulnerability) HasVulnerabilityName() bool {
	if o != nil && !IsNil(o.VulnerabilityName) {
		return true
	}

	return false
}

// SetVulnerabilityName gets a reference to the given string and assigns it to the VulnerabilityName field.
func (o *AdvisoryKEVCatalogVulnerability) SetVulnerabilityName(v string) {
	o.VulnerabilityName = &v
}

func (o AdvisoryKEVCatalogVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryKEVCatalogVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Cwes) {
		toSerialize["cwes"] = o.Cwes
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.KnownRansomwareCampaignUse) {
		toSerialize["knownRansomwareCampaignUse"] = o.KnownRansomwareCampaignUse
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.RequiredAction) {
		toSerialize["requiredAction"] = o.RequiredAction
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	if !IsNil(o.VendorProject) {
		toSerialize["vendorProject"] = o.VendorProject
	}
	if !IsNil(o.VulnerabilityName) {
		toSerialize["vulnerabilityName"] = o.VulnerabilityName
	}
	return toSerialize, nil
}

type NullableAdvisoryKEVCatalogVulnerability struct {
	value *AdvisoryKEVCatalogVulnerability
	isSet bool
}

func (v NullableAdvisoryKEVCatalogVulnerability) Get() *AdvisoryKEVCatalogVulnerability {
	return v.value
}

func (v *NullableAdvisoryKEVCatalogVulnerability) Set(val *AdvisoryKEVCatalogVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryKEVCatalogVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryKEVCatalogVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryKEVCatalogVulnerability(val *AdvisoryKEVCatalogVulnerability) *NullableAdvisoryKEVCatalogVulnerability {
	return &NullableAdvisoryKEVCatalogVulnerability{value: val, isSet: true}
}

func (v NullableAdvisoryKEVCatalogVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryKEVCatalogVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


