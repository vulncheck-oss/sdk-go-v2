/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiEPSSData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiEPSSData{}

// ApiEPSSData struct for ApiEPSSData
type ApiEPSSData struct {
	Timestamp *string `json:"_timestamp,omitempty"`
	Cve *string `json:"cve,omitempty"`
	EpssPercentile *float32 `json:"epss_percentile,omitempty"`
	EpssScore *float32 `json:"epss_score,omitempty"`
}

// NewApiEPSSData instantiates a new ApiEPSSData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiEPSSData() *ApiEPSSData {
	this := ApiEPSSData{}
	return &this
}

// NewApiEPSSDataWithDefaults instantiates a new ApiEPSSData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiEPSSDataWithDefaults() *ApiEPSSData {
	this := ApiEPSSData{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ApiEPSSData) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEPSSData) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ApiEPSSData) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ApiEPSSData) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiEPSSData) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEPSSData) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiEPSSData) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *ApiEPSSData) SetCve(v string) {
	o.Cve = &v
}

// GetEpssPercentile returns the EpssPercentile field value if set, zero value otherwise.
func (o *ApiEPSSData) GetEpssPercentile() float32 {
	if o == nil || IsNil(o.EpssPercentile) {
		var ret float32
		return ret
	}
	return *o.EpssPercentile
}

// GetEpssPercentileOk returns a tuple with the EpssPercentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEPSSData) GetEpssPercentileOk() (*float32, bool) {
	if o == nil || IsNil(o.EpssPercentile) {
		return nil, false
	}
	return o.EpssPercentile, true
}

// HasEpssPercentile returns a boolean if a field has been set.
func (o *ApiEPSSData) HasEpssPercentile() bool {
	if o != nil && !IsNil(o.EpssPercentile) {
		return true
	}

	return false
}

// SetEpssPercentile gets a reference to the given float32 and assigns it to the EpssPercentile field.
func (o *ApiEPSSData) SetEpssPercentile(v float32) {
	o.EpssPercentile = &v
}

// GetEpssScore returns the EpssScore field value if set, zero value otherwise.
func (o *ApiEPSSData) GetEpssScore() float32 {
	if o == nil || IsNil(o.EpssScore) {
		var ret float32
		return ret
	}
	return *o.EpssScore
}

// GetEpssScoreOk returns a tuple with the EpssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEPSSData) GetEpssScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.EpssScore) {
		return nil, false
	}
	return o.EpssScore, true
}

// HasEpssScore returns a boolean if a field has been set.
func (o *ApiEPSSData) HasEpssScore() bool {
	if o != nil && !IsNil(o.EpssScore) {
		return true
	}

	return false
}

// SetEpssScore gets a reference to the given float32 and assigns it to the EpssScore field.
func (o *ApiEPSSData) SetEpssScore(v float32) {
	o.EpssScore = &v
}

func (o ApiEPSSData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiEPSSData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["_timestamp"] = o.Timestamp
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.EpssPercentile) {
		toSerialize["epss_percentile"] = o.EpssPercentile
	}
	if !IsNil(o.EpssScore) {
		toSerialize["epss_score"] = o.EpssScore
	}
	return toSerialize, nil
}

type NullableApiEPSSData struct {
	value *ApiEPSSData
	isSet bool
}

func (v NullableApiEPSSData) Get() *ApiEPSSData {
	return v.value
}

func (v *NullableApiEPSSData) Set(val *ApiEPSSData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiEPSSData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiEPSSData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiEPSSData(val *ApiEPSSData) *NullableApiEPSSData {
	return &NullableApiEPSSData{value: val, isSet: true}
}

func (v NullableApiEPSSData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiEPSSData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


