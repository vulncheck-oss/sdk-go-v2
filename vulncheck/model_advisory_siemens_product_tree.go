/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySiemensProductTree type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySiemensProductTree{}

// AdvisorySiemensProductTree struct for AdvisorySiemensProductTree
type AdvisorySiemensProductTree struct {
	Branches []AdvisorySiemensBranch `json:"branches,omitempty"`
}

// NewAdvisorySiemensProductTree instantiates a new AdvisorySiemensProductTree object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySiemensProductTree() *AdvisorySiemensProductTree {
	this := AdvisorySiemensProductTree{}
	return &this
}

// NewAdvisorySiemensProductTreeWithDefaults instantiates a new AdvisorySiemensProductTree object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySiemensProductTreeWithDefaults() *AdvisorySiemensProductTree {
	this := AdvisorySiemensProductTree{}
	return &this
}

// GetBranches returns the Branches field value if set, zero value otherwise.
func (o *AdvisorySiemensProductTree) GetBranches() []AdvisorySiemensBranch {
	if o == nil || IsNil(o.Branches) {
		var ret []AdvisorySiemensBranch
		return ret
	}
	return o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySiemensProductTree) GetBranchesOk() ([]AdvisorySiemensBranch, bool) {
	if o == nil || IsNil(o.Branches) {
		return nil, false
	}
	return o.Branches, true
}

// HasBranches returns a boolean if a field has been set.
func (o *AdvisorySiemensProductTree) HasBranches() bool {
	if o != nil && !IsNil(o.Branches) {
		return true
	}

	return false
}

// SetBranches gets a reference to the given []AdvisorySiemensBranch and assigns it to the Branches field.
func (o *AdvisorySiemensProductTree) SetBranches(v []AdvisorySiemensBranch) {
	o.Branches = v
}

func (o AdvisorySiemensProductTree) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySiemensProductTree) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branches) {
		toSerialize["branches"] = o.Branches
	}
	return toSerialize, nil
}

type NullableAdvisorySiemensProductTree struct {
	value *AdvisorySiemensProductTree
	isSet bool
}

func (v NullableAdvisorySiemensProductTree) Get() *AdvisorySiemensProductTree {
	return v.value
}

func (v *NullableAdvisorySiemensProductTree) Set(val *AdvisorySiemensProductTree) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySiemensProductTree) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySiemensProductTree) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySiemensProductTree(val *AdvisorySiemensProductTree) *NullableAdvisorySiemensProductTree {
	return &NullableAdvisorySiemensProductTree{value: val, isSet: true}
}

func (v NullableAdvisorySiemensProductTree) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySiemensProductTree) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


