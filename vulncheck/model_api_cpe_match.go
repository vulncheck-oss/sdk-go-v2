/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCPEMatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCPEMatch{}

// ApiCPEMatch struct for ApiCPEMatch
type ApiCPEMatch struct {
	Cpe22Uri *string `json:"cpe22Uri,omitempty"`
	Cpe23Uri *string `json:"cpe23Uri,omitempty"`
	CpeName []ApiCPEName `json:"cpe_name,omitempty"`
	VersionEndExcluding *string `json:"versionEndExcluding,omitempty"`
	VersionEndIncluding *string `json:"versionEndIncluding,omitempty"`
	VersionStartExcluding *string `json:"versionStartExcluding,omitempty"`
	VersionStartIncluding *string `json:"versionStartIncluding,omitempty"`
	Vulnerable *bool `json:"vulnerable,omitempty"`
}

// NewApiCPEMatch instantiates a new ApiCPEMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCPEMatch() *ApiCPEMatch {
	this := ApiCPEMatch{}
	return &this
}

// NewApiCPEMatchWithDefaults instantiates a new ApiCPEMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCPEMatchWithDefaults() *ApiCPEMatch {
	this := ApiCPEMatch{}
	return &this
}

// GetCpe22Uri returns the Cpe22Uri field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetCpe22Uri() string {
	if o == nil || IsNil(o.Cpe22Uri) {
		var ret string
		return ret
	}
	return *o.Cpe22Uri
}

// GetCpe22UriOk returns a tuple with the Cpe22Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetCpe22UriOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe22Uri) {
		return nil, false
	}
	return o.Cpe22Uri, true
}

// HasCpe22Uri returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasCpe22Uri() bool {
	if o != nil && !IsNil(o.Cpe22Uri) {
		return true
	}

	return false
}

// SetCpe22Uri gets a reference to the given string and assigns it to the Cpe22Uri field.
func (o *ApiCPEMatch) SetCpe22Uri(v string) {
	o.Cpe22Uri = &v
}

// GetCpe23Uri returns the Cpe23Uri field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetCpe23Uri() string {
	if o == nil || IsNil(o.Cpe23Uri) {
		var ret string
		return ret
	}
	return *o.Cpe23Uri
}

// GetCpe23UriOk returns a tuple with the Cpe23Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetCpe23UriOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe23Uri) {
		return nil, false
	}
	return o.Cpe23Uri, true
}

// HasCpe23Uri returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasCpe23Uri() bool {
	if o != nil && !IsNil(o.Cpe23Uri) {
		return true
	}

	return false
}

// SetCpe23Uri gets a reference to the given string and assigns it to the Cpe23Uri field.
func (o *ApiCPEMatch) SetCpe23Uri(v string) {
	o.Cpe23Uri = &v
}

// GetCpeName returns the CpeName field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetCpeName() []ApiCPEName {
	if o == nil || IsNil(o.CpeName) {
		var ret []ApiCPEName
		return ret
	}
	return o.CpeName
}

// GetCpeNameOk returns a tuple with the CpeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetCpeNameOk() ([]ApiCPEName, bool) {
	if o == nil || IsNil(o.CpeName) {
		return nil, false
	}
	return o.CpeName, true
}

// HasCpeName returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasCpeName() bool {
	if o != nil && !IsNil(o.CpeName) {
		return true
	}

	return false
}

// SetCpeName gets a reference to the given []ApiCPEName and assigns it to the CpeName field.
func (o *ApiCPEMatch) SetCpeName(v []ApiCPEName) {
	o.CpeName = v
}

// GetVersionEndExcluding returns the VersionEndExcluding field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetVersionEndExcluding() string {
	if o == nil || IsNil(o.VersionEndExcluding) {
		var ret string
		return ret
	}
	return *o.VersionEndExcluding
}

// GetVersionEndExcludingOk returns a tuple with the VersionEndExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetVersionEndExcludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionEndExcluding) {
		return nil, false
	}
	return o.VersionEndExcluding, true
}

// HasVersionEndExcluding returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasVersionEndExcluding() bool {
	if o != nil && !IsNil(o.VersionEndExcluding) {
		return true
	}

	return false
}

// SetVersionEndExcluding gets a reference to the given string and assigns it to the VersionEndExcluding field.
func (o *ApiCPEMatch) SetVersionEndExcluding(v string) {
	o.VersionEndExcluding = &v
}

// GetVersionEndIncluding returns the VersionEndIncluding field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetVersionEndIncluding() string {
	if o == nil || IsNil(o.VersionEndIncluding) {
		var ret string
		return ret
	}
	return *o.VersionEndIncluding
}

// GetVersionEndIncludingOk returns a tuple with the VersionEndIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetVersionEndIncludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionEndIncluding) {
		return nil, false
	}
	return o.VersionEndIncluding, true
}

// HasVersionEndIncluding returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasVersionEndIncluding() bool {
	if o != nil && !IsNil(o.VersionEndIncluding) {
		return true
	}

	return false
}

// SetVersionEndIncluding gets a reference to the given string and assigns it to the VersionEndIncluding field.
func (o *ApiCPEMatch) SetVersionEndIncluding(v string) {
	o.VersionEndIncluding = &v
}

// GetVersionStartExcluding returns the VersionStartExcluding field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetVersionStartExcluding() string {
	if o == nil || IsNil(o.VersionStartExcluding) {
		var ret string
		return ret
	}
	return *o.VersionStartExcluding
}

// GetVersionStartExcludingOk returns a tuple with the VersionStartExcluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetVersionStartExcludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionStartExcluding) {
		return nil, false
	}
	return o.VersionStartExcluding, true
}

// HasVersionStartExcluding returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasVersionStartExcluding() bool {
	if o != nil && !IsNil(o.VersionStartExcluding) {
		return true
	}

	return false
}

// SetVersionStartExcluding gets a reference to the given string and assigns it to the VersionStartExcluding field.
func (o *ApiCPEMatch) SetVersionStartExcluding(v string) {
	o.VersionStartExcluding = &v
}

// GetVersionStartIncluding returns the VersionStartIncluding field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetVersionStartIncluding() string {
	if o == nil || IsNil(o.VersionStartIncluding) {
		var ret string
		return ret
	}
	return *o.VersionStartIncluding
}

// GetVersionStartIncludingOk returns a tuple with the VersionStartIncluding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetVersionStartIncludingOk() (*string, bool) {
	if o == nil || IsNil(o.VersionStartIncluding) {
		return nil, false
	}
	return o.VersionStartIncluding, true
}

// HasVersionStartIncluding returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasVersionStartIncluding() bool {
	if o != nil && !IsNil(o.VersionStartIncluding) {
		return true
	}

	return false
}

// SetVersionStartIncluding gets a reference to the given string and assigns it to the VersionStartIncluding field.
func (o *ApiCPEMatch) SetVersionStartIncluding(v string) {
	o.VersionStartIncluding = &v
}

// GetVulnerable returns the Vulnerable field value if set, zero value otherwise.
func (o *ApiCPEMatch) GetVulnerable() bool {
	if o == nil || IsNil(o.Vulnerable) {
		var ret bool
		return ret
	}
	return *o.Vulnerable
}

// GetVulnerableOk returns a tuple with the Vulnerable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCPEMatch) GetVulnerableOk() (*bool, bool) {
	if o == nil || IsNil(o.Vulnerable) {
		return nil, false
	}
	return o.Vulnerable, true
}

// HasVulnerable returns a boolean if a field has been set.
func (o *ApiCPEMatch) HasVulnerable() bool {
	if o != nil && !IsNil(o.Vulnerable) {
		return true
	}

	return false
}

// SetVulnerable gets a reference to the given bool and assigns it to the Vulnerable field.
func (o *ApiCPEMatch) SetVulnerable(v bool) {
	o.Vulnerable = &v
}

func (o ApiCPEMatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCPEMatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpe22Uri) {
		toSerialize["cpe22Uri"] = o.Cpe22Uri
	}
	if !IsNil(o.Cpe23Uri) {
		toSerialize["cpe23Uri"] = o.Cpe23Uri
	}
	if !IsNil(o.CpeName) {
		toSerialize["cpe_name"] = o.CpeName
	}
	if !IsNil(o.VersionEndExcluding) {
		toSerialize["versionEndExcluding"] = o.VersionEndExcluding
	}
	if !IsNil(o.VersionEndIncluding) {
		toSerialize["versionEndIncluding"] = o.VersionEndIncluding
	}
	if !IsNil(o.VersionStartExcluding) {
		toSerialize["versionStartExcluding"] = o.VersionStartExcluding
	}
	if !IsNil(o.VersionStartIncluding) {
		toSerialize["versionStartIncluding"] = o.VersionStartIncluding
	}
	if !IsNil(o.Vulnerable) {
		toSerialize["vulnerable"] = o.Vulnerable
	}
	return toSerialize, nil
}

type NullableApiCPEMatch struct {
	value *ApiCPEMatch
	isSet bool
}

func (v NullableApiCPEMatch) Get() *ApiCPEMatch {
	return v.value
}

func (v *NullableApiCPEMatch) Set(val *ApiCPEMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCPEMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCPEMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCPEMatch(val *ApiCPEMatch) *NullableApiCPEMatch {
	return &NullableApiCPEMatch{value: val, isSet: true}
}

func (v NullableApiCPEMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCPEMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


