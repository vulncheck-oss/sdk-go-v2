/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryHitachiEnergy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryHitachiEnergy{}

// AdvisoryHitachiEnergy struct for AdvisoryHitachiEnergy
type AdvisoryHitachiEnergy struct {
	AdvisoryId *string `json:"advisory_id,omitempty"`
	CsafUrl *string `json:"csaf_url,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Exploited *bool `json:"exploited,omitempty"`
	Products []string `json:"products,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryHitachiEnergy instantiates a new AdvisoryHitachiEnergy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryHitachiEnergy() *AdvisoryHitachiEnergy {
	this := AdvisoryHitachiEnergy{}
	return &this
}

// NewAdvisoryHitachiEnergyWithDefaults instantiates a new AdvisoryHitachiEnergy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryHitachiEnergyWithDefaults() *AdvisoryHitachiEnergy {
	this := AdvisoryHitachiEnergy{}
	return &this
}

// GetAdvisoryId returns the AdvisoryId field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetAdvisoryId() string {
	if o == nil || IsNil(o.AdvisoryId) {
		var ret string
		return ret
	}
	return *o.AdvisoryId
}

// GetAdvisoryIdOk returns a tuple with the AdvisoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetAdvisoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdvisoryId) {
		return nil, false
	}
	return o.AdvisoryId, true
}

// HasAdvisoryId returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasAdvisoryId() bool {
	if o != nil && !IsNil(o.AdvisoryId) {
		return true
	}

	return false
}

// SetAdvisoryId gets a reference to the given string and assigns it to the AdvisoryId field.
func (o *AdvisoryHitachiEnergy) SetAdvisoryId(v string) {
	o.AdvisoryId = &v
}

// GetCsafUrl returns the CsafUrl field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetCsafUrl() string {
	if o == nil || IsNil(o.CsafUrl) {
		var ret string
		return ret
	}
	return *o.CsafUrl
}

// GetCsafUrlOk returns a tuple with the CsafUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetCsafUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CsafUrl) {
		return nil, false
	}
	return o.CsafUrl, true
}

// HasCsafUrl returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasCsafUrl() bool {
	if o != nil && !IsNil(o.CsafUrl) {
		return true
	}

	return false
}

// SetCsafUrl gets a reference to the given string and assigns it to the CsafUrl field.
func (o *AdvisoryHitachiEnergy) SetCsafUrl(v string) {
	o.CsafUrl = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryHitachiEnergy) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryHitachiEnergy) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetExploited returns the Exploited field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetExploited() bool {
	if o == nil || IsNil(o.Exploited) {
		var ret bool
		return ret
	}
	return *o.Exploited
}

// GetExploitedOk returns a tuple with the Exploited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetExploitedOk() (*bool, bool) {
	if o == nil || IsNil(o.Exploited) {
		return nil, false
	}
	return o.Exploited, true
}

// HasExploited returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasExploited() bool {
	if o != nil && !IsNil(o.Exploited) {
		return true
	}

	return false
}

// SetExploited gets a reference to the given bool and assigns it to the Exploited field.
func (o *AdvisoryHitachiEnergy) SetExploited(v bool) {
	o.Exploited = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetProducts() []string {
	if o == nil || IsNil(o.Products) {
		var ret []string
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetProductsOk() ([]string, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []string and assigns it to the Products field.
func (o *AdvisoryHitachiEnergy) SetProducts(v []string) {
	o.Products = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryHitachiEnergy) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryHitachiEnergy) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryHitachiEnergy) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryHitachiEnergy) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryHitachiEnergy) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryHitachiEnergy) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryHitachiEnergy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryHitachiEnergy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvisoryId) {
		toSerialize["advisory_id"] = o.AdvisoryId
	}
	if !IsNil(o.CsafUrl) {
		toSerialize["csaf_url"] = o.CsafUrl
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Exploited) {
		toSerialize["exploited"] = o.Exploited
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryHitachiEnergy struct {
	value *AdvisoryHitachiEnergy
	isSet bool
}

func (v NullableAdvisoryHitachiEnergy) Get() *AdvisoryHitachiEnergy {
	return v.value
}

func (v *NullableAdvisoryHitachiEnergy) Set(val *AdvisoryHitachiEnergy) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryHitachiEnergy) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryHitachiEnergy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryHitachiEnergy(val *AdvisoryHitachiEnergy) *NullableAdvisoryHitachiEnergy {
	return &NullableAdvisoryHitachiEnergy{value: val, isSet: true}
}

func (v NullableAdvisoryHitachiEnergy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryHitachiEnergy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


