/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCVSSV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCVSSV2{}

// AdvisoryCVSSV2 struct for AdvisoryCVSSV2
type AdvisoryCVSSV2 struct {
	AccessComplexity *string `json:"accessComplexity,omitempty"`
	AccessVector *string `json:"accessVector,omitempty"`
	Authentication *string `json:"authentication,omitempty"`
	AvailabilityImpact *string `json:"availabilityImpact,omitempty"`
	AvailabilityRequirement *string `json:"availabilityRequirement,omitempty"`
	BaseScore *float32 `json:"baseScore,omitempty"`
	CollateralDamagePotential *string `json:"collateralDamagePotential,omitempty"`
	ConfidentialityImpact *string `json:"confidentialityImpact,omitempty"`
	ConfidentialityRequirement *string `json:"confidentialityRequirement,omitempty"`
	EnvironmentalScore *float32 `json:"environmentalScore,omitempty"`
	Exploitability *string `json:"exploitability,omitempty"`
	IntegrityImpact *string `json:"integrityImpact,omitempty"`
	IntegrityRequirement *string `json:"integrityRequirement,omitempty"`
	RemediationLevel *string `json:"remediationLevel,omitempty"`
	ReportConfidence *string `json:"reportConfidence,omitempty"`
	TargetDistribution *string `json:"targetDistribution,omitempty"`
	TemporalScore *float32 `json:"temporalScore,omitempty"`
}

// NewAdvisoryCVSSV2 instantiates a new AdvisoryCVSSV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCVSSV2() *AdvisoryCVSSV2 {
	this := AdvisoryCVSSV2{}
	return &this
}

// NewAdvisoryCVSSV2WithDefaults instantiates a new AdvisoryCVSSV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCVSSV2WithDefaults() *AdvisoryCVSSV2 {
	this := AdvisoryCVSSV2{}
	return &this
}

// GetAccessComplexity returns the AccessComplexity field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetAccessComplexity() string {
	if o == nil || IsNil(o.AccessComplexity) {
		var ret string
		return ret
	}
	return *o.AccessComplexity
}

// GetAccessComplexityOk returns a tuple with the AccessComplexity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetAccessComplexityOk() (*string, bool) {
	if o == nil || IsNil(o.AccessComplexity) {
		return nil, false
	}
	return o.AccessComplexity, true
}

// HasAccessComplexity returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasAccessComplexity() bool {
	if o != nil && !IsNil(o.AccessComplexity) {
		return true
	}

	return false
}

// SetAccessComplexity gets a reference to the given string and assigns it to the AccessComplexity field.
func (o *AdvisoryCVSSV2) SetAccessComplexity(v string) {
	o.AccessComplexity = &v
}

// GetAccessVector returns the AccessVector field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetAccessVector() string {
	if o == nil || IsNil(o.AccessVector) {
		var ret string
		return ret
	}
	return *o.AccessVector
}

// GetAccessVectorOk returns a tuple with the AccessVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetAccessVectorOk() (*string, bool) {
	if o == nil || IsNil(o.AccessVector) {
		return nil, false
	}
	return o.AccessVector, true
}

// HasAccessVector returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasAccessVector() bool {
	if o != nil && !IsNil(o.AccessVector) {
		return true
	}

	return false
}

// SetAccessVector gets a reference to the given string and assigns it to the AccessVector field.
func (o *AdvisoryCVSSV2) SetAccessVector(v string) {
	o.AccessVector = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *AdvisoryCVSSV2) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetAvailabilityImpact returns the AvailabilityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetAvailabilityImpact() string {
	if o == nil || IsNil(o.AvailabilityImpact) {
		var ret string
		return ret
	}
	return *o.AvailabilityImpact
}

// GetAvailabilityImpactOk returns a tuple with the AvailabilityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetAvailabilityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityImpact) {
		return nil, false
	}
	return o.AvailabilityImpact, true
}

// HasAvailabilityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasAvailabilityImpact() bool {
	if o != nil && !IsNil(o.AvailabilityImpact) {
		return true
	}

	return false
}

// SetAvailabilityImpact gets a reference to the given string and assigns it to the AvailabilityImpact field.
func (o *AdvisoryCVSSV2) SetAvailabilityImpact(v string) {
	o.AvailabilityImpact = &v
}

// GetAvailabilityRequirement returns the AvailabilityRequirement field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetAvailabilityRequirement() string {
	if o == nil || IsNil(o.AvailabilityRequirement) {
		var ret string
		return ret
	}
	return *o.AvailabilityRequirement
}

// GetAvailabilityRequirementOk returns a tuple with the AvailabilityRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetAvailabilityRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityRequirement) {
		return nil, false
	}
	return o.AvailabilityRequirement, true
}

// HasAvailabilityRequirement returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasAvailabilityRequirement() bool {
	if o != nil && !IsNil(o.AvailabilityRequirement) {
		return true
	}

	return false
}

// SetAvailabilityRequirement gets a reference to the given string and assigns it to the AvailabilityRequirement field.
func (o *AdvisoryCVSSV2) SetAvailabilityRequirement(v string) {
	o.AvailabilityRequirement = &v
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetBaseScore() float32 {
	if o == nil || IsNil(o.BaseScore) {
		var ret float32
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetBaseScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given float32 and assigns it to the BaseScore field.
func (o *AdvisoryCVSSV2) SetBaseScore(v float32) {
	o.BaseScore = &v
}

// GetCollateralDamagePotential returns the CollateralDamagePotential field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetCollateralDamagePotential() string {
	if o == nil || IsNil(o.CollateralDamagePotential) {
		var ret string
		return ret
	}
	return *o.CollateralDamagePotential
}

// GetCollateralDamagePotentialOk returns a tuple with the CollateralDamagePotential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetCollateralDamagePotentialOk() (*string, bool) {
	if o == nil || IsNil(o.CollateralDamagePotential) {
		return nil, false
	}
	return o.CollateralDamagePotential, true
}

// HasCollateralDamagePotential returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasCollateralDamagePotential() bool {
	if o != nil && !IsNil(o.CollateralDamagePotential) {
		return true
	}

	return false
}

// SetCollateralDamagePotential gets a reference to the given string and assigns it to the CollateralDamagePotential field.
func (o *AdvisoryCVSSV2) SetCollateralDamagePotential(v string) {
	o.CollateralDamagePotential = &v
}

// GetConfidentialityImpact returns the ConfidentialityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetConfidentialityImpact() string {
	if o == nil || IsNil(o.ConfidentialityImpact) {
		var ret string
		return ret
	}
	return *o.ConfidentialityImpact
}

// GetConfidentialityImpactOk returns a tuple with the ConfidentialityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetConfidentialityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.ConfidentialityImpact) {
		return nil, false
	}
	return o.ConfidentialityImpact, true
}

// HasConfidentialityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasConfidentialityImpact() bool {
	if o != nil && !IsNil(o.ConfidentialityImpact) {
		return true
	}

	return false
}

// SetConfidentialityImpact gets a reference to the given string and assigns it to the ConfidentialityImpact field.
func (o *AdvisoryCVSSV2) SetConfidentialityImpact(v string) {
	o.ConfidentialityImpact = &v
}

// GetConfidentialityRequirement returns the ConfidentialityRequirement field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetConfidentialityRequirement() string {
	if o == nil || IsNil(o.ConfidentialityRequirement) {
		var ret string
		return ret
	}
	return *o.ConfidentialityRequirement
}

// GetConfidentialityRequirementOk returns a tuple with the ConfidentialityRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetConfidentialityRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.ConfidentialityRequirement) {
		return nil, false
	}
	return o.ConfidentialityRequirement, true
}

// HasConfidentialityRequirement returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasConfidentialityRequirement() bool {
	if o != nil && !IsNil(o.ConfidentialityRequirement) {
		return true
	}

	return false
}

// SetConfidentialityRequirement gets a reference to the given string and assigns it to the ConfidentialityRequirement field.
func (o *AdvisoryCVSSV2) SetConfidentialityRequirement(v string) {
	o.ConfidentialityRequirement = &v
}

// GetEnvironmentalScore returns the EnvironmentalScore field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetEnvironmentalScore() float32 {
	if o == nil || IsNil(o.EnvironmentalScore) {
		var ret float32
		return ret
	}
	return *o.EnvironmentalScore
}

// GetEnvironmentalScoreOk returns a tuple with the EnvironmentalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetEnvironmentalScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.EnvironmentalScore) {
		return nil, false
	}
	return o.EnvironmentalScore, true
}

// HasEnvironmentalScore returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasEnvironmentalScore() bool {
	if o != nil && !IsNil(o.EnvironmentalScore) {
		return true
	}

	return false
}

// SetEnvironmentalScore gets a reference to the given float32 and assigns it to the EnvironmentalScore field.
func (o *AdvisoryCVSSV2) SetEnvironmentalScore(v float32) {
	o.EnvironmentalScore = &v
}

// GetExploitability returns the Exploitability field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetExploitability() string {
	if o == nil || IsNil(o.Exploitability) {
		var ret string
		return ret
	}
	return *o.Exploitability
}

// GetExploitabilityOk returns a tuple with the Exploitability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetExploitabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Exploitability) {
		return nil, false
	}
	return o.Exploitability, true
}

// HasExploitability returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasExploitability() bool {
	if o != nil && !IsNil(o.Exploitability) {
		return true
	}

	return false
}

// SetExploitability gets a reference to the given string and assigns it to the Exploitability field.
func (o *AdvisoryCVSSV2) SetExploitability(v string) {
	o.Exploitability = &v
}

// GetIntegrityImpact returns the IntegrityImpact field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetIntegrityImpact() string {
	if o == nil || IsNil(o.IntegrityImpact) {
		var ret string
		return ret
	}
	return *o.IntegrityImpact
}

// GetIntegrityImpactOk returns a tuple with the IntegrityImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetIntegrityImpactOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrityImpact) {
		return nil, false
	}
	return o.IntegrityImpact, true
}

// HasIntegrityImpact returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasIntegrityImpact() bool {
	if o != nil && !IsNil(o.IntegrityImpact) {
		return true
	}

	return false
}

// SetIntegrityImpact gets a reference to the given string and assigns it to the IntegrityImpact field.
func (o *AdvisoryCVSSV2) SetIntegrityImpact(v string) {
	o.IntegrityImpact = &v
}

// GetIntegrityRequirement returns the IntegrityRequirement field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetIntegrityRequirement() string {
	if o == nil || IsNil(o.IntegrityRequirement) {
		var ret string
		return ret
	}
	return *o.IntegrityRequirement
}

// GetIntegrityRequirementOk returns a tuple with the IntegrityRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetIntegrityRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrityRequirement) {
		return nil, false
	}
	return o.IntegrityRequirement, true
}

// HasIntegrityRequirement returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasIntegrityRequirement() bool {
	if o != nil && !IsNil(o.IntegrityRequirement) {
		return true
	}

	return false
}

// SetIntegrityRequirement gets a reference to the given string and assigns it to the IntegrityRequirement field.
func (o *AdvisoryCVSSV2) SetIntegrityRequirement(v string) {
	o.IntegrityRequirement = &v
}

// GetRemediationLevel returns the RemediationLevel field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetRemediationLevel() string {
	if o == nil || IsNil(o.RemediationLevel) {
		var ret string
		return ret
	}
	return *o.RemediationLevel
}

// GetRemediationLevelOk returns a tuple with the RemediationLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetRemediationLevelOk() (*string, bool) {
	if o == nil || IsNil(o.RemediationLevel) {
		return nil, false
	}
	return o.RemediationLevel, true
}

// HasRemediationLevel returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasRemediationLevel() bool {
	if o != nil && !IsNil(o.RemediationLevel) {
		return true
	}

	return false
}

// SetRemediationLevel gets a reference to the given string and assigns it to the RemediationLevel field.
func (o *AdvisoryCVSSV2) SetRemediationLevel(v string) {
	o.RemediationLevel = &v
}

// GetReportConfidence returns the ReportConfidence field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetReportConfidence() string {
	if o == nil || IsNil(o.ReportConfidence) {
		var ret string
		return ret
	}
	return *o.ReportConfidence
}

// GetReportConfidenceOk returns a tuple with the ReportConfidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetReportConfidenceOk() (*string, bool) {
	if o == nil || IsNil(o.ReportConfidence) {
		return nil, false
	}
	return o.ReportConfidence, true
}

// HasReportConfidence returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasReportConfidence() bool {
	if o != nil && !IsNil(o.ReportConfidence) {
		return true
	}

	return false
}

// SetReportConfidence gets a reference to the given string and assigns it to the ReportConfidence field.
func (o *AdvisoryCVSSV2) SetReportConfidence(v string) {
	o.ReportConfidence = &v
}

// GetTargetDistribution returns the TargetDistribution field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetTargetDistribution() string {
	if o == nil || IsNil(o.TargetDistribution) {
		var ret string
		return ret
	}
	return *o.TargetDistribution
}

// GetTargetDistributionOk returns a tuple with the TargetDistribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetTargetDistributionOk() (*string, bool) {
	if o == nil || IsNil(o.TargetDistribution) {
		return nil, false
	}
	return o.TargetDistribution, true
}

// HasTargetDistribution returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasTargetDistribution() bool {
	if o != nil && !IsNil(o.TargetDistribution) {
		return true
	}

	return false
}

// SetTargetDistribution gets a reference to the given string and assigns it to the TargetDistribution field.
func (o *AdvisoryCVSSV2) SetTargetDistribution(v string) {
	o.TargetDistribution = &v
}

// GetTemporalScore returns the TemporalScore field value if set, zero value otherwise.
func (o *AdvisoryCVSSV2) GetTemporalScore() float32 {
	if o == nil || IsNil(o.TemporalScore) {
		var ret float32
		return ret
	}
	return *o.TemporalScore
}

// GetTemporalScoreOk returns a tuple with the TemporalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCVSSV2) GetTemporalScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.TemporalScore) {
		return nil, false
	}
	return o.TemporalScore, true
}

// HasTemporalScore returns a boolean if a field has been set.
func (o *AdvisoryCVSSV2) HasTemporalScore() bool {
	if o != nil && !IsNil(o.TemporalScore) {
		return true
	}

	return false
}

// SetTemporalScore gets a reference to the given float32 and assigns it to the TemporalScore field.
func (o *AdvisoryCVSSV2) SetTemporalScore(v float32) {
	o.TemporalScore = &v
}

func (o AdvisoryCVSSV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCVSSV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessComplexity) {
		toSerialize["accessComplexity"] = o.AccessComplexity
	}
	if !IsNil(o.AccessVector) {
		toSerialize["accessVector"] = o.AccessVector
	}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.AvailabilityImpact) {
		toSerialize["availabilityImpact"] = o.AvailabilityImpact
	}
	if !IsNil(o.AvailabilityRequirement) {
		toSerialize["availabilityRequirement"] = o.AvailabilityRequirement
	}
	if !IsNil(o.BaseScore) {
		toSerialize["baseScore"] = o.BaseScore
	}
	if !IsNil(o.CollateralDamagePotential) {
		toSerialize["collateralDamagePotential"] = o.CollateralDamagePotential
	}
	if !IsNil(o.ConfidentialityImpact) {
		toSerialize["confidentialityImpact"] = o.ConfidentialityImpact
	}
	if !IsNil(o.ConfidentialityRequirement) {
		toSerialize["confidentialityRequirement"] = o.ConfidentialityRequirement
	}
	if !IsNil(o.EnvironmentalScore) {
		toSerialize["environmentalScore"] = o.EnvironmentalScore
	}
	if !IsNil(o.Exploitability) {
		toSerialize["exploitability"] = o.Exploitability
	}
	if !IsNil(o.IntegrityImpact) {
		toSerialize["integrityImpact"] = o.IntegrityImpact
	}
	if !IsNil(o.IntegrityRequirement) {
		toSerialize["integrityRequirement"] = o.IntegrityRequirement
	}
	if !IsNil(o.RemediationLevel) {
		toSerialize["remediationLevel"] = o.RemediationLevel
	}
	if !IsNil(o.ReportConfidence) {
		toSerialize["reportConfidence"] = o.ReportConfidence
	}
	if !IsNil(o.TargetDistribution) {
		toSerialize["targetDistribution"] = o.TargetDistribution
	}
	if !IsNil(o.TemporalScore) {
		toSerialize["temporalScore"] = o.TemporalScore
	}
	return toSerialize, nil
}

type NullableAdvisoryCVSSV2 struct {
	value *AdvisoryCVSSV2
	isSet bool
}

func (v NullableAdvisoryCVSSV2) Get() *AdvisoryCVSSV2 {
	return v.value
}

func (v *NullableAdvisoryCVSSV2) Set(val *AdvisoryCVSSV2) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCVSSV2) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCVSSV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCVSSV2(val *AdvisoryCVSSV2) *NullableAdvisoryCVSSV2 {
	return &NullableAdvisoryCVSSV2{value: val, isSet: true}
}

func (v NullableAdvisoryCVSSV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCVSSV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


