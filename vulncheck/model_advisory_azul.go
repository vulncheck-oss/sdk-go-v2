/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAzul type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAzul{}

// AdvisoryAzul struct for AdvisoryAzul
type AdvisoryAzul struct {
	BaseScore *string `json:"base_score,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	PrimeVersion []AdvisoryPrimeVersion `json:"prime_version,omitempty"`
	Release *string `json:"release,omitempty"`
	Url *string `json:"url,omitempty"`
	ZuluVersion []AdvisoryZuluVersion `json:"zulu_version,omitempty"`
}

// NewAdvisoryAzul instantiates a new AdvisoryAzul object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAzul() *AdvisoryAzul {
	this := AdvisoryAzul{}
	return &this
}

// NewAdvisoryAzulWithDefaults instantiates a new AdvisoryAzul object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAzulWithDefaults() *AdvisoryAzul {
	this := AdvisoryAzul{}
	return &this
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetBaseScore() string {
	if o == nil || IsNil(o.BaseScore) {
		var ret string
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetBaseScoreOk() (*string, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given string and assigns it to the BaseScore field.
func (o *AdvisoryAzul) SetBaseScore(v string) {
	o.BaseScore = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryAzul) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryAzul) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetPrimeVersion returns the PrimeVersion field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetPrimeVersion() []AdvisoryPrimeVersion {
	if o == nil || IsNil(o.PrimeVersion) {
		var ret []AdvisoryPrimeVersion
		return ret
	}
	return o.PrimeVersion
}

// GetPrimeVersionOk returns a tuple with the PrimeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetPrimeVersionOk() ([]AdvisoryPrimeVersion, bool) {
	if o == nil || IsNil(o.PrimeVersion) {
		return nil, false
	}
	return o.PrimeVersion, true
}

// HasPrimeVersion returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasPrimeVersion() bool {
	if o != nil && !IsNil(o.PrimeVersion) {
		return true
	}

	return false
}

// SetPrimeVersion gets a reference to the given []AdvisoryPrimeVersion and assigns it to the PrimeVersion field.
func (o *AdvisoryAzul) SetPrimeVersion(v []AdvisoryPrimeVersion) {
	o.PrimeVersion = v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *AdvisoryAzul) SetRelease(v string) {
	o.Release = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryAzul) SetUrl(v string) {
	o.Url = &v
}

// GetZuluVersion returns the ZuluVersion field value if set, zero value otherwise.
func (o *AdvisoryAzul) GetZuluVersion() []AdvisoryZuluVersion {
	if o == nil || IsNil(o.ZuluVersion) {
		var ret []AdvisoryZuluVersion
		return ret
	}
	return o.ZuluVersion
}

// GetZuluVersionOk returns a tuple with the ZuluVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAzul) GetZuluVersionOk() ([]AdvisoryZuluVersion, bool) {
	if o == nil || IsNil(o.ZuluVersion) {
		return nil, false
	}
	return o.ZuluVersion, true
}

// HasZuluVersion returns a boolean if a field has been set.
func (o *AdvisoryAzul) HasZuluVersion() bool {
	if o != nil && !IsNil(o.ZuluVersion) {
		return true
	}

	return false
}

// SetZuluVersion gets a reference to the given []AdvisoryZuluVersion and assigns it to the ZuluVersion field.
func (o *AdvisoryAzul) SetZuluVersion(v []AdvisoryZuluVersion) {
	o.ZuluVersion = v
}

func (o AdvisoryAzul) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAzul) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseScore) {
		toSerialize["base_score"] = o.BaseScore
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.PrimeVersion) {
		toSerialize["prime_version"] = o.PrimeVersion
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.ZuluVersion) {
		toSerialize["zulu_version"] = o.ZuluVersion
	}
	return toSerialize, nil
}

type NullableAdvisoryAzul struct {
	value *AdvisoryAzul
	isSet bool
}

func (v NullableAdvisoryAzul) Get() *AdvisoryAzul {
	return v.value
}

func (v *NullableAdvisoryAzul) Set(val *AdvisoryAzul) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAzul) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAzul) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAzul(val *AdvisoryAzul) *NullableAdvisoryAzul {
	return &NullableAdvisoryAzul{value: val, isSet: true}
}

func (v NullableAdvisoryAzul) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAzul) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


