/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMCveMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMCveMetadata{}

// AdvisoryMCveMetadata struct for AdvisoryMCveMetadata
type AdvisoryMCveMetadata struct {
	AssignerOrgId *string `json:"assignerOrgId,omitempty"`
	AssignerShortName *string `json:"assignerShortName,omitempty"`
	CveId *string `json:"cveId,omitempty"`
	// FIXME: flip to time
	DatePublished *string `json:"datePublished,omitempty"`
	// FIXME: flip to time
	DateReserved *string `json:"dateReserved,omitempty"`
	// FIXME: flip to time
	DateUpdated *string `json:"dateUpdated,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewAdvisoryMCveMetadata instantiates a new AdvisoryMCveMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMCveMetadata() *AdvisoryMCveMetadata {
	this := AdvisoryMCveMetadata{}
	return &this
}

// NewAdvisoryMCveMetadataWithDefaults instantiates a new AdvisoryMCveMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMCveMetadataWithDefaults() *AdvisoryMCveMetadata {
	this := AdvisoryMCveMetadata{}
	return &this
}

// GetAssignerOrgId returns the AssignerOrgId field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetAssignerOrgId() string {
	if o == nil || IsNil(o.AssignerOrgId) {
		var ret string
		return ret
	}
	return *o.AssignerOrgId
}

// GetAssignerOrgIdOk returns a tuple with the AssignerOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetAssignerOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssignerOrgId) {
		return nil, false
	}
	return o.AssignerOrgId, true
}

// HasAssignerOrgId returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasAssignerOrgId() bool {
	if o != nil && !IsNil(o.AssignerOrgId) {
		return true
	}

	return false
}

// SetAssignerOrgId gets a reference to the given string and assigns it to the AssignerOrgId field.
func (o *AdvisoryMCveMetadata) SetAssignerOrgId(v string) {
	o.AssignerOrgId = &v
}

// GetAssignerShortName returns the AssignerShortName field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetAssignerShortName() string {
	if o == nil || IsNil(o.AssignerShortName) {
		var ret string
		return ret
	}
	return *o.AssignerShortName
}

// GetAssignerShortNameOk returns a tuple with the AssignerShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetAssignerShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.AssignerShortName) {
		return nil, false
	}
	return o.AssignerShortName, true
}

// HasAssignerShortName returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasAssignerShortName() bool {
	if o != nil && !IsNil(o.AssignerShortName) {
		return true
	}

	return false
}

// SetAssignerShortName gets a reference to the given string and assigns it to the AssignerShortName field.
func (o *AdvisoryMCveMetadata) SetAssignerShortName(v string) {
	o.AssignerShortName = &v
}

// GetCveId returns the CveId field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetCveId() string {
	if o == nil || IsNil(o.CveId) {
		var ret string
		return ret
	}
	return *o.CveId
}

// GetCveIdOk returns a tuple with the CveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetCveIdOk() (*string, bool) {
	if o == nil || IsNil(o.CveId) {
		return nil, false
	}
	return o.CveId, true
}

// HasCveId returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasCveId() bool {
	if o != nil && !IsNil(o.CveId) {
		return true
	}

	return false
}

// SetCveId gets a reference to the given string and assigns it to the CveId field.
func (o *AdvisoryMCveMetadata) SetCveId(v string) {
	o.CveId = &v
}

// GetDatePublished returns the DatePublished field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetDatePublished() string {
	if o == nil || IsNil(o.DatePublished) {
		var ret string
		return ret
	}
	return *o.DatePublished
}

// GetDatePublishedOk returns a tuple with the DatePublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetDatePublishedOk() (*string, bool) {
	if o == nil || IsNil(o.DatePublished) {
		return nil, false
	}
	return o.DatePublished, true
}

// HasDatePublished returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasDatePublished() bool {
	if o != nil && !IsNil(o.DatePublished) {
		return true
	}

	return false
}

// SetDatePublished gets a reference to the given string and assigns it to the DatePublished field.
func (o *AdvisoryMCveMetadata) SetDatePublished(v string) {
	o.DatePublished = &v
}

// GetDateReserved returns the DateReserved field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetDateReserved() string {
	if o == nil || IsNil(o.DateReserved) {
		var ret string
		return ret
	}
	return *o.DateReserved
}

// GetDateReservedOk returns a tuple with the DateReserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetDateReservedOk() (*string, bool) {
	if o == nil || IsNil(o.DateReserved) {
		return nil, false
	}
	return o.DateReserved, true
}

// HasDateReserved returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasDateReserved() bool {
	if o != nil && !IsNil(o.DateReserved) {
		return true
	}

	return false
}

// SetDateReserved gets a reference to the given string and assigns it to the DateReserved field.
func (o *AdvisoryMCveMetadata) SetDateReserved(v string) {
	o.DateReserved = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetDateUpdated() string {
	if o == nil || IsNil(o.DateUpdated) {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetDateUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateUpdated) {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasDateUpdated() bool {
	if o != nil && !IsNil(o.DateUpdated) {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *AdvisoryMCveMetadata) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AdvisoryMCveMetadata) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMCveMetadata) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AdvisoryMCveMetadata) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *AdvisoryMCveMetadata) SetState(v string) {
	o.State = &v
}

func (o AdvisoryMCveMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMCveMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignerOrgId) {
		toSerialize["assignerOrgId"] = o.AssignerOrgId
	}
	if !IsNil(o.AssignerShortName) {
		toSerialize["assignerShortName"] = o.AssignerShortName
	}
	if !IsNil(o.CveId) {
		toSerialize["cveId"] = o.CveId
	}
	if !IsNil(o.DatePublished) {
		toSerialize["datePublished"] = o.DatePublished
	}
	if !IsNil(o.DateReserved) {
		toSerialize["dateReserved"] = o.DateReserved
	}
	if !IsNil(o.DateUpdated) {
		toSerialize["dateUpdated"] = o.DateUpdated
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableAdvisoryMCveMetadata struct {
	value *AdvisoryMCveMetadata
	isSet bool
}

func (v NullableAdvisoryMCveMetadata) Get() *AdvisoryMCveMetadata {
	return v.value
}

func (v *NullableAdvisoryMCveMetadata) Set(val *AdvisoryMCveMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMCveMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMCveMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMCveMetadata(val *AdvisoryMCveMetadata) *NullableAdvisoryMCveMetadata {
	return &NullableAdvisoryMCveMetadata{value: val, isSet: true}
}

func (v NullableAdvisoryMCveMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMCveMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


