/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryAdvisoryDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryAdvisoryDetails{}

// AdvisoryAdvisoryDetails struct for AdvisoryAdvisoryDetails
type AdvisoryAdvisoryDetails struct {
	Bugzilla *AdvisoryBugzilla `json:"bugzilla,omitempty"`
	Cve *AdvisoryOvalCVE `json:"cve,omitempty"`
	Issued *AdvisoryIssued `json:"issued,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Updated *AdvisoryUpdated `json:"updated,omitempty"`
}

// NewAdvisoryAdvisoryDetails instantiates a new AdvisoryAdvisoryDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryAdvisoryDetails() *AdvisoryAdvisoryDetails {
	this := AdvisoryAdvisoryDetails{}
	return &this
}

// NewAdvisoryAdvisoryDetailsWithDefaults instantiates a new AdvisoryAdvisoryDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryAdvisoryDetailsWithDefaults() *AdvisoryAdvisoryDetails {
	this := AdvisoryAdvisoryDetails{}
	return &this
}

// GetBugzilla returns the Bugzilla field value if set, zero value otherwise.
func (o *AdvisoryAdvisoryDetails) GetBugzilla() AdvisoryBugzilla {
	if o == nil || IsNil(o.Bugzilla) {
		var ret AdvisoryBugzilla
		return ret
	}
	return *o.Bugzilla
}

// GetBugzillaOk returns a tuple with the Bugzilla field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisoryDetails) GetBugzillaOk() (*AdvisoryBugzilla, bool) {
	if o == nil || IsNil(o.Bugzilla) {
		return nil, false
	}
	return o.Bugzilla, true
}

// HasBugzilla returns a boolean if a field has been set.
func (o *AdvisoryAdvisoryDetails) HasBugzilla() bool {
	if o != nil && !IsNil(o.Bugzilla) {
		return true
	}

	return false
}

// SetBugzilla gets a reference to the given AdvisoryBugzilla and assigns it to the Bugzilla field.
func (o *AdvisoryAdvisoryDetails) SetBugzilla(v AdvisoryBugzilla) {
	o.Bugzilla = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryAdvisoryDetails) GetCve() AdvisoryOvalCVE {
	if o == nil || IsNil(o.Cve) {
		var ret AdvisoryOvalCVE
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisoryDetails) GetCveOk() (*AdvisoryOvalCVE, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryAdvisoryDetails) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given AdvisoryOvalCVE and assigns it to the Cve field.
func (o *AdvisoryAdvisoryDetails) SetCve(v AdvisoryOvalCVE) {
	o.Cve = &v
}

// GetIssued returns the Issued field value if set, zero value otherwise.
func (o *AdvisoryAdvisoryDetails) GetIssued() AdvisoryIssued {
	if o == nil || IsNil(o.Issued) {
		var ret AdvisoryIssued
		return ret
	}
	return *o.Issued
}

// GetIssuedOk returns a tuple with the Issued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisoryDetails) GetIssuedOk() (*AdvisoryIssued, bool) {
	if o == nil || IsNil(o.Issued) {
		return nil, false
	}
	return o.Issued, true
}

// HasIssued returns a boolean if a field has been set.
func (o *AdvisoryAdvisoryDetails) HasIssued() bool {
	if o != nil && !IsNil(o.Issued) {
		return true
	}

	return false
}

// SetIssued gets a reference to the given AdvisoryIssued and assigns it to the Issued field.
func (o *AdvisoryAdvisoryDetails) SetIssued(v AdvisoryIssued) {
	o.Issued = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryAdvisoryDetails) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisoryDetails) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryAdvisoryDetails) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryAdvisoryDetails) SetSeverity(v string) {
	o.Severity = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AdvisoryAdvisoryDetails) GetUpdated() AdvisoryUpdated {
	if o == nil || IsNil(o.Updated) {
		var ret AdvisoryUpdated
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryAdvisoryDetails) GetUpdatedOk() (*AdvisoryUpdated, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AdvisoryAdvisoryDetails) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given AdvisoryUpdated and assigns it to the Updated field.
func (o *AdvisoryAdvisoryDetails) SetUpdated(v AdvisoryUpdated) {
	o.Updated = &v
}

func (o AdvisoryAdvisoryDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryAdvisoryDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bugzilla) {
		toSerialize["bugzilla"] = o.Bugzilla
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.Issued) {
		toSerialize["issued"] = o.Issued
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableAdvisoryAdvisoryDetails struct {
	value *AdvisoryAdvisoryDetails
	isSet bool
}

func (v NullableAdvisoryAdvisoryDetails) Get() *AdvisoryAdvisoryDetails {
	return v.value
}

func (v *NullableAdvisoryAdvisoryDetails) Set(val *AdvisoryAdvisoryDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryAdvisoryDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryAdvisoryDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryAdvisoryDetails(val *AdvisoryAdvisoryDetails) *NullableAdvisoryAdvisoryDetails {
	return &NullableAdvisoryAdvisoryDetails{value: val, isSet: true}
}

func (v NullableAdvisoryAdvisoryDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryAdvisoryDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


