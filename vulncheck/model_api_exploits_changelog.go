/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiExploitsChangelog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiExploitsChangelog{}

// ApiExploitsChangelog struct for ApiExploitsChangelog
type ApiExploitsChangelog struct {
	Changes []ApiExploitsChange `json:"changes,omitempty"`
	Cve *string `json:"cve,omitempty"`
}

// NewApiExploitsChangelog instantiates a new ApiExploitsChangelog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExploitsChangelog() *ApiExploitsChangelog {
	this := ApiExploitsChangelog{}
	return &this
}

// NewApiExploitsChangelogWithDefaults instantiates a new ApiExploitsChangelog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExploitsChangelogWithDefaults() *ApiExploitsChangelog {
	this := ApiExploitsChangelog{}
	return &this
}

// GetChanges returns the Changes field value if set, zero value otherwise.
func (o *ApiExploitsChangelog) GetChanges() []ApiExploitsChange {
	if o == nil || IsNil(o.Changes) {
		var ret []ApiExploitsChange
		return ret
	}
	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitsChangelog) GetChangesOk() ([]ApiExploitsChange, bool) {
	if o == nil || IsNil(o.Changes) {
		return nil, false
	}
	return o.Changes, true
}

// HasChanges returns a boolean if a field has been set.
func (o *ApiExploitsChangelog) HasChanges() bool {
	if o != nil && !IsNil(o.Changes) {
		return true
	}

	return false
}

// SetChanges gets a reference to the given []ApiExploitsChange and assigns it to the Changes field.
func (o *ApiExploitsChangelog) SetChanges(v []ApiExploitsChange) {
	o.Changes = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiExploitsChangelog) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExploitsChangelog) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiExploitsChangelog) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *ApiExploitsChangelog) SetCve(v string) {
	o.Cve = &v
}

func (o ApiExploitsChangelog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiExploitsChangelog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Changes) {
		toSerialize["changes"] = o.Changes
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	return toSerialize, nil
}

type NullableApiExploitsChangelog struct {
	value *ApiExploitsChangelog
	isSet bool
}

func (v NullableApiExploitsChangelog) Get() *ApiExploitsChangelog {
	return v.value
}

func (v *NullableApiExploitsChangelog) Set(val *ApiExploitsChangelog) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExploitsChangelog) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExploitsChangelog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExploitsChangelog(val *ApiExploitsChangelog) *NullableApiExploitsChangelog {
	return &NullableApiExploitsChangelog{value: val, isSet: true}
}

func (v NullableApiExploitsChangelog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExploitsChangelog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


