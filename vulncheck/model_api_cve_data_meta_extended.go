/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCVEDataMetaExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCVEDataMetaExtended{}

// ApiCVEDataMetaExtended struct for ApiCVEDataMetaExtended
type ApiCVEDataMetaExtended struct {
	ALIAS *string `json:"ALIAS,omitempty"`
	ASSIGNER *string `json:"ASSIGNER,omitempty"`
	ID *string `json:"ID,omitempty"`
	STATUS *string `json:"STATUS,omitempty"`
}

// NewApiCVEDataMetaExtended instantiates a new ApiCVEDataMetaExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCVEDataMetaExtended() *ApiCVEDataMetaExtended {
	this := ApiCVEDataMetaExtended{}
	return &this
}

// NewApiCVEDataMetaExtendedWithDefaults instantiates a new ApiCVEDataMetaExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCVEDataMetaExtendedWithDefaults() *ApiCVEDataMetaExtended {
	this := ApiCVEDataMetaExtended{}
	return &this
}

// GetALIAS returns the ALIAS field value if set, zero value otherwise.
func (o *ApiCVEDataMetaExtended) GetALIAS() string {
	if o == nil || IsNil(o.ALIAS) {
		var ret string
		return ret
	}
	return *o.ALIAS
}

// GetALIASOk returns a tuple with the ALIAS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCVEDataMetaExtended) GetALIASOk() (*string, bool) {
	if o == nil || IsNil(o.ALIAS) {
		return nil, false
	}
	return o.ALIAS, true
}

// HasALIAS returns a boolean if a field has been set.
func (o *ApiCVEDataMetaExtended) HasALIAS() bool {
	if o != nil && !IsNil(o.ALIAS) {
		return true
	}

	return false
}

// SetALIAS gets a reference to the given string and assigns it to the ALIAS field.
func (o *ApiCVEDataMetaExtended) SetALIAS(v string) {
	o.ALIAS = &v
}

// GetASSIGNER returns the ASSIGNER field value if set, zero value otherwise.
func (o *ApiCVEDataMetaExtended) GetASSIGNER() string {
	if o == nil || IsNil(o.ASSIGNER) {
		var ret string
		return ret
	}
	return *o.ASSIGNER
}

// GetASSIGNEROk returns a tuple with the ASSIGNER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCVEDataMetaExtended) GetASSIGNEROk() (*string, bool) {
	if o == nil || IsNil(o.ASSIGNER) {
		return nil, false
	}
	return o.ASSIGNER, true
}

// HasASSIGNER returns a boolean if a field has been set.
func (o *ApiCVEDataMetaExtended) HasASSIGNER() bool {
	if o != nil && !IsNil(o.ASSIGNER) {
		return true
	}

	return false
}

// SetASSIGNER gets a reference to the given string and assigns it to the ASSIGNER field.
func (o *ApiCVEDataMetaExtended) SetASSIGNER(v string) {
	o.ASSIGNER = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *ApiCVEDataMetaExtended) GetID() string {
	if o == nil || IsNil(o.ID) {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCVEDataMetaExtended) GetIDOk() (*string, bool) {
	if o == nil || IsNil(o.ID) {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *ApiCVEDataMetaExtended) HasID() bool {
	if o != nil && !IsNil(o.ID) {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *ApiCVEDataMetaExtended) SetID(v string) {
	o.ID = &v
}

// GetSTATUS returns the STATUS field value if set, zero value otherwise.
func (o *ApiCVEDataMetaExtended) GetSTATUS() string {
	if o == nil || IsNil(o.STATUS) {
		var ret string
		return ret
	}
	return *o.STATUS
}

// GetSTATUSOk returns a tuple with the STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCVEDataMetaExtended) GetSTATUSOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS) {
		return nil, false
	}
	return o.STATUS, true
}

// HasSTATUS returns a boolean if a field has been set.
func (o *ApiCVEDataMetaExtended) HasSTATUS() bool {
	if o != nil && !IsNil(o.STATUS) {
		return true
	}

	return false
}

// SetSTATUS gets a reference to the given string and assigns it to the STATUS field.
func (o *ApiCVEDataMetaExtended) SetSTATUS(v string) {
	o.STATUS = &v
}

func (o ApiCVEDataMetaExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCVEDataMetaExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ALIAS) {
		toSerialize["ALIAS"] = o.ALIAS
	}
	if !IsNil(o.ASSIGNER) {
		toSerialize["ASSIGNER"] = o.ASSIGNER
	}
	if !IsNil(o.ID) {
		toSerialize["ID"] = o.ID
	}
	if !IsNil(o.STATUS) {
		toSerialize["STATUS"] = o.STATUS
	}
	return toSerialize, nil
}

type NullableApiCVEDataMetaExtended struct {
	value *ApiCVEDataMetaExtended
	isSet bool
}

func (v NullableApiCVEDataMetaExtended) Get() *ApiCVEDataMetaExtended {
	return v.value
}

func (v *NullableApiCVEDataMetaExtended) Set(val *ApiCVEDataMetaExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCVEDataMetaExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCVEDataMetaExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCVEDataMetaExtended(val *ApiCVEDataMetaExtended) *NullableApiCVEDataMetaExtended {
	return &NullableApiCVEDataMetaExtended{value: val, isSet: true}
}

func (v NullableApiCVEDataMetaExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCVEDataMetaExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


