/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the PaginateParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginateParam{}

// PaginateParam struct for PaginateParam
type PaginateParam struct {
	Filtering *string `json:"filtering,omitempty"`
	Format *string `json:"format,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewPaginateParam instantiates a new PaginateParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginateParam() *PaginateParam {
	this := PaginateParam{}
	return &this
}

// NewPaginateParamWithDefaults instantiates a new PaginateParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginateParamWithDefaults() *PaginateParam {
	this := PaginateParam{}
	return &this
}

// GetFiltering returns the Filtering field value if set, zero value otherwise.
func (o *PaginateParam) GetFiltering() string {
	if o == nil || IsNil(o.Filtering) {
		var ret string
		return ret
	}
	return *o.Filtering
}

// GetFilteringOk returns a tuple with the Filtering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateParam) GetFilteringOk() (*string, bool) {
	if o == nil || IsNil(o.Filtering) {
		return nil, false
	}
	return o.Filtering, true
}

// HasFiltering returns a boolean if a field has been set.
func (o *PaginateParam) HasFiltering() bool {
	if o != nil && !IsNil(o.Filtering) {
		return true
	}

	return false
}

// SetFiltering gets a reference to the given string and assigns it to the Filtering field.
func (o *PaginateParam) SetFiltering(v string) {
	o.Filtering = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PaginateParam) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateParam) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PaginateParam) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PaginateParam) SetFormat(v string) {
	o.Format = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PaginateParam) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginateParam) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PaginateParam) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PaginateParam) SetName(v string) {
	o.Name = &v
}

func (o PaginateParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginateParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filtering) {
		toSerialize["filtering"] = o.Filtering
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullablePaginateParam struct {
	value *PaginateParam
	isSet bool
}

func (v NullablePaginateParam) Get() *PaginateParam {
	return v.value
}

func (v *NullablePaginateParam) Set(val *PaginateParam) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginateParam) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginateParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginateParam(val *PaginateParam) *NullablePaginateParam {
	return &NullablePaginateParam{value: val, isSet: true}
}

func (v NullablePaginateParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginateParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


