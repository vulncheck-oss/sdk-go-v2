/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySeebugExploit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySeebugExploit{}

// AdvisorySeebugExploit struct for AdvisorySeebugExploit
type AdvisorySeebugExploit struct {
	Author *string `json:"author,omitempty"`
	Category *string `json:"category,omitempty"`
	Cnnvd []string `json:"cnnvd,omitempty"`
	Cnvd []string `json:"cnvd,omitempty"`
	Component *string `json:"component,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	FindTime *string `json:"find_time,omitempty"`
	Name *string `json:"name,omitempty"`
	SsvId *string `json:"ssv_id,omitempty"`
	Submitter *string `json:"submitter,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisorySeebugExploit instantiates a new AdvisorySeebugExploit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySeebugExploit() *AdvisorySeebugExploit {
	this := AdvisorySeebugExploit{}
	return &this
}

// NewAdvisorySeebugExploitWithDefaults instantiates a new AdvisorySeebugExploit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySeebugExploitWithDefaults() *AdvisorySeebugExploit {
	this := AdvisorySeebugExploit{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *AdvisorySeebugExploit) SetAuthor(v string) {
	o.Author = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisorySeebugExploit) SetCategory(v string) {
	o.Category = &v
}

// GetCnnvd returns the Cnnvd field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetCnnvd() []string {
	if o == nil || IsNil(o.Cnnvd) {
		var ret []string
		return ret
	}
	return o.Cnnvd
}

// GetCnnvdOk returns a tuple with the Cnnvd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetCnnvdOk() ([]string, bool) {
	if o == nil || IsNil(o.Cnnvd) {
		return nil, false
	}
	return o.Cnnvd, true
}

// HasCnnvd returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasCnnvd() bool {
	if o != nil && !IsNil(o.Cnnvd) {
		return true
	}

	return false
}

// SetCnnvd gets a reference to the given []string and assigns it to the Cnnvd field.
func (o *AdvisorySeebugExploit) SetCnnvd(v []string) {
	o.Cnnvd = v
}

// GetCnvd returns the Cnvd field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetCnvd() []string {
	if o == nil || IsNil(o.Cnvd) {
		var ret []string
		return ret
	}
	return o.Cnvd
}

// GetCnvdOk returns a tuple with the Cnvd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetCnvdOk() ([]string, bool) {
	if o == nil || IsNil(o.Cnvd) {
		return nil, false
	}
	return o.Cnvd, true
}

// HasCnvd returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasCnvd() bool {
	if o != nil && !IsNil(o.Cnvd) {
		return true
	}

	return false
}

// SetCnvd gets a reference to the given []string and assigns it to the Cnvd field.
func (o *AdvisorySeebugExploit) SetCnvd(v []string) {
	o.Cnvd = v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *AdvisorySeebugExploit) SetComponent(v string) {
	o.Component = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisorySeebugExploit) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisorySeebugExploit) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetFindTime returns the FindTime field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetFindTime() string {
	if o == nil || IsNil(o.FindTime) {
		var ret string
		return ret
	}
	return *o.FindTime
}

// GetFindTimeOk returns a tuple with the FindTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetFindTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FindTime) {
		return nil, false
	}
	return o.FindTime, true
}

// HasFindTime returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasFindTime() bool {
	if o != nil && !IsNil(o.FindTime) {
		return true
	}

	return false
}

// SetFindTime gets a reference to the given string and assigns it to the FindTime field.
func (o *AdvisorySeebugExploit) SetFindTime(v string) {
	o.FindTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisorySeebugExploit) SetName(v string) {
	o.Name = &v
}

// GetSsvId returns the SsvId field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetSsvId() string {
	if o == nil || IsNil(o.SsvId) {
		var ret string
		return ret
	}
	return *o.SsvId
}

// GetSsvIdOk returns a tuple with the SsvId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetSsvIdOk() (*string, bool) {
	if o == nil || IsNil(o.SsvId) {
		return nil, false
	}
	return o.SsvId, true
}

// HasSsvId returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasSsvId() bool {
	if o != nil && !IsNil(o.SsvId) {
		return true
	}

	return false
}

// SetSsvId gets a reference to the given string and assigns it to the SsvId field.
func (o *AdvisorySeebugExploit) SetSsvId(v string) {
	o.SsvId = &v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetSubmitter() string {
	if o == nil || IsNil(o.Submitter) {
		var ret string
		return ret
	}
	return *o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetSubmitterOk() (*string, bool) {
	if o == nil || IsNil(o.Submitter) {
		return nil, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasSubmitter() bool {
	if o != nil && !IsNil(o.Submitter) {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given string and assigns it to the Submitter field.
func (o *AdvisorySeebugExploit) SetSubmitter(v string) {
	o.Submitter = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisorySeebugExploit) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySeebugExploit) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisorySeebugExploit) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisorySeebugExploit) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisorySeebugExploit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySeebugExploit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Cnnvd) {
		toSerialize["cnnvd"] = o.Cnnvd
	}
	if !IsNil(o.Cnvd) {
		toSerialize["cnvd"] = o.Cnvd
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.FindTime) {
		toSerialize["find_time"] = o.FindTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SsvId) {
		toSerialize["ssv_id"] = o.SsvId
	}
	if !IsNil(o.Submitter) {
		toSerialize["submitter"] = o.Submitter
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisorySeebugExploit struct {
	value *AdvisorySeebugExploit
	isSet bool
}

func (v NullableAdvisorySeebugExploit) Get() *AdvisorySeebugExploit {
	return v.value
}

func (v *NullableAdvisorySeebugExploit) Set(val *AdvisorySeebugExploit) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySeebugExploit) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySeebugExploit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySeebugExploit(val *AdvisorySeebugExploit) *NullableAdvisorySeebugExploit {
	return &NullableAdvisorySeebugExploit{value: val, isSet: true}
}

func (v NullableAdvisorySeebugExploit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySeebugExploit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


