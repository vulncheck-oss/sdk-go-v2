/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryEOLReleaseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryEOLReleaseData{}

// AdvisoryEOLReleaseData struct for AdvisoryEOLReleaseData
type AdvisoryEOLReleaseData struct {
	AlreadyEol *bool `json:"already_eol,omitempty"`
	// Alpine Linux
	Branch *string `json:"branch,omitempty"`
	// Alpine Linux
	BranchUrl *string `json:"branch_url,omitempty"`
	Codename *string `json:"codename,omitempty"`
	Cpe *string `json:"cpe,omitempty"`
	EolDate *string `json:"eol_date,omitempty"`
	// Oracle Linux, Solaris
	EolDateExtendedSupport *string `json:"eol_date_extended_support,omitempty"`
	// Oracle Linux, Solaris
	EolDatePremierSupport *string `json:"eol_date_premier_support,omitempty"`
	EolEltsDate *string `json:"eol_elts_date,omitempty"`
	EolLtsDate *string `json:"eol_lts_date,omitempty"`
	// Alpine Linux
	GitBranch *string `json:"git_branch,omitempty"`
	// Alpine Linux
	GitBranchUrl *string `json:"git_branch_url,omitempty"`
	// Ubuntu
	Lts *bool `json:"lts,omitempty"`
	// Alpine Linux
	MinorReleases []string `json:"minor_releases,omitempty"`
	Product *string `json:"product,omitempty"`
	ReleaseDate *string `json:"release_date,omitempty"`
	ReleaseName *string `json:"release_name,omitempty"`
	SourceUrl *string `json:"source_url,omitempty"`
	// AIX
	TechnologyLevel *string `json:"technology_level,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Version *string `json:"version,omitempty"`
	// Android
	VersionApi *string `json:"version_api,omitempty"`
	// macOS
	VersionDarwin *string `json:"version_darwin,omitempty"`
	// Solaris
	VersionSunos *string `json:"version_sunos,omitempty"`
	// Microsoft Windows
	WindowsCurrentBuild *string `json:"windows_current_build,omitempty"`
	// Microsoft Windows
	WindowsDisplayVersion *string `json:"windows_display_version,omitempty"`
	// Microsoft Windows
	WindowsEditionId *string `json:"windows_edition_id,omitempty"`
	// Microsoft Windows
	WindowsInsiderPreview *bool `json:"windows_insider_preview,omitempty"`
}

// NewAdvisoryEOLReleaseData instantiates a new AdvisoryEOLReleaseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryEOLReleaseData() *AdvisoryEOLReleaseData {
	this := AdvisoryEOLReleaseData{}
	return &this
}

// NewAdvisoryEOLReleaseDataWithDefaults instantiates a new AdvisoryEOLReleaseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryEOLReleaseDataWithDefaults() *AdvisoryEOLReleaseData {
	this := AdvisoryEOLReleaseData{}
	return &this
}

// GetAlreadyEol returns the AlreadyEol field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetAlreadyEol() bool {
	if o == nil || IsNil(o.AlreadyEol) {
		var ret bool
		return ret
	}
	return *o.AlreadyEol
}

// GetAlreadyEolOk returns a tuple with the AlreadyEol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetAlreadyEolOk() (*bool, bool) {
	if o == nil || IsNil(o.AlreadyEol) {
		return nil, false
	}
	return o.AlreadyEol, true
}

// HasAlreadyEol returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasAlreadyEol() bool {
	if o != nil && !IsNil(o.AlreadyEol) {
		return true
	}

	return false
}

// SetAlreadyEol gets a reference to the given bool and assigns it to the AlreadyEol field.
func (o *AdvisoryEOLReleaseData) SetAlreadyEol(v bool) {
	o.AlreadyEol = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *AdvisoryEOLReleaseData) SetBranch(v string) {
	o.Branch = &v
}

// GetBranchUrl returns the BranchUrl field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetBranchUrl() string {
	if o == nil || IsNil(o.BranchUrl) {
		var ret string
		return ret
	}
	return *o.BranchUrl
}

// GetBranchUrlOk returns a tuple with the BranchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetBranchUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BranchUrl) {
		return nil, false
	}
	return o.BranchUrl, true
}

// HasBranchUrl returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasBranchUrl() bool {
	if o != nil && !IsNil(o.BranchUrl) {
		return true
	}

	return false
}

// SetBranchUrl gets a reference to the given string and assigns it to the BranchUrl field.
func (o *AdvisoryEOLReleaseData) SetBranchUrl(v string) {
	o.BranchUrl = &v
}

// GetCodename returns the Codename field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetCodename() string {
	if o == nil || IsNil(o.Codename) {
		var ret string
		return ret
	}
	return *o.Codename
}

// GetCodenameOk returns a tuple with the Codename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetCodenameOk() (*string, bool) {
	if o == nil || IsNil(o.Codename) {
		return nil, false
	}
	return o.Codename, true
}

// HasCodename returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasCodename() bool {
	if o != nil && !IsNil(o.Codename) {
		return true
	}

	return false
}

// SetCodename gets a reference to the given string and assigns it to the Codename field.
func (o *AdvisoryEOLReleaseData) SetCodename(v string) {
	o.Codename = &v
}

// GetCpe returns the Cpe field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetCpe() string {
	if o == nil || IsNil(o.Cpe) {
		var ret string
		return ret
	}
	return *o.Cpe
}

// GetCpeOk returns a tuple with the Cpe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetCpeOk() (*string, bool) {
	if o == nil || IsNil(o.Cpe) {
		return nil, false
	}
	return o.Cpe, true
}

// HasCpe returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasCpe() bool {
	if o != nil && !IsNil(o.Cpe) {
		return true
	}

	return false
}

// SetCpe gets a reference to the given string and assigns it to the Cpe field.
func (o *AdvisoryEOLReleaseData) SetCpe(v string) {
	o.Cpe = &v
}

// GetEolDate returns the EolDate field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetEolDate() string {
	if o == nil || IsNil(o.EolDate) {
		var ret string
		return ret
	}
	return *o.EolDate
}

// GetEolDateOk returns a tuple with the EolDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetEolDateOk() (*string, bool) {
	if o == nil || IsNil(o.EolDate) {
		return nil, false
	}
	return o.EolDate, true
}

// HasEolDate returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasEolDate() bool {
	if o != nil && !IsNil(o.EolDate) {
		return true
	}

	return false
}

// SetEolDate gets a reference to the given string and assigns it to the EolDate field.
func (o *AdvisoryEOLReleaseData) SetEolDate(v string) {
	o.EolDate = &v
}

// GetEolDateExtendedSupport returns the EolDateExtendedSupport field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetEolDateExtendedSupport() string {
	if o == nil || IsNil(o.EolDateExtendedSupport) {
		var ret string
		return ret
	}
	return *o.EolDateExtendedSupport
}

// GetEolDateExtendedSupportOk returns a tuple with the EolDateExtendedSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetEolDateExtendedSupportOk() (*string, bool) {
	if o == nil || IsNil(o.EolDateExtendedSupport) {
		return nil, false
	}
	return o.EolDateExtendedSupport, true
}

// HasEolDateExtendedSupport returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasEolDateExtendedSupport() bool {
	if o != nil && !IsNil(o.EolDateExtendedSupport) {
		return true
	}

	return false
}

// SetEolDateExtendedSupport gets a reference to the given string and assigns it to the EolDateExtendedSupport field.
func (o *AdvisoryEOLReleaseData) SetEolDateExtendedSupport(v string) {
	o.EolDateExtendedSupport = &v
}

// GetEolDatePremierSupport returns the EolDatePremierSupport field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetEolDatePremierSupport() string {
	if o == nil || IsNil(o.EolDatePremierSupport) {
		var ret string
		return ret
	}
	return *o.EolDatePremierSupport
}

// GetEolDatePremierSupportOk returns a tuple with the EolDatePremierSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetEolDatePremierSupportOk() (*string, bool) {
	if o == nil || IsNil(o.EolDatePremierSupport) {
		return nil, false
	}
	return o.EolDatePremierSupport, true
}

// HasEolDatePremierSupport returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasEolDatePremierSupport() bool {
	if o != nil && !IsNil(o.EolDatePremierSupport) {
		return true
	}

	return false
}

// SetEolDatePremierSupport gets a reference to the given string and assigns it to the EolDatePremierSupport field.
func (o *AdvisoryEOLReleaseData) SetEolDatePremierSupport(v string) {
	o.EolDatePremierSupport = &v
}

// GetEolEltsDate returns the EolEltsDate field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetEolEltsDate() string {
	if o == nil || IsNil(o.EolEltsDate) {
		var ret string
		return ret
	}
	return *o.EolEltsDate
}

// GetEolEltsDateOk returns a tuple with the EolEltsDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetEolEltsDateOk() (*string, bool) {
	if o == nil || IsNil(o.EolEltsDate) {
		return nil, false
	}
	return o.EolEltsDate, true
}

// HasEolEltsDate returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasEolEltsDate() bool {
	if o != nil && !IsNil(o.EolEltsDate) {
		return true
	}

	return false
}

// SetEolEltsDate gets a reference to the given string and assigns it to the EolEltsDate field.
func (o *AdvisoryEOLReleaseData) SetEolEltsDate(v string) {
	o.EolEltsDate = &v
}

// GetEolLtsDate returns the EolLtsDate field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetEolLtsDate() string {
	if o == nil || IsNil(o.EolLtsDate) {
		var ret string
		return ret
	}
	return *o.EolLtsDate
}

// GetEolLtsDateOk returns a tuple with the EolLtsDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetEolLtsDateOk() (*string, bool) {
	if o == nil || IsNil(o.EolLtsDate) {
		return nil, false
	}
	return o.EolLtsDate, true
}

// HasEolLtsDate returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasEolLtsDate() bool {
	if o != nil && !IsNil(o.EolLtsDate) {
		return true
	}

	return false
}

// SetEolLtsDate gets a reference to the given string and assigns it to the EolLtsDate field.
func (o *AdvisoryEOLReleaseData) SetEolLtsDate(v string) {
	o.EolLtsDate = &v
}

// GetGitBranch returns the GitBranch field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetGitBranch() string {
	if o == nil || IsNil(o.GitBranch) {
		var ret string
		return ret
	}
	return *o.GitBranch
}

// GetGitBranchOk returns a tuple with the GitBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetGitBranchOk() (*string, bool) {
	if o == nil || IsNil(o.GitBranch) {
		return nil, false
	}
	return o.GitBranch, true
}

// HasGitBranch returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasGitBranch() bool {
	if o != nil && !IsNil(o.GitBranch) {
		return true
	}

	return false
}

// SetGitBranch gets a reference to the given string and assigns it to the GitBranch field.
func (o *AdvisoryEOLReleaseData) SetGitBranch(v string) {
	o.GitBranch = &v
}

// GetGitBranchUrl returns the GitBranchUrl field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetGitBranchUrl() string {
	if o == nil || IsNil(o.GitBranchUrl) {
		var ret string
		return ret
	}
	return *o.GitBranchUrl
}

// GetGitBranchUrlOk returns a tuple with the GitBranchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetGitBranchUrlOk() (*string, bool) {
	if o == nil || IsNil(o.GitBranchUrl) {
		return nil, false
	}
	return o.GitBranchUrl, true
}

// HasGitBranchUrl returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasGitBranchUrl() bool {
	if o != nil && !IsNil(o.GitBranchUrl) {
		return true
	}

	return false
}

// SetGitBranchUrl gets a reference to the given string and assigns it to the GitBranchUrl field.
func (o *AdvisoryEOLReleaseData) SetGitBranchUrl(v string) {
	o.GitBranchUrl = &v
}

// GetLts returns the Lts field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetLts() bool {
	if o == nil || IsNil(o.Lts) {
		var ret bool
		return ret
	}
	return *o.Lts
}

// GetLtsOk returns a tuple with the Lts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetLtsOk() (*bool, bool) {
	if o == nil || IsNil(o.Lts) {
		return nil, false
	}
	return o.Lts, true
}

// HasLts returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasLts() bool {
	if o != nil && !IsNil(o.Lts) {
		return true
	}

	return false
}

// SetLts gets a reference to the given bool and assigns it to the Lts field.
func (o *AdvisoryEOLReleaseData) SetLts(v bool) {
	o.Lts = &v
}

// GetMinorReleases returns the MinorReleases field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetMinorReleases() []string {
	if o == nil || IsNil(o.MinorReleases) {
		var ret []string
		return ret
	}
	return o.MinorReleases
}

// GetMinorReleasesOk returns a tuple with the MinorReleases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetMinorReleasesOk() ([]string, bool) {
	if o == nil || IsNil(o.MinorReleases) {
		return nil, false
	}
	return o.MinorReleases, true
}

// HasMinorReleases returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasMinorReleases() bool {
	if o != nil && !IsNil(o.MinorReleases) {
		return true
	}

	return false
}

// SetMinorReleases gets a reference to the given []string and assigns it to the MinorReleases field.
func (o *AdvisoryEOLReleaseData) SetMinorReleases(v []string) {
	o.MinorReleases = v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryEOLReleaseData) SetProduct(v string) {
	o.Product = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *AdvisoryEOLReleaseData) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetReleaseName returns the ReleaseName field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetReleaseName() string {
	if o == nil || IsNil(o.ReleaseName) {
		var ret string
		return ret
	}
	return *o.ReleaseName
}

// GetReleaseNameOk returns a tuple with the ReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetReleaseNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseName) {
		return nil, false
	}
	return o.ReleaseName, true
}

// HasReleaseName returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasReleaseName() bool {
	if o != nil && !IsNil(o.ReleaseName) {
		return true
	}

	return false
}

// SetReleaseName gets a reference to the given string and assigns it to the ReleaseName field.
func (o *AdvisoryEOLReleaseData) SetReleaseName(v string) {
	o.ReleaseName = &v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetSourceUrl() string {
	if o == nil || IsNil(o.SourceUrl) {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetSourceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUrl) {
		return nil, false
	}
	return o.SourceUrl, true
}

// HasSourceUrl returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasSourceUrl() bool {
	if o != nil && !IsNil(o.SourceUrl) {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *AdvisoryEOLReleaseData) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

// GetTechnologyLevel returns the TechnologyLevel field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetTechnologyLevel() string {
	if o == nil || IsNil(o.TechnologyLevel) {
		var ret string
		return ret
	}
	return *o.TechnologyLevel
}

// GetTechnologyLevelOk returns a tuple with the TechnologyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetTechnologyLevelOk() (*string, bool) {
	if o == nil || IsNil(o.TechnologyLevel) {
		return nil, false
	}
	return o.TechnologyLevel, true
}

// HasTechnologyLevel returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasTechnologyLevel() bool {
	if o != nil && !IsNil(o.TechnologyLevel) {
		return true
	}

	return false
}

// SetTechnologyLevel gets a reference to the given string and assigns it to the TechnologyLevel field.
func (o *AdvisoryEOLReleaseData) SetTechnologyLevel(v string) {
	o.TechnologyLevel = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *AdvisoryEOLReleaseData) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdvisoryEOLReleaseData) SetVersion(v string) {
	o.Version = &v
}

// GetVersionApi returns the VersionApi field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetVersionApi() string {
	if o == nil || IsNil(o.VersionApi) {
		var ret string
		return ret
	}
	return *o.VersionApi
}

// GetVersionApiOk returns a tuple with the VersionApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetVersionApiOk() (*string, bool) {
	if o == nil || IsNil(o.VersionApi) {
		return nil, false
	}
	return o.VersionApi, true
}

// HasVersionApi returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasVersionApi() bool {
	if o != nil && !IsNil(o.VersionApi) {
		return true
	}

	return false
}

// SetVersionApi gets a reference to the given string and assigns it to the VersionApi field.
func (o *AdvisoryEOLReleaseData) SetVersionApi(v string) {
	o.VersionApi = &v
}

// GetVersionDarwin returns the VersionDarwin field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetVersionDarwin() string {
	if o == nil || IsNil(o.VersionDarwin) {
		var ret string
		return ret
	}
	return *o.VersionDarwin
}

// GetVersionDarwinOk returns a tuple with the VersionDarwin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetVersionDarwinOk() (*string, bool) {
	if o == nil || IsNil(o.VersionDarwin) {
		return nil, false
	}
	return o.VersionDarwin, true
}

// HasVersionDarwin returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasVersionDarwin() bool {
	if o != nil && !IsNil(o.VersionDarwin) {
		return true
	}

	return false
}

// SetVersionDarwin gets a reference to the given string and assigns it to the VersionDarwin field.
func (o *AdvisoryEOLReleaseData) SetVersionDarwin(v string) {
	o.VersionDarwin = &v
}

// GetVersionSunos returns the VersionSunos field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetVersionSunos() string {
	if o == nil || IsNil(o.VersionSunos) {
		var ret string
		return ret
	}
	return *o.VersionSunos
}

// GetVersionSunosOk returns a tuple with the VersionSunos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetVersionSunosOk() (*string, bool) {
	if o == nil || IsNil(o.VersionSunos) {
		return nil, false
	}
	return o.VersionSunos, true
}

// HasVersionSunos returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasVersionSunos() bool {
	if o != nil && !IsNil(o.VersionSunos) {
		return true
	}

	return false
}

// SetVersionSunos gets a reference to the given string and assigns it to the VersionSunos field.
func (o *AdvisoryEOLReleaseData) SetVersionSunos(v string) {
	o.VersionSunos = &v
}

// GetWindowsCurrentBuild returns the WindowsCurrentBuild field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetWindowsCurrentBuild() string {
	if o == nil || IsNil(o.WindowsCurrentBuild) {
		var ret string
		return ret
	}
	return *o.WindowsCurrentBuild
}

// GetWindowsCurrentBuildOk returns a tuple with the WindowsCurrentBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetWindowsCurrentBuildOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsCurrentBuild) {
		return nil, false
	}
	return o.WindowsCurrentBuild, true
}

// HasWindowsCurrentBuild returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasWindowsCurrentBuild() bool {
	if o != nil && !IsNil(o.WindowsCurrentBuild) {
		return true
	}

	return false
}

// SetWindowsCurrentBuild gets a reference to the given string and assigns it to the WindowsCurrentBuild field.
func (o *AdvisoryEOLReleaseData) SetWindowsCurrentBuild(v string) {
	o.WindowsCurrentBuild = &v
}

// GetWindowsDisplayVersion returns the WindowsDisplayVersion field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetWindowsDisplayVersion() string {
	if o == nil || IsNil(o.WindowsDisplayVersion) {
		var ret string
		return ret
	}
	return *o.WindowsDisplayVersion
}

// GetWindowsDisplayVersionOk returns a tuple with the WindowsDisplayVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetWindowsDisplayVersionOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsDisplayVersion) {
		return nil, false
	}
	return o.WindowsDisplayVersion, true
}

// HasWindowsDisplayVersion returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasWindowsDisplayVersion() bool {
	if o != nil && !IsNil(o.WindowsDisplayVersion) {
		return true
	}

	return false
}

// SetWindowsDisplayVersion gets a reference to the given string and assigns it to the WindowsDisplayVersion field.
func (o *AdvisoryEOLReleaseData) SetWindowsDisplayVersion(v string) {
	o.WindowsDisplayVersion = &v
}

// GetWindowsEditionId returns the WindowsEditionId field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetWindowsEditionId() string {
	if o == nil || IsNil(o.WindowsEditionId) {
		var ret string
		return ret
	}
	return *o.WindowsEditionId
}

// GetWindowsEditionIdOk returns a tuple with the WindowsEditionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetWindowsEditionIdOk() (*string, bool) {
	if o == nil || IsNil(o.WindowsEditionId) {
		return nil, false
	}
	return o.WindowsEditionId, true
}

// HasWindowsEditionId returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasWindowsEditionId() bool {
	if o != nil && !IsNil(o.WindowsEditionId) {
		return true
	}

	return false
}

// SetWindowsEditionId gets a reference to the given string and assigns it to the WindowsEditionId field.
func (o *AdvisoryEOLReleaseData) SetWindowsEditionId(v string) {
	o.WindowsEditionId = &v
}

// GetWindowsInsiderPreview returns the WindowsInsiderPreview field value if set, zero value otherwise.
func (o *AdvisoryEOLReleaseData) GetWindowsInsiderPreview() bool {
	if o == nil || IsNil(o.WindowsInsiderPreview) {
		var ret bool
		return ret
	}
	return *o.WindowsInsiderPreview
}

// GetWindowsInsiderPreviewOk returns a tuple with the WindowsInsiderPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryEOLReleaseData) GetWindowsInsiderPreviewOk() (*bool, bool) {
	if o == nil || IsNil(o.WindowsInsiderPreview) {
		return nil, false
	}
	return o.WindowsInsiderPreview, true
}

// HasWindowsInsiderPreview returns a boolean if a field has been set.
func (o *AdvisoryEOLReleaseData) HasWindowsInsiderPreview() bool {
	if o != nil && !IsNil(o.WindowsInsiderPreview) {
		return true
	}

	return false
}

// SetWindowsInsiderPreview gets a reference to the given bool and assigns it to the WindowsInsiderPreview field.
func (o *AdvisoryEOLReleaseData) SetWindowsInsiderPreview(v bool) {
	o.WindowsInsiderPreview = &v
}

func (o AdvisoryEOLReleaseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryEOLReleaseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlreadyEol) {
		toSerialize["already_eol"] = o.AlreadyEol
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.BranchUrl) {
		toSerialize["branch_url"] = o.BranchUrl
	}
	if !IsNil(o.Codename) {
		toSerialize["codename"] = o.Codename
	}
	if !IsNil(o.Cpe) {
		toSerialize["cpe"] = o.Cpe
	}
	if !IsNil(o.EolDate) {
		toSerialize["eol_date"] = o.EolDate
	}
	if !IsNil(o.EolDateExtendedSupport) {
		toSerialize["eol_date_extended_support"] = o.EolDateExtendedSupport
	}
	if !IsNil(o.EolDatePremierSupport) {
		toSerialize["eol_date_premier_support"] = o.EolDatePremierSupport
	}
	if !IsNil(o.EolEltsDate) {
		toSerialize["eol_elts_date"] = o.EolEltsDate
	}
	if !IsNil(o.EolLtsDate) {
		toSerialize["eol_lts_date"] = o.EolLtsDate
	}
	if !IsNil(o.GitBranch) {
		toSerialize["git_branch"] = o.GitBranch
	}
	if !IsNil(o.GitBranchUrl) {
		toSerialize["git_branch_url"] = o.GitBranchUrl
	}
	if !IsNil(o.Lts) {
		toSerialize["lts"] = o.Lts
	}
	if !IsNil(o.MinorReleases) {
		toSerialize["minor_releases"] = o.MinorReleases
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if !IsNil(o.ReleaseName) {
		toSerialize["release_name"] = o.ReleaseName
	}
	if !IsNil(o.SourceUrl) {
		toSerialize["source_url"] = o.SourceUrl
	}
	if !IsNil(o.TechnologyLevel) {
		toSerialize["technology_level"] = o.TechnologyLevel
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VersionApi) {
		toSerialize["version_api"] = o.VersionApi
	}
	if !IsNil(o.VersionDarwin) {
		toSerialize["version_darwin"] = o.VersionDarwin
	}
	if !IsNil(o.VersionSunos) {
		toSerialize["version_sunos"] = o.VersionSunos
	}
	if !IsNil(o.WindowsCurrentBuild) {
		toSerialize["windows_current_build"] = o.WindowsCurrentBuild
	}
	if !IsNil(o.WindowsDisplayVersion) {
		toSerialize["windows_display_version"] = o.WindowsDisplayVersion
	}
	if !IsNil(o.WindowsEditionId) {
		toSerialize["windows_edition_id"] = o.WindowsEditionId
	}
	if !IsNil(o.WindowsInsiderPreview) {
		toSerialize["windows_insider_preview"] = o.WindowsInsiderPreview
	}
	return toSerialize, nil
}

type NullableAdvisoryEOLReleaseData struct {
	value *AdvisoryEOLReleaseData
	isSet bool
}

func (v NullableAdvisoryEOLReleaseData) Get() *AdvisoryEOLReleaseData {
	return v.value
}

func (v *NullableAdvisoryEOLReleaseData) Set(val *AdvisoryEOLReleaseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryEOLReleaseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryEOLReleaseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryEOLReleaseData(val *AdvisoryEOLReleaseData) *NullableAdvisoryEOLReleaseData {
	return &NullableAdvisoryEOLReleaseData{value: val, isSet: true}
}

func (v NullableAdvisoryEOLReleaseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryEOLReleaseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


