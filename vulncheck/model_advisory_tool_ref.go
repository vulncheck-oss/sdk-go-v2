/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryToolRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryToolRef{}

// AdvisoryToolRef struct for AdvisoryToolRef
type AdvisoryToolRef struct {
	DateAdded *string `json:"date_added,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryToolRef instantiates a new AdvisoryToolRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryToolRef() *AdvisoryToolRef {
	this := AdvisoryToolRef{}
	return &this
}

// NewAdvisoryToolRefWithDefaults instantiates a new AdvisoryToolRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryToolRefWithDefaults() *AdvisoryToolRef {
	this := AdvisoryToolRef{}
	return &this
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryToolRef) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryToolRef) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryToolRef) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryToolRef) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryToolRef) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryToolRef) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryToolRef) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryToolRef) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryToolRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryToolRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryToolRef struct {
	value *AdvisoryToolRef
	isSet bool
}

func (v NullableAdvisoryToolRef) Get() *AdvisoryToolRef {
	return v.value
}

func (v *NullableAdvisoryToolRef) Set(val *AdvisoryToolRef) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryToolRef) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryToolRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryToolRef(val *AdvisoryToolRef) *NullableAdvisoryToolRef {
	return &NullableAdvisoryToolRef{value: val, isSet: true}
}

func (v NullableAdvisoryToolRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryToolRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


