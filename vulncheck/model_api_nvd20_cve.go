/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiNVD20CVE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNVD20CVE{}

// ApiNVD20CVE struct for ApiNVD20CVE
type ApiNVD20CVE struct {
	CisaActionDue *string `json:"cisaActionDue,omitempty"`
	CisaExploitAdd *string `json:"cisaExploitAdd,omitempty"`
	CisaRequiredAction *string `json:"cisaRequiredAction,omitempty"`
	CisaVulnerabilityName *string `json:"cisaVulnerabilityName,omitempty"`
	Configurations []AdvisoryNVD20Configuration `json:"configurations,omitempty"`
	Descriptions []ApiNVD20Description `json:"descriptions,omitempty"`
	EvaluatorComment *string `json:"evaluatorComment,omitempty"`
	EvaluatorImpact *string `json:"evaluatorImpact,omitempty"`
	EvaluatorSolution *string `json:"evaluatorSolution,omitempty"`
	Id *string `json:"id,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Metrics *ApiNVD20Metric `json:"metrics,omitempty"`
	Published *string `json:"published,omitempty"`
	References []ApiNVD20Reference `json:"references,omitempty"`
	SourceIdentifier *string `json:"sourceIdentifier,omitempty"`
	VcConfigurations []AdvisoryNVD20Configuration `json:"vcConfigurations,omitempty"`
	VcVulnerableCPEs []string `json:"vcVulnerableCPEs,omitempty"`
	VendorComments []ApiNVD20VendorComment `json:"vendorComments,omitempty"`
	VulnStatus *string `json:"vulnStatus,omitempty"`
	Weaknesses []ApiNVD20Weakness `json:"weaknesses,omitempty"`
}

// NewApiNVD20CVE instantiates a new ApiNVD20CVE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNVD20CVE() *ApiNVD20CVE {
	this := ApiNVD20CVE{}
	return &this
}

// NewApiNVD20CVEWithDefaults instantiates a new ApiNVD20CVE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNVD20CVEWithDefaults() *ApiNVD20CVE {
	this := ApiNVD20CVE{}
	return &this
}

// GetCisaActionDue returns the CisaActionDue field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetCisaActionDue() string {
	if o == nil || IsNil(o.CisaActionDue) {
		var ret string
		return ret
	}
	return *o.CisaActionDue
}

// GetCisaActionDueOk returns a tuple with the CisaActionDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetCisaActionDueOk() (*string, bool) {
	if o == nil || IsNil(o.CisaActionDue) {
		return nil, false
	}
	return o.CisaActionDue, true
}

// HasCisaActionDue returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasCisaActionDue() bool {
	if o != nil && !IsNil(o.CisaActionDue) {
		return true
	}

	return false
}

// SetCisaActionDue gets a reference to the given string and assigns it to the CisaActionDue field.
func (o *ApiNVD20CVE) SetCisaActionDue(v string) {
	o.CisaActionDue = &v
}

// GetCisaExploitAdd returns the CisaExploitAdd field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetCisaExploitAdd() string {
	if o == nil || IsNil(o.CisaExploitAdd) {
		var ret string
		return ret
	}
	return *o.CisaExploitAdd
}

// GetCisaExploitAddOk returns a tuple with the CisaExploitAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetCisaExploitAddOk() (*string, bool) {
	if o == nil || IsNil(o.CisaExploitAdd) {
		return nil, false
	}
	return o.CisaExploitAdd, true
}

// HasCisaExploitAdd returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasCisaExploitAdd() bool {
	if o != nil && !IsNil(o.CisaExploitAdd) {
		return true
	}

	return false
}

// SetCisaExploitAdd gets a reference to the given string and assigns it to the CisaExploitAdd field.
func (o *ApiNVD20CVE) SetCisaExploitAdd(v string) {
	o.CisaExploitAdd = &v
}

// GetCisaRequiredAction returns the CisaRequiredAction field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetCisaRequiredAction() string {
	if o == nil || IsNil(o.CisaRequiredAction) {
		var ret string
		return ret
	}
	return *o.CisaRequiredAction
}

// GetCisaRequiredActionOk returns a tuple with the CisaRequiredAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetCisaRequiredActionOk() (*string, bool) {
	if o == nil || IsNil(o.CisaRequiredAction) {
		return nil, false
	}
	return o.CisaRequiredAction, true
}

// HasCisaRequiredAction returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasCisaRequiredAction() bool {
	if o != nil && !IsNil(o.CisaRequiredAction) {
		return true
	}

	return false
}

// SetCisaRequiredAction gets a reference to the given string and assigns it to the CisaRequiredAction field.
func (o *ApiNVD20CVE) SetCisaRequiredAction(v string) {
	o.CisaRequiredAction = &v
}

// GetCisaVulnerabilityName returns the CisaVulnerabilityName field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetCisaVulnerabilityName() string {
	if o == nil || IsNil(o.CisaVulnerabilityName) {
		var ret string
		return ret
	}
	return *o.CisaVulnerabilityName
}

// GetCisaVulnerabilityNameOk returns a tuple with the CisaVulnerabilityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetCisaVulnerabilityNameOk() (*string, bool) {
	if o == nil || IsNil(o.CisaVulnerabilityName) {
		return nil, false
	}
	return o.CisaVulnerabilityName, true
}

// HasCisaVulnerabilityName returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasCisaVulnerabilityName() bool {
	if o != nil && !IsNil(o.CisaVulnerabilityName) {
		return true
	}

	return false
}

// SetCisaVulnerabilityName gets a reference to the given string and assigns it to the CisaVulnerabilityName field.
func (o *ApiNVD20CVE) SetCisaVulnerabilityName(v string) {
	o.CisaVulnerabilityName = &v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetConfigurations() []AdvisoryNVD20Configuration {
	if o == nil || IsNil(o.Configurations) {
		var ret []AdvisoryNVD20Configuration
		return ret
	}
	return o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetConfigurationsOk() ([]AdvisoryNVD20Configuration, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given []AdvisoryNVD20Configuration and assigns it to the Configurations field.
func (o *ApiNVD20CVE) SetConfigurations(v []AdvisoryNVD20Configuration) {
	o.Configurations = v
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetDescriptions() []ApiNVD20Description {
	if o == nil || IsNil(o.Descriptions) {
		var ret []ApiNVD20Description
		return ret
	}
	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetDescriptionsOk() ([]ApiNVD20Description, bool) {
	if o == nil || IsNil(o.Descriptions) {
		return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasDescriptions() bool {
	if o != nil && !IsNil(o.Descriptions) {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []ApiNVD20Description and assigns it to the Descriptions field.
func (o *ApiNVD20CVE) SetDescriptions(v []ApiNVD20Description) {
	o.Descriptions = v
}

// GetEvaluatorComment returns the EvaluatorComment field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetEvaluatorComment() string {
	if o == nil || IsNil(o.EvaluatorComment) {
		var ret string
		return ret
	}
	return *o.EvaluatorComment
}

// GetEvaluatorCommentOk returns a tuple with the EvaluatorComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetEvaluatorCommentOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorComment) {
		return nil, false
	}
	return o.EvaluatorComment, true
}

// HasEvaluatorComment returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasEvaluatorComment() bool {
	if o != nil && !IsNil(o.EvaluatorComment) {
		return true
	}

	return false
}

// SetEvaluatorComment gets a reference to the given string and assigns it to the EvaluatorComment field.
func (o *ApiNVD20CVE) SetEvaluatorComment(v string) {
	o.EvaluatorComment = &v
}

// GetEvaluatorImpact returns the EvaluatorImpact field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetEvaluatorImpact() string {
	if o == nil || IsNil(o.EvaluatorImpact) {
		var ret string
		return ret
	}
	return *o.EvaluatorImpact
}

// GetEvaluatorImpactOk returns a tuple with the EvaluatorImpact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetEvaluatorImpactOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorImpact) {
		return nil, false
	}
	return o.EvaluatorImpact, true
}

// HasEvaluatorImpact returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasEvaluatorImpact() bool {
	if o != nil && !IsNil(o.EvaluatorImpact) {
		return true
	}

	return false
}

// SetEvaluatorImpact gets a reference to the given string and assigns it to the EvaluatorImpact field.
func (o *ApiNVD20CVE) SetEvaluatorImpact(v string) {
	o.EvaluatorImpact = &v
}

// GetEvaluatorSolution returns the EvaluatorSolution field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetEvaluatorSolution() string {
	if o == nil || IsNil(o.EvaluatorSolution) {
		var ret string
		return ret
	}
	return *o.EvaluatorSolution
}

// GetEvaluatorSolutionOk returns a tuple with the EvaluatorSolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetEvaluatorSolutionOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluatorSolution) {
		return nil, false
	}
	return o.EvaluatorSolution, true
}

// HasEvaluatorSolution returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasEvaluatorSolution() bool {
	if o != nil && !IsNil(o.EvaluatorSolution) {
		return true
	}

	return false
}

// SetEvaluatorSolution gets a reference to the given string and assigns it to the EvaluatorSolution field.
func (o *ApiNVD20CVE) SetEvaluatorSolution(v string) {
	o.EvaluatorSolution = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiNVD20CVE) SetId(v string) {
	o.Id = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *ApiNVD20CVE) SetLastModified(v string) {
	o.LastModified = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetMetrics() ApiNVD20Metric {
	if o == nil || IsNil(o.Metrics) {
		var ret ApiNVD20Metric
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetMetricsOk() (*ApiNVD20Metric, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given ApiNVD20Metric and assigns it to the Metrics field.
func (o *ApiNVD20CVE) SetMetrics(v ApiNVD20Metric) {
	o.Metrics = &v
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetPublished() string {
	if o == nil || IsNil(o.Published) {
		var ret string
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetPublishedOk() (*string, bool) {
	if o == nil || IsNil(o.Published) {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasPublished() bool {
	if o != nil && !IsNil(o.Published) {
		return true
	}

	return false
}

// SetPublished gets a reference to the given string and assigns it to the Published field.
func (o *ApiNVD20CVE) SetPublished(v string) {
	o.Published = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetReferences() []ApiNVD20Reference {
	if o == nil || IsNil(o.References) {
		var ret []ApiNVD20Reference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetReferencesOk() ([]ApiNVD20Reference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []ApiNVD20Reference and assigns it to the References field.
func (o *ApiNVD20CVE) SetReferences(v []ApiNVD20Reference) {
	o.References = v
}

// GetSourceIdentifier returns the SourceIdentifier field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetSourceIdentifier() string {
	if o == nil || IsNil(o.SourceIdentifier) {
		var ret string
		return ret
	}
	return *o.SourceIdentifier
}

// GetSourceIdentifierOk returns a tuple with the SourceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetSourceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SourceIdentifier) {
		return nil, false
	}
	return o.SourceIdentifier, true
}

// HasSourceIdentifier returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasSourceIdentifier() bool {
	if o != nil && !IsNil(o.SourceIdentifier) {
		return true
	}

	return false
}

// SetSourceIdentifier gets a reference to the given string and assigns it to the SourceIdentifier field.
func (o *ApiNVD20CVE) SetSourceIdentifier(v string) {
	o.SourceIdentifier = &v
}

// GetVcConfigurations returns the VcConfigurations field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetVcConfigurations() []AdvisoryNVD20Configuration {
	if o == nil || IsNil(o.VcConfigurations) {
		var ret []AdvisoryNVD20Configuration
		return ret
	}
	return o.VcConfigurations
}

// GetVcConfigurationsOk returns a tuple with the VcConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetVcConfigurationsOk() ([]AdvisoryNVD20Configuration, bool) {
	if o == nil || IsNil(o.VcConfigurations) {
		return nil, false
	}
	return o.VcConfigurations, true
}

// HasVcConfigurations returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasVcConfigurations() bool {
	if o != nil && !IsNil(o.VcConfigurations) {
		return true
	}

	return false
}

// SetVcConfigurations gets a reference to the given []AdvisoryNVD20Configuration and assigns it to the VcConfigurations field.
func (o *ApiNVD20CVE) SetVcConfigurations(v []AdvisoryNVD20Configuration) {
	o.VcConfigurations = v
}

// GetVcVulnerableCPEs returns the VcVulnerableCPEs field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetVcVulnerableCPEs() []string {
	if o == nil || IsNil(o.VcVulnerableCPEs) {
		var ret []string
		return ret
	}
	return o.VcVulnerableCPEs
}

// GetVcVulnerableCPEsOk returns a tuple with the VcVulnerableCPEs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetVcVulnerableCPEsOk() ([]string, bool) {
	if o == nil || IsNil(o.VcVulnerableCPEs) {
		return nil, false
	}
	return o.VcVulnerableCPEs, true
}

// HasVcVulnerableCPEs returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasVcVulnerableCPEs() bool {
	if o != nil && !IsNil(o.VcVulnerableCPEs) {
		return true
	}

	return false
}

// SetVcVulnerableCPEs gets a reference to the given []string and assigns it to the VcVulnerableCPEs field.
func (o *ApiNVD20CVE) SetVcVulnerableCPEs(v []string) {
	o.VcVulnerableCPEs = v
}

// GetVendorComments returns the VendorComments field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetVendorComments() []ApiNVD20VendorComment {
	if o == nil || IsNil(o.VendorComments) {
		var ret []ApiNVD20VendorComment
		return ret
	}
	return o.VendorComments
}

// GetVendorCommentsOk returns a tuple with the VendorComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetVendorCommentsOk() ([]ApiNVD20VendorComment, bool) {
	if o == nil || IsNil(o.VendorComments) {
		return nil, false
	}
	return o.VendorComments, true
}

// HasVendorComments returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasVendorComments() bool {
	if o != nil && !IsNil(o.VendorComments) {
		return true
	}

	return false
}

// SetVendorComments gets a reference to the given []ApiNVD20VendorComment and assigns it to the VendorComments field.
func (o *ApiNVD20CVE) SetVendorComments(v []ApiNVD20VendorComment) {
	o.VendorComments = v
}

// GetVulnStatus returns the VulnStatus field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetVulnStatus() string {
	if o == nil || IsNil(o.VulnStatus) {
		var ret string
		return ret
	}
	return *o.VulnStatus
}

// GetVulnStatusOk returns a tuple with the VulnStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetVulnStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VulnStatus) {
		return nil, false
	}
	return o.VulnStatus, true
}

// HasVulnStatus returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasVulnStatus() bool {
	if o != nil && !IsNil(o.VulnStatus) {
		return true
	}

	return false
}

// SetVulnStatus gets a reference to the given string and assigns it to the VulnStatus field.
func (o *ApiNVD20CVE) SetVulnStatus(v string) {
	o.VulnStatus = &v
}

// GetWeaknesses returns the Weaknesses field value if set, zero value otherwise.
func (o *ApiNVD20CVE) GetWeaknesses() []ApiNVD20Weakness {
	if o == nil || IsNil(o.Weaknesses) {
		var ret []ApiNVD20Weakness
		return ret
	}
	return o.Weaknesses
}

// GetWeaknessesOk returns a tuple with the Weaknesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNVD20CVE) GetWeaknessesOk() ([]ApiNVD20Weakness, bool) {
	if o == nil || IsNil(o.Weaknesses) {
		return nil, false
	}
	return o.Weaknesses, true
}

// HasWeaknesses returns a boolean if a field has been set.
func (o *ApiNVD20CVE) HasWeaknesses() bool {
	if o != nil && !IsNil(o.Weaknesses) {
		return true
	}

	return false
}

// SetWeaknesses gets a reference to the given []ApiNVD20Weakness and assigns it to the Weaknesses field.
func (o *ApiNVD20CVE) SetWeaknesses(v []ApiNVD20Weakness) {
	o.Weaknesses = v
}

func (o ApiNVD20CVE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNVD20CVE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CisaActionDue) {
		toSerialize["cisaActionDue"] = o.CisaActionDue
	}
	if !IsNil(o.CisaExploitAdd) {
		toSerialize["cisaExploitAdd"] = o.CisaExploitAdd
	}
	if !IsNil(o.CisaRequiredAction) {
		toSerialize["cisaRequiredAction"] = o.CisaRequiredAction
	}
	if !IsNil(o.CisaVulnerabilityName) {
		toSerialize["cisaVulnerabilityName"] = o.CisaVulnerabilityName
	}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	if !IsNil(o.Descriptions) {
		toSerialize["descriptions"] = o.Descriptions
	}
	if !IsNil(o.EvaluatorComment) {
		toSerialize["evaluatorComment"] = o.EvaluatorComment
	}
	if !IsNil(o.EvaluatorImpact) {
		toSerialize["evaluatorImpact"] = o.EvaluatorImpact
	}
	if !IsNil(o.EvaluatorSolution) {
		toSerialize["evaluatorSolution"] = o.EvaluatorSolution
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.Published) {
		toSerialize["published"] = o.Published
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.SourceIdentifier) {
		toSerialize["sourceIdentifier"] = o.SourceIdentifier
	}
	if !IsNil(o.VcConfigurations) {
		toSerialize["vcConfigurations"] = o.VcConfigurations
	}
	if !IsNil(o.VcVulnerableCPEs) {
		toSerialize["vcVulnerableCPEs"] = o.VcVulnerableCPEs
	}
	if !IsNil(o.VendorComments) {
		toSerialize["vendorComments"] = o.VendorComments
	}
	if !IsNil(o.VulnStatus) {
		toSerialize["vulnStatus"] = o.VulnStatus
	}
	if !IsNil(o.Weaknesses) {
		toSerialize["weaknesses"] = o.Weaknesses
	}
	return toSerialize, nil
}

type NullableApiNVD20CVE struct {
	value *ApiNVD20CVE
	isSet bool
}

func (v NullableApiNVD20CVE) Get() *ApiNVD20CVE {
	return v.value
}

func (v *NullableApiNVD20CVE) Set(val *ApiNVD20CVE) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNVD20CVE) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNVD20CVE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNVD20CVE(val *ApiNVD20CVE) *NullableApiNVD20CVE {
	return &NullableApiNVD20CVE{value: val, isSet: true}
}

func (v NullableApiNVD20CVE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNVD20CVE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


