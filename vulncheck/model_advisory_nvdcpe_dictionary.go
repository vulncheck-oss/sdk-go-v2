/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryNVDCPEDictionary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryNVDCPEDictionary{}

// AdvisoryNVDCPEDictionary struct for AdvisoryNVDCPEDictionary
type AdvisoryNVDCPEDictionary struct {
	BackupOnly *string `json:"backupOnly,omitempty"`
}

// NewAdvisoryNVDCPEDictionary instantiates a new AdvisoryNVDCPEDictionary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryNVDCPEDictionary() *AdvisoryNVDCPEDictionary {
	this := AdvisoryNVDCPEDictionary{}
	return &this
}

// NewAdvisoryNVDCPEDictionaryWithDefaults instantiates a new AdvisoryNVDCPEDictionary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryNVDCPEDictionaryWithDefaults() *AdvisoryNVDCPEDictionary {
	this := AdvisoryNVDCPEDictionary{}
	return &this
}

// GetBackupOnly returns the BackupOnly field value if set, zero value otherwise.
func (o *AdvisoryNVDCPEDictionary) GetBackupOnly() string {
	if o == nil || IsNil(o.BackupOnly) {
		var ret string
		return ret
	}
	return *o.BackupOnly
}

// GetBackupOnlyOk returns a tuple with the BackupOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryNVDCPEDictionary) GetBackupOnlyOk() (*string, bool) {
	if o == nil || IsNil(o.BackupOnly) {
		return nil, false
	}
	return o.BackupOnly, true
}

// HasBackupOnly returns a boolean if a field has been set.
func (o *AdvisoryNVDCPEDictionary) HasBackupOnly() bool {
	if o != nil && !IsNil(o.BackupOnly) {
		return true
	}

	return false
}

// SetBackupOnly gets a reference to the given string and assigns it to the BackupOnly field.
func (o *AdvisoryNVDCPEDictionary) SetBackupOnly(v string) {
	o.BackupOnly = &v
}

func (o AdvisoryNVDCPEDictionary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryNVDCPEDictionary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupOnly) {
		toSerialize["backupOnly"] = o.BackupOnly
	}
	return toSerialize, nil
}

type NullableAdvisoryNVDCPEDictionary struct {
	value *AdvisoryNVDCPEDictionary
	isSet bool
}

func (v NullableAdvisoryNVDCPEDictionary) Get() *AdvisoryNVDCPEDictionary {
	return v.value
}

func (v *NullableAdvisoryNVDCPEDictionary) Set(val *AdvisoryNVDCPEDictionary) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryNVDCPEDictionary) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryNVDCPEDictionary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryNVDCPEDictionary(val *AdvisoryNVDCPEDictionary) *NullableAdvisoryNVDCPEDictionary {
	return &NullableAdvisoryNVDCPEDictionary{value: val, isSet: true}
}

func (v NullableAdvisoryNVDCPEDictionary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryNVDCPEDictionary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


