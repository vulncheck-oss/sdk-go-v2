/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRemediationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRemediationData{}

// AdvisoryRemediationData struct for AdvisoryRemediationData
type AdvisoryRemediationData struct {
	Category *string `json:"category,omitempty"`
	Date *string `json:"date,omitempty"`
	Details *string `json:"details,omitempty"`
	Entitlements []string `json:"entitlements,omitempty"`
	GroupIds []string `json:"group_ids,omitempty"`
	ProductIds []string `json:"product_ids,omitempty"`
	RestartRequired *AdvisoryRestartData `json:"restart_required,omitempty"`
}

// NewAdvisoryRemediationData instantiates a new AdvisoryRemediationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRemediationData() *AdvisoryRemediationData {
	this := AdvisoryRemediationData{}
	return &this
}

// NewAdvisoryRemediationDataWithDefaults instantiates a new AdvisoryRemediationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRemediationDataWithDefaults() *AdvisoryRemediationData {
	this := AdvisoryRemediationData{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AdvisoryRemediationData) SetCategory(v string) {
	o.Category = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AdvisoryRemediationData) SetDate(v string) {
	o.Date = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *AdvisoryRemediationData) SetDetails(v string) {
	o.Details = &v
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetEntitlements() []string {
	if o == nil || IsNil(o.Entitlements) {
		var ret []string
		return ret
	}
	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetEntitlementsOk() ([]string, bool) {
	if o == nil || IsNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasEntitlements() bool {
	if o != nil && !IsNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given []string and assigns it to the Entitlements field.
func (o *AdvisoryRemediationData) SetEntitlements(v []string) {
	o.Entitlements = v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *AdvisoryRemediationData) SetGroupIds(v []string) {
	o.GroupIds = v
}

// GetProductIds returns the ProductIds field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetProductIds() []string {
	if o == nil || IsNil(o.ProductIds) {
		var ret []string
		return ret
	}
	return o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetProductIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductIds) {
		return nil, false
	}
	return o.ProductIds, true
}

// HasProductIds returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasProductIds() bool {
	if o != nil && !IsNil(o.ProductIds) {
		return true
	}

	return false
}

// SetProductIds gets a reference to the given []string and assigns it to the ProductIds field.
func (o *AdvisoryRemediationData) SetProductIds(v []string) {
	o.ProductIds = v
}

// GetRestartRequired returns the RestartRequired field value if set, zero value otherwise.
func (o *AdvisoryRemediationData) GetRestartRequired() AdvisoryRestartData {
	if o == nil || IsNil(o.RestartRequired) {
		var ret AdvisoryRestartData
		return ret
	}
	return *o.RestartRequired
}

// GetRestartRequiredOk returns a tuple with the RestartRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRemediationData) GetRestartRequiredOk() (*AdvisoryRestartData, bool) {
	if o == nil || IsNil(o.RestartRequired) {
		return nil, false
	}
	return o.RestartRequired, true
}

// HasRestartRequired returns a boolean if a field has been set.
func (o *AdvisoryRemediationData) HasRestartRequired() bool {
	if o != nil && !IsNil(o.RestartRequired) {
		return true
	}

	return false
}

// SetRestartRequired gets a reference to the given AdvisoryRestartData and assigns it to the RestartRequired field.
func (o *AdvisoryRemediationData) SetRestartRequired(v AdvisoryRestartData) {
	o.RestartRequired = &v
}

func (o AdvisoryRemediationData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRemediationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Entitlements) {
		toSerialize["entitlements"] = o.Entitlements
	}
	if !IsNil(o.GroupIds) {
		toSerialize["group_ids"] = o.GroupIds
	}
	if !IsNil(o.ProductIds) {
		toSerialize["product_ids"] = o.ProductIds
	}
	if !IsNil(o.RestartRequired) {
		toSerialize["restart_required"] = o.RestartRequired
	}
	return toSerialize, nil
}

type NullableAdvisoryRemediationData struct {
	value *AdvisoryRemediationData
	isSet bool
}

func (v NullableAdvisoryRemediationData) Get() *AdvisoryRemediationData {
	return v.value
}

func (v *NullableAdvisoryRemediationData) Set(val *AdvisoryRemediationData) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRemediationData) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRemediationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRemediationData(val *AdvisoryRemediationData) *NullableAdvisoryRemediationData {
	return &NullableAdvisoryRemediationData{value: val, isSet: true}
}

func (v NullableAdvisoryRemediationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRemediationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


