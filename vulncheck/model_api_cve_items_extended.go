/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCveItemsExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCveItemsExtended{}

// ApiCveItemsExtended struct for ApiCveItemsExtended
type ApiCveItemsExtended struct {
	Timestamp *string `json:"_timestamp,omitempty"`
	Configurations *ApiConfigurations `json:"configurations,omitempty"`
	Cve *ApiCVEExtended `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	// the deep tag instructs deep.Equal to ignore this field (used during OpenSearch loading)
	DocumentGenerationDate *string `json:"documentGenerationDate,omitempty"`
	Impact *ApiImpactExtended `json:"impact,omitempty"`
	LastModifiedDate *string `json:"lastModifiedDate,omitempty"`
	MitreAttackTechniques []ApiMitreAttackTech `json:"mitre_attack_techniques,omitempty"`
	PublishedDate *string `json:"publishedDate,omitempty"`
	RelatedAttackPatterns []ApiRelatedAttackPattern `json:"related_attack_patterns,omitempty"`
	VcConfigurations *ApiConfigurations `json:"vcConfigurations,omitempty"`
	VcVulnerableCPEs []string `json:"vcVulnerableCPEs,omitempty"`
	VulnerableCpes []string `json:"vulnerable_cpes,omitempty"`
}

// NewApiCveItemsExtended instantiates a new ApiCveItemsExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCveItemsExtended() *ApiCveItemsExtended {
	this := ApiCveItemsExtended{}
	return &this
}

// NewApiCveItemsExtendedWithDefaults instantiates a new ApiCveItemsExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCveItemsExtendedWithDefaults() *ApiCveItemsExtended {
	this := ApiCveItemsExtended{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ApiCveItemsExtended) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetConfigurations() ApiConfigurations {
	if o == nil || IsNil(o.Configurations) {
		var ret ApiConfigurations
		return ret
	}
	return *o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetConfigurationsOk() (*ApiConfigurations, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given ApiConfigurations and assigns it to the Configurations field.
func (o *ApiCveItemsExtended) SetConfigurations(v ApiConfigurations) {
	o.Configurations = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetCve() ApiCVEExtended {
	if o == nil || IsNil(o.Cve) {
		var ret ApiCVEExtended
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetCveOk() (*ApiCVEExtended, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given ApiCVEExtended and assigns it to the Cve field.
func (o *ApiCveItemsExtended) SetCve(v ApiCVEExtended) {
	o.Cve = &v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *ApiCveItemsExtended) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDocumentGenerationDate returns the DocumentGenerationDate field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetDocumentGenerationDate() string {
	if o == nil || IsNil(o.DocumentGenerationDate) {
		var ret string
		return ret
	}
	return *o.DocumentGenerationDate
}

// GetDocumentGenerationDateOk returns a tuple with the DocumentGenerationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetDocumentGenerationDateOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentGenerationDate) {
		return nil, false
	}
	return o.DocumentGenerationDate, true
}

// HasDocumentGenerationDate returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasDocumentGenerationDate() bool {
	if o != nil && !IsNil(o.DocumentGenerationDate) {
		return true
	}

	return false
}

// SetDocumentGenerationDate gets a reference to the given string and assigns it to the DocumentGenerationDate field.
func (o *ApiCveItemsExtended) SetDocumentGenerationDate(v string) {
	o.DocumentGenerationDate = &v
}

// GetImpact returns the Impact field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetImpact() ApiImpactExtended {
	if o == nil || IsNil(o.Impact) {
		var ret ApiImpactExtended
		return ret
	}
	return *o.Impact
}

// GetImpactOk returns a tuple with the Impact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetImpactOk() (*ApiImpactExtended, bool) {
	if o == nil || IsNil(o.Impact) {
		return nil, false
	}
	return o.Impact, true
}

// HasImpact returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasImpact() bool {
	if o != nil && !IsNil(o.Impact) {
		return true
	}

	return false
}

// SetImpact gets a reference to the given ApiImpactExtended and assigns it to the Impact field.
func (o *ApiCveItemsExtended) SetImpact(v ApiImpactExtended) {
	o.Impact = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetLastModifiedDate() string {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *ApiCveItemsExtended) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

// GetMitreAttackTechniques returns the MitreAttackTechniques field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetMitreAttackTechniques() []ApiMitreAttackTech {
	if o == nil || IsNil(o.MitreAttackTechniques) {
		var ret []ApiMitreAttackTech
		return ret
	}
	return o.MitreAttackTechniques
}

// GetMitreAttackTechniquesOk returns a tuple with the MitreAttackTechniques field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetMitreAttackTechniquesOk() ([]ApiMitreAttackTech, bool) {
	if o == nil || IsNil(o.MitreAttackTechniques) {
		return nil, false
	}
	return o.MitreAttackTechniques, true
}

// HasMitreAttackTechniques returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasMitreAttackTechniques() bool {
	if o != nil && !IsNil(o.MitreAttackTechniques) {
		return true
	}

	return false
}

// SetMitreAttackTechniques gets a reference to the given []ApiMitreAttackTech and assigns it to the MitreAttackTechniques field.
func (o *ApiCveItemsExtended) SetMitreAttackTechniques(v []ApiMitreAttackTech) {
	o.MitreAttackTechniques = v
}

// GetPublishedDate returns the PublishedDate field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetPublishedDate() string {
	if o == nil || IsNil(o.PublishedDate) {
		var ret string
		return ret
	}
	return *o.PublishedDate
}

// GetPublishedDateOk returns a tuple with the PublishedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetPublishedDateOk() (*string, bool) {
	if o == nil || IsNil(o.PublishedDate) {
		return nil, false
	}
	return o.PublishedDate, true
}

// HasPublishedDate returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasPublishedDate() bool {
	if o != nil && !IsNil(o.PublishedDate) {
		return true
	}

	return false
}

// SetPublishedDate gets a reference to the given string and assigns it to the PublishedDate field.
func (o *ApiCveItemsExtended) SetPublishedDate(v string) {
	o.PublishedDate = &v
}

// GetRelatedAttackPatterns returns the RelatedAttackPatterns field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetRelatedAttackPatterns() []ApiRelatedAttackPattern {
	if o == nil || IsNil(o.RelatedAttackPatterns) {
		var ret []ApiRelatedAttackPattern
		return ret
	}
	return o.RelatedAttackPatterns
}

// GetRelatedAttackPatternsOk returns a tuple with the RelatedAttackPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetRelatedAttackPatternsOk() ([]ApiRelatedAttackPattern, bool) {
	if o == nil || IsNil(o.RelatedAttackPatterns) {
		return nil, false
	}
	return o.RelatedAttackPatterns, true
}

// HasRelatedAttackPatterns returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasRelatedAttackPatterns() bool {
	if o != nil && !IsNil(o.RelatedAttackPatterns) {
		return true
	}

	return false
}

// SetRelatedAttackPatterns gets a reference to the given []ApiRelatedAttackPattern and assigns it to the RelatedAttackPatterns field.
func (o *ApiCveItemsExtended) SetRelatedAttackPatterns(v []ApiRelatedAttackPattern) {
	o.RelatedAttackPatterns = v
}

// GetVcConfigurations returns the VcConfigurations field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetVcConfigurations() ApiConfigurations {
	if o == nil || IsNil(o.VcConfigurations) {
		var ret ApiConfigurations
		return ret
	}
	return *o.VcConfigurations
}

// GetVcConfigurationsOk returns a tuple with the VcConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetVcConfigurationsOk() (*ApiConfigurations, bool) {
	if o == nil || IsNil(o.VcConfigurations) {
		return nil, false
	}
	return o.VcConfigurations, true
}

// HasVcConfigurations returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasVcConfigurations() bool {
	if o != nil && !IsNil(o.VcConfigurations) {
		return true
	}

	return false
}

// SetVcConfigurations gets a reference to the given ApiConfigurations and assigns it to the VcConfigurations field.
func (o *ApiCveItemsExtended) SetVcConfigurations(v ApiConfigurations) {
	o.VcConfigurations = &v
}

// GetVcVulnerableCPEs returns the VcVulnerableCPEs field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetVcVulnerableCPEs() []string {
	if o == nil || IsNil(o.VcVulnerableCPEs) {
		var ret []string
		return ret
	}
	return o.VcVulnerableCPEs
}

// GetVcVulnerableCPEsOk returns a tuple with the VcVulnerableCPEs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetVcVulnerableCPEsOk() ([]string, bool) {
	if o == nil || IsNil(o.VcVulnerableCPEs) {
		return nil, false
	}
	return o.VcVulnerableCPEs, true
}

// HasVcVulnerableCPEs returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasVcVulnerableCPEs() bool {
	if o != nil && !IsNil(o.VcVulnerableCPEs) {
		return true
	}

	return false
}

// SetVcVulnerableCPEs gets a reference to the given []string and assigns it to the VcVulnerableCPEs field.
func (o *ApiCveItemsExtended) SetVcVulnerableCPEs(v []string) {
	o.VcVulnerableCPEs = v
}

// GetVulnerableCpes returns the VulnerableCpes field value if set, zero value otherwise.
func (o *ApiCveItemsExtended) GetVulnerableCpes() []string {
	if o == nil || IsNil(o.VulnerableCpes) {
		var ret []string
		return ret
	}
	return o.VulnerableCpes
}

// GetVulnerableCpesOk returns a tuple with the VulnerableCpes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCveItemsExtended) GetVulnerableCpesOk() ([]string, bool) {
	if o == nil || IsNil(o.VulnerableCpes) {
		return nil, false
	}
	return o.VulnerableCpes, true
}

// HasVulnerableCpes returns a boolean if a field has been set.
func (o *ApiCveItemsExtended) HasVulnerableCpes() bool {
	if o != nil && !IsNil(o.VulnerableCpes) {
		return true
	}

	return false
}

// SetVulnerableCpes gets a reference to the given []string and assigns it to the VulnerableCpes field.
func (o *ApiCveItemsExtended) SetVulnerableCpes(v []string) {
	o.VulnerableCpes = v
}

func (o ApiCveItemsExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCveItemsExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["_timestamp"] = o.Timestamp
	}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DocumentGenerationDate) {
		toSerialize["documentGenerationDate"] = o.DocumentGenerationDate
	}
	if !IsNil(o.Impact) {
		toSerialize["impact"] = o.Impact
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.MitreAttackTechniques) {
		toSerialize["mitre_attack_techniques"] = o.MitreAttackTechniques
	}
	if !IsNil(o.PublishedDate) {
		toSerialize["publishedDate"] = o.PublishedDate
	}
	if !IsNil(o.RelatedAttackPatterns) {
		toSerialize["related_attack_patterns"] = o.RelatedAttackPatterns
	}
	if !IsNil(o.VcConfigurations) {
		toSerialize["vcConfigurations"] = o.VcConfigurations
	}
	if !IsNil(o.VcVulnerableCPEs) {
		toSerialize["vcVulnerableCPEs"] = o.VcVulnerableCPEs
	}
	if !IsNil(o.VulnerableCpes) {
		toSerialize["vulnerable_cpes"] = o.VulnerableCpes
	}
	return toSerialize, nil
}

type NullableApiCveItemsExtended struct {
	value *ApiCveItemsExtended
	isSet bool
}

func (v NullableApiCveItemsExtended) Get() *ApiCveItemsExtended {
	return v.value
}

func (v *NullableApiCveItemsExtended) Set(val *ApiCveItemsExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCveItemsExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCveItemsExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCveItemsExtended(val *ApiCveItemsExtended) *NullableApiCveItemsExtended {
	return &NullableApiCveItemsExtended{value: val, isSet: true}
}

func (v NullableApiCveItemsExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCveItemsExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


