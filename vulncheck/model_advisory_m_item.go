/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryMItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryMItem{}

// AdvisoryMItem struct for AdvisoryMItem
type AdvisoryMItem struct {
	Items []AdvisoryMItem `json:"Items,omitempty"`
	Name *string `json:"Name,omitempty"`
	ProductID *string `json:"ProductID,omitempty"`
	// diff
	Type *int32 `json:"Type,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// NewAdvisoryMItem instantiates a new AdvisoryMItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryMItem() *AdvisoryMItem {
	this := AdvisoryMItem{}
	return &this
}

// NewAdvisoryMItemWithDefaults instantiates a new AdvisoryMItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryMItemWithDefaults() *AdvisoryMItem {
	this := AdvisoryMItem{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AdvisoryMItem) GetItems() []AdvisoryMItem {
	if o == nil || IsNil(o.Items) {
		var ret []AdvisoryMItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMItem) GetItemsOk() ([]AdvisoryMItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AdvisoryMItem) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AdvisoryMItem and assigns it to the Items field.
func (o *AdvisoryMItem) SetItems(v []AdvisoryMItem) {
	o.Items = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryMItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryMItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryMItem) SetName(v string) {
	o.Name = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *AdvisoryMItem) GetProductID() string {
	if o == nil || IsNil(o.ProductID) {
		var ret string
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMItem) GetProductIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *AdvisoryMItem) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given string and assigns it to the ProductID field.
func (o *AdvisoryMItem) SetProductID(v string) {
	o.ProductID = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryMItem) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMItem) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryMItem) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *AdvisoryMItem) SetType(v int32) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AdvisoryMItem) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryMItem) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AdvisoryMItem) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AdvisoryMItem) SetValue(v string) {
	o.Value = &v
}

func (o AdvisoryMItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryMItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["Items"] = o.Items
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.ProductID) {
		toSerialize["ProductID"] = o.ProductID
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAdvisoryMItem struct {
	value *AdvisoryMItem
	isSet bool
}

func (v NullableAdvisoryMItem) Get() *AdvisoryMItem {
	return v.value
}

func (v *NullableAdvisoryMItem) Set(val *AdvisoryMItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryMItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryMItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryMItem(val *AdvisoryMItem) *NullableAdvisoryMItem {
	return &NullableAdvisoryMItem{value: val, isSet: true}
}

func (v NullableAdvisoryMItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryMItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


