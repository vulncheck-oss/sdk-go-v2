/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryUSOMAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryUSOMAdvisory{}

// AdvisoryUSOMAdvisory struct for AdvisoryUSOMAdvisory
type AdvisoryUSOMAdvisory struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	EffectTr *string `json:"effect_tr,omitempty"`
	GeneralInformationTr *string `json:"general_information_tr,omitempty"`
	References []string `json:"references,omitempty"`
	SolutionTr *string `json:"solution_tr,omitempty"`
	TitleTr *string `json:"title_tr,omitempty"`
	Trid *string `json:"trid,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryUSOMAdvisory instantiates a new AdvisoryUSOMAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryUSOMAdvisory() *AdvisoryUSOMAdvisory {
	this := AdvisoryUSOMAdvisory{}
	return &this
}

// NewAdvisoryUSOMAdvisoryWithDefaults instantiates a new AdvisoryUSOMAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryUSOMAdvisoryWithDefaults() *AdvisoryUSOMAdvisory {
	this := AdvisoryUSOMAdvisory{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryUSOMAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryUSOMAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetEffectTr returns the EffectTr field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetEffectTr() string {
	if o == nil || IsNil(o.EffectTr) {
		var ret string
		return ret
	}
	return *o.EffectTr
}

// GetEffectTrOk returns a tuple with the EffectTr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetEffectTrOk() (*string, bool) {
	if o == nil || IsNil(o.EffectTr) {
		return nil, false
	}
	return o.EffectTr, true
}

// HasEffectTr returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasEffectTr() bool {
	if o != nil && !IsNil(o.EffectTr) {
		return true
	}

	return false
}

// SetEffectTr gets a reference to the given string and assigns it to the EffectTr field.
func (o *AdvisoryUSOMAdvisory) SetEffectTr(v string) {
	o.EffectTr = &v
}

// GetGeneralInformationTr returns the GeneralInformationTr field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetGeneralInformationTr() string {
	if o == nil || IsNil(o.GeneralInformationTr) {
		var ret string
		return ret
	}
	return *o.GeneralInformationTr
}

// GetGeneralInformationTrOk returns a tuple with the GeneralInformationTr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetGeneralInformationTrOk() (*string, bool) {
	if o == nil || IsNil(o.GeneralInformationTr) {
		return nil, false
	}
	return o.GeneralInformationTr, true
}

// HasGeneralInformationTr returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasGeneralInformationTr() bool {
	if o != nil && !IsNil(o.GeneralInformationTr) {
		return true
	}

	return false
}

// SetGeneralInformationTr gets a reference to the given string and assigns it to the GeneralInformationTr field.
func (o *AdvisoryUSOMAdvisory) SetGeneralInformationTr(v string) {
	o.GeneralInformationTr = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryUSOMAdvisory) SetReferences(v []string) {
	o.References = v
}

// GetSolutionTr returns the SolutionTr field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetSolutionTr() string {
	if o == nil || IsNil(o.SolutionTr) {
		var ret string
		return ret
	}
	return *o.SolutionTr
}

// GetSolutionTrOk returns a tuple with the SolutionTr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetSolutionTrOk() (*string, bool) {
	if o == nil || IsNil(o.SolutionTr) {
		return nil, false
	}
	return o.SolutionTr, true
}

// HasSolutionTr returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasSolutionTr() bool {
	if o != nil && !IsNil(o.SolutionTr) {
		return true
	}

	return false
}

// SetSolutionTr gets a reference to the given string and assigns it to the SolutionTr field.
func (o *AdvisoryUSOMAdvisory) SetSolutionTr(v string) {
	o.SolutionTr = &v
}

// GetTitleTr returns the TitleTr field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetTitleTr() string {
	if o == nil || IsNil(o.TitleTr) {
		var ret string
		return ret
	}
	return *o.TitleTr
}

// GetTitleTrOk returns a tuple with the TitleTr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetTitleTrOk() (*string, bool) {
	if o == nil || IsNil(o.TitleTr) {
		return nil, false
	}
	return o.TitleTr, true
}

// HasTitleTr returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasTitleTr() bool {
	if o != nil && !IsNil(o.TitleTr) {
		return true
	}

	return false
}

// SetTitleTr gets a reference to the given string and assigns it to the TitleTr field.
func (o *AdvisoryUSOMAdvisory) SetTitleTr(v string) {
	o.TitleTr = &v
}

// GetTrid returns the Trid field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetTrid() string {
	if o == nil || IsNil(o.Trid) {
		var ret string
		return ret
	}
	return *o.Trid
}

// GetTridOk returns a tuple with the Trid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetTridOk() (*string, bool) {
	if o == nil || IsNil(o.Trid) {
		return nil, false
	}
	return o.Trid, true
}

// HasTrid returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasTrid() bool {
	if o != nil && !IsNil(o.Trid) {
		return true
	}

	return false
}

// SetTrid gets a reference to the given string and assigns it to the Trid field.
func (o *AdvisoryUSOMAdvisory) SetTrid(v string) {
	o.Trid = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryUSOMAdvisory) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryUSOMAdvisory) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryUSOMAdvisory) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryUSOMAdvisory) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryUSOMAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryUSOMAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.EffectTr) {
		toSerialize["effect_tr"] = o.EffectTr
	}
	if !IsNil(o.GeneralInformationTr) {
		toSerialize["general_information_tr"] = o.GeneralInformationTr
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.SolutionTr) {
		toSerialize["solution_tr"] = o.SolutionTr
	}
	if !IsNil(o.TitleTr) {
		toSerialize["title_tr"] = o.TitleTr
	}
	if !IsNil(o.Trid) {
		toSerialize["trid"] = o.Trid
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryUSOMAdvisory struct {
	value *AdvisoryUSOMAdvisory
	isSet bool
}

func (v NullableAdvisoryUSOMAdvisory) Get() *AdvisoryUSOMAdvisory {
	return v.value
}

func (v *NullableAdvisoryUSOMAdvisory) Set(val *AdvisoryUSOMAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryUSOMAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryUSOMAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryUSOMAdvisory(val *AdvisoryUSOMAdvisory) *NullableAdvisoryUSOMAdvisory {
	return &NullableAdvisoryUSOMAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryUSOMAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryUSOMAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


