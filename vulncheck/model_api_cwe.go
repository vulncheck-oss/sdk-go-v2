/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiCWE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCWE{}

// ApiCWE struct for ApiCWE
type ApiCWE struct {
	Abstraction *string `json:"abstraction,omitempty"`
	Description *string `json:"description,omitempty"`
	KevCount *int32 `json:"kev_count,omitempty"`
	Status *string `json:"status,omitempty"`
	Structure *string `json:"structure,omitempty"`
	VulncheckNvdCount *int32 `json:"vulncheck_nvd_count,omitempty"`
	WeaknessId *string `json:"weakness_id,omitempty"`
	WeaknessName *string `json:"weakness_name,omitempty"`
	WeightedScore *float32 `json:"weighted_score,omitempty"`
}

// NewApiCWE instantiates a new ApiCWE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCWE() *ApiCWE {
	this := ApiCWE{}
	return &this
}

// NewApiCWEWithDefaults instantiates a new ApiCWE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCWEWithDefaults() *ApiCWE {
	this := ApiCWE{}
	return &this
}

// GetAbstraction returns the Abstraction field value if set, zero value otherwise.
func (o *ApiCWE) GetAbstraction() string {
	if o == nil || IsNil(o.Abstraction) {
		var ret string
		return ret
	}
	return *o.Abstraction
}

// GetAbstractionOk returns a tuple with the Abstraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetAbstractionOk() (*string, bool) {
	if o == nil || IsNil(o.Abstraction) {
		return nil, false
	}
	return o.Abstraction, true
}

// HasAbstraction returns a boolean if a field has been set.
func (o *ApiCWE) HasAbstraction() bool {
	if o != nil && !IsNil(o.Abstraction) {
		return true
	}

	return false
}

// SetAbstraction gets a reference to the given string and assigns it to the Abstraction field.
func (o *ApiCWE) SetAbstraction(v string) {
	o.Abstraction = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiCWE) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiCWE) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiCWE) SetDescription(v string) {
	o.Description = &v
}

// GetKevCount returns the KevCount field value if set, zero value otherwise.
func (o *ApiCWE) GetKevCount() int32 {
	if o == nil || IsNil(o.KevCount) {
		var ret int32
		return ret
	}
	return *o.KevCount
}

// GetKevCountOk returns a tuple with the KevCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetKevCountOk() (*int32, bool) {
	if o == nil || IsNil(o.KevCount) {
		return nil, false
	}
	return o.KevCount, true
}

// HasKevCount returns a boolean if a field has been set.
func (o *ApiCWE) HasKevCount() bool {
	if o != nil && !IsNil(o.KevCount) {
		return true
	}

	return false
}

// SetKevCount gets a reference to the given int32 and assigns it to the KevCount field.
func (o *ApiCWE) SetKevCount(v int32) {
	o.KevCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiCWE) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiCWE) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiCWE) SetStatus(v string) {
	o.Status = &v
}

// GetStructure returns the Structure field value if set, zero value otherwise.
func (o *ApiCWE) GetStructure() string {
	if o == nil || IsNil(o.Structure) {
		var ret string
		return ret
	}
	return *o.Structure
}

// GetStructureOk returns a tuple with the Structure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetStructureOk() (*string, bool) {
	if o == nil || IsNil(o.Structure) {
		return nil, false
	}
	return o.Structure, true
}

// HasStructure returns a boolean if a field has been set.
func (o *ApiCWE) HasStructure() bool {
	if o != nil && !IsNil(o.Structure) {
		return true
	}

	return false
}

// SetStructure gets a reference to the given string and assigns it to the Structure field.
func (o *ApiCWE) SetStructure(v string) {
	o.Structure = &v
}

// GetVulncheckNvdCount returns the VulncheckNvdCount field value if set, zero value otherwise.
func (o *ApiCWE) GetVulncheckNvdCount() int32 {
	if o == nil || IsNil(o.VulncheckNvdCount) {
		var ret int32
		return ret
	}
	return *o.VulncheckNvdCount
}

// GetVulncheckNvdCountOk returns a tuple with the VulncheckNvdCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetVulncheckNvdCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VulncheckNvdCount) {
		return nil, false
	}
	return o.VulncheckNvdCount, true
}

// HasVulncheckNvdCount returns a boolean if a field has been set.
func (o *ApiCWE) HasVulncheckNvdCount() bool {
	if o != nil && !IsNil(o.VulncheckNvdCount) {
		return true
	}

	return false
}

// SetVulncheckNvdCount gets a reference to the given int32 and assigns it to the VulncheckNvdCount field.
func (o *ApiCWE) SetVulncheckNvdCount(v int32) {
	o.VulncheckNvdCount = &v
}

// GetWeaknessId returns the WeaknessId field value if set, zero value otherwise.
func (o *ApiCWE) GetWeaknessId() string {
	if o == nil || IsNil(o.WeaknessId) {
		var ret string
		return ret
	}
	return *o.WeaknessId
}

// GetWeaknessIdOk returns a tuple with the WeaknessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetWeaknessIdOk() (*string, bool) {
	if o == nil || IsNil(o.WeaknessId) {
		return nil, false
	}
	return o.WeaknessId, true
}

// HasWeaknessId returns a boolean if a field has been set.
func (o *ApiCWE) HasWeaknessId() bool {
	if o != nil && !IsNil(o.WeaknessId) {
		return true
	}

	return false
}

// SetWeaknessId gets a reference to the given string and assigns it to the WeaknessId field.
func (o *ApiCWE) SetWeaknessId(v string) {
	o.WeaknessId = &v
}

// GetWeaknessName returns the WeaknessName field value if set, zero value otherwise.
func (o *ApiCWE) GetWeaknessName() string {
	if o == nil || IsNil(o.WeaknessName) {
		var ret string
		return ret
	}
	return *o.WeaknessName
}

// GetWeaknessNameOk returns a tuple with the WeaknessName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetWeaknessNameOk() (*string, bool) {
	if o == nil || IsNil(o.WeaknessName) {
		return nil, false
	}
	return o.WeaknessName, true
}

// HasWeaknessName returns a boolean if a field has been set.
func (o *ApiCWE) HasWeaknessName() bool {
	if o != nil && !IsNil(o.WeaknessName) {
		return true
	}

	return false
}

// SetWeaknessName gets a reference to the given string and assigns it to the WeaknessName field.
func (o *ApiCWE) SetWeaknessName(v string) {
	o.WeaknessName = &v
}

// GetWeightedScore returns the WeightedScore field value if set, zero value otherwise.
func (o *ApiCWE) GetWeightedScore() float32 {
	if o == nil || IsNil(o.WeightedScore) {
		var ret float32
		return ret
	}
	return *o.WeightedScore
}

// GetWeightedScoreOk returns a tuple with the WeightedScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCWE) GetWeightedScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.WeightedScore) {
		return nil, false
	}
	return o.WeightedScore, true
}

// HasWeightedScore returns a boolean if a field has been set.
func (o *ApiCWE) HasWeightedScore() bool {
	if o != nil && !IsNil(o.WeightedScore) {
		return true
	}

	return false
}

// SetWeightedScore gets a reference to the given float32 and assigns it to the WeightedScore field.
func (o *ApiCWE) SetWeightedScore(v float32) {
	o.WeightedScore = &v
}

func (o ApiCWE) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCWE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Abstraction) {
		toSerialize["abstraction"] = o.Abstraction
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.KevCount) {
		toSerialize["kev_count"] = o.KevCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Structure) {
		toSerialize["structure"] = o.Structure
	}
	if !IsNil(o.VulncheckNvdCount) {
		toSerialize["vulncheck_nvd_count"] = o.VulncheckNvdCount
	}
	if !IsNil(o.WeaknessId) {
		toSerialize["weakness_id"] = o.WeaknessId
	}
	if !IsNil(o.WeaknessName) {
		toSerialize["weakness_name"] = o.WeaknessName
	}
	if !IsNil(o.WeightedScore) {
		toSerialize["weighted_score"] = o.WeightedScore
	}
	return toSerialize, nil
}

type NullableApiCWE struct {
	value *ApiCWE
	isSet bool
}

func (v NullableApiCWE) Get() *ApiCWE {
	return v.value
}

func (v *NullableApiCWE) Set(val *ApiCWE) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCWE) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCWE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCWE(val *ApiCWE) *NullableApiCWE {
	return &NullableApiCWE{value: val, isSet: true}
}

func (v NullableApiCWE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCWE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


