/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryOpenSSLSecAdv type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryOpenSSLSecAdv{}

// AdvisoryOpenSSLSecAdv struct for AdvisoryOpenSSLSecAdv
type AdvisoryOpenSSLSecAdv struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	DateUpdated *string `json:"date_updated,omitempty"`
	Description *string `json:"description,omitempty"`
	Filename *string `json:"filename,omitempty"`
	References []string `json:"references,omitempty"`
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
	Vulnerabilities []AdvisoryOpenSSLVulnerability `json:"vulnerabilities,omitempty"`
}

// NewAdvisoryOpenSSLSecAdv instantiates a new AdvisoryOpenSSLSecAdv object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryOpenSSLSecAdv() *AdvisoryOpenSSLSecAdv {
	this := AdvisoryOpenSSLSecAdv{}
	return &this
}

// NewAdvisoryOpenSSLSecAdvWithDefaults instantiates a new AdvisoryOpenSSLSecAdv object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryOpenSSLSecAdvWithDefaults() *AdvisoryOpenSSLSecAdv {
	this := AdvisoryOpenSSLSecAdv{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryOpenSSLSecAdv) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryOpenSSLSecAdv) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDateUpdated returns the DateUpdated field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetDateUpdated() string {
	if o == nil || IsNil(o.DateUpdated) {
		var ret string
		return ret
	}
	return *o.DateUpdated
}

// GetDateUpdatedOk returns a tuple with the DateUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetDateUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateUpdated) {
		return nil, false
	}
	return o.DateUpdated, true
}

// HasDateUpdated returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasDateUpdated() bool {
	if o != nil && !IsNil(o.DateUpdated) {
		return true
	}

	return false
}

// SetDateUpdated gets a reference to the given string and assigns it to the DateUpdated field.
func (o *AdvisoryOpenSSLSecAdv) SetDateUpdated(v string) {
	o.DateUpdated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryOpenSSLSecAdv) SetDescription(v string) {
	o.Description = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *AdvisoryOpenSSLSecAdv) SetFilename(v string) {
	o.Filename = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryOpenSSLSecAdv) SetReferences(v []string) {
	o.References = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryOpenSSLSecAdv) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryOpenSSLSecAdv) SetUrl(v string) {
	o.Url = &v
}

// GetVulnerabilities returns the Vulnerabilities field value if set, zero value otherwise.
func (o *AdvisoryOpenSSLSecAdv) GetVulnerabilities() []AdvisoryOpenSSLVulnerability {
	if o == nil || IsNil(o.Vulnerabilities) {
		var ret []AdvisoryOpenSSLVulnerability
		return ret
	}
	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryOpenSSLSecAdv) GetVulnerabilitiesOk() ([]AdvisoryOpenSSLVulnerability, bool) {
	if o == nil || IsNil(o.Vulnerabilities) {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// HasVulnerabilities returns a boolean if a field has been set.
func (o *AdvisoryOpenSSLSecAdv) HasVulnerabilities() bool {
	if o != nil && !IsNil(o.Vulnerabilities) {
		return true
	}

	return false
}

// SetVulnerabilities gets a reference to the given []AdvisoryOpenSSLVulnerability and assigns it to the Vulnerabilities field.
func (o *AdvisoryOpenSSLSecAdv) SetVulnerabilities(v []AdvisoryOpenSSLVulnerability) {
	o.Vulnerabilities = v
}

func (o AdvisoryOpenSSLSecAdv) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryOpenSSLSecAdv) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.DateUpdated) {
		toSerialize["date_updated"] = o.DateUpdated
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Vulnerabilities) {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return toSerialize, nil
}

type NullableAdvisoryOpenSSLSecAdv struct {
	value *AdvisoryOpenSSLSecAdv
	isSet bool
}

func (v NullableAdvisoryOpenSSLSecAdv) Get() *AdvisoryOpenSSLSecAdv {
	return v.value
}

func (v *NullableAdvisoryOpenSSLSecAdv) Set(val *AdvisoryOpenSSLSecAdv) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryOpenSSLSecAdv) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryOpenSSLSecAdv) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryOpenSSLSecAdv(val *AdvisoryOpenSSLSecAdv) *NullableAdvisoryOpenSSLSecAdv {
	return &NullableAdvisoryOpenSSLSecAdv{value: val, isSet: true}
}

func (v NullableAdvisoryOpenSSLSecAdv) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryOpenSSLSecAdv) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


