/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryZuluVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryZuluVersion{}

// AdvisoryZuluVersion struct for AdvisoryZuluVersion
type AdvisoryZuluVersion struct {
	Jdk *string `json:"jdk,omitempty"`
	Type *string `json:"type,omitempty"`
	Zulu *string `json:"zulu,omitempty"`
}

// NewAdvisoryZuluVersion instantiates a new AdvisoryZuluVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryZuluVersion() *AdvisoryZuluVersion {
	this := AdvisoryZuluVersion{}
	return &this
}

// NewAdvisoryZuluVersionWithDefaults instantiates a new AdvisoryZuluVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryZuluVersionWithDefaults() *AdvisoryZuluVersion {
	this := AdvisoryZuluVersion{}
	return &this
}

// GetJdk returns the Jdk field value if set, zero value otherwise.
func (o *AdvisoryZuluVersion) GetJdk() string {
	if o == nil || IsNil(o.Jdk) {
		var ret string
		return ret
	}
	return *o.Jdk
}

// GetJdkOk returns a tuple with the Jdk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZuluVersion) GetJdkOk() (*string, bool) {
	if o == nil || IsNil(o.Jdk) {
		return nil, false
	}
	return o.Jdk, true
}

// HasJdk returns a boolean if a field has been set.
func (o *AdvisoryZuluVersion) HasJdk() bool {
	if o != nil && !IsNil(o.Jdk) {
		return true
	}

	return false
}

// SetJdk gets a reference to the given string and assigns it to the Jdk field.
func (o *AdvisoryZuluVersion) SetJdk(v string) {
	o.Jdk = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdvisoryZuluVersion) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZuluVersion) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdvisoryZuluVersion) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdvisoryZuluVersion) SetType(v string) {
	o.Type = &v
}

// GetZulu returns the Zulu field value if set, zero value otherwise.
func (o *AdvisoryZuluVersion) GetZulu() string {
	if o == nil || IsNil(o.Zulu) {
		var ret string
		return ret
	}
	return *o.Zulu
}

// GetZuluOk returns a tuple with the Zulu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryZuluVersion) GetZuluOk() (*string, bool) {
	if o == nil || IsNil(o.Zulu) {
		return nil, false
	}
	return o.Zulu, true
}

// HasZulu returns a boolean if a field has been set.
func (o *AdvisoryZuluVersion) HasZulu() bool {
	if o != nil && !IsNil(o.Zulu) {
		return true
	}

	return false
}

// SetZulu gets a reference to the given string and assigns it to the Zulu field.
func (o *AdvisoryZuluVersion) SetZulu(v string) {
	o.Zulu = &v
}

func (o AdvisoryZuluVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryZuluVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jdk) {
		toSerialize["jdk"] = o.Jdk
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Zulu) {
		toSerialize["zulu"] = o.Zulu
	}
	return toSerialize, nil
}

type NullableAdvisoryZuluVersion struct {
	value *AdvisoryZuluVersion
	isSet bool
}

func (v NullableAdvisoryZuluVersion) Get() *AdvisoryZuluVersion {
	return v.value
}

func (v *NullableAdvisoryZuluVersion) Set(val *AdvisoryZuluVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryZuluVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryZuluVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryZuluVersion(val *AdvisoryZuluVersion) *NullableAdvisoryZuluVersion {
	return &NullableAdvisoryZuluVersion{value: val, isSet: true}
}

func (v NullableAdvisoryZuluVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryZuluVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


