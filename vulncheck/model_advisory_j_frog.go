/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryJFrog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryJFrog{}

// AdvisoryJFrog struct for AdvisoryJFrog
type AdvisoryJFrog struct {
	Cpes []AdvisoryNVD20CVECPEMatch `json:"cpes,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Product *string `json:"product,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Url *string `json:"url,omitempty"`
	Versions []string `json:"versions,omitempty"`
}

// NewAdvisoryJFrog instantiates a new AdvisoryJFrog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryJFrog() *AdvisoryJFrog {
	this := AdvisoryJFrog{}
	return &this
}

// NewAdvisoryJFrogWithDefaults instantiates a new AdvisoryJFrog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryJFrogWithDefaults() *AdvisoryJFrog {
	this := AdvisoryJFrog{}
	return &this
}

// GetCpes returns the Cpes field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetCpes() []AdvisoryNVD20CVECPEMatch {
	if o == nil || IsNil(o.Cpes) {
		var ret []AdvisoryNVD20CVECPEMatch
		return ret
	}
	return o.Cpes
}

// GetCpesOk returns a tuple with the Cpes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetCpesOk() ([]AdvisoryNVD20CVECPEMatch, bool) {
	if o == nil || IsNil(o.Cpes) {
		return nil, false
	}
	return o.Cpes, true
}

// HasCpes returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasCpes() bool {
	if o != nil && !IsNil(o.Cpes) {
		return true
	}

	return false
}

// SetCpes gets a reference to the given []AdvisoryNVD20CVECPEMatch and assigns it to the Cpes field.
func (o *AdvisoryJFrog) SetCpes(v []AdvisoryNVD20CVECPEMatch) {
	o.Cpes = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryJFrog) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryJFrog) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AdvisoryJFrog) SetProduct(v string) {
	o.Product = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AdvisoryJFrog) SetSeverity(v string) {
	o.Severity = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AdvisoryJFrog) SetSummary(v string) {
	o.Summary = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryJFrog) SetUrl(v string) {
	o.Url = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *AdvisoryJFrog) GetVersions() []string {
	if o == nil || IsNil(o.Versions) {
		var ret []string
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryJFrog) GetVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *AdvisoryJFrog) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []string and assigns it to the Versions field.
func (o *AdvisoryJFrog) SetVersions(v []string) {
	o.Versions = v
}

func (o AdvisoryJFrog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryJFrog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpes) {
		toSerialize["cpes"] = o.Cpes
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableAdvisoryJFrog struct {
	value *AdvisoryJFrog
	isSet bool
}

func (v NullableAdvisoryJFrog) Get() *AdvisoryJFrog {
	return v.value
}

func (v *NullableAdvisoryJFrog) Set(val *AdvisoryJFrog) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryJFrog) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryJFrog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryJFrog(val *AdvisoryJFrog) *NullableAdvisoryJFrog {
	return &NullableAdvisoryJFrog{value: val, isSet: true}
}

func (v NullableAdvisoryJFrog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryJFrog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


