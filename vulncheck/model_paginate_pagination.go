/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the PaginatePagination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatePagination{}

// PaginatePagination struct for PaginatePagination
type PaginatePagination struct {
	// Cursor for the current page
	Cursor *string `json:"cursor,omitempty"`
	// First and last Item
	FirstItem *int32 `json:"first_item,omitempty"`
	// The requested index
	Index *string `json:"index,omitempty"`
	LastItem *int32 `json:"last_item,omitempty"`
	// Per-Page limit
	Limit *int32 `json:"limit,omitempty"`
	Matches []PaginateMatch `json:"matches,omitempty"`
	MaxPages *int32 `json:"max_pages,omitempty"`
	// Cursor for the next page
	NextCursor *string `json:"next_cursor,omitempty"`
	OpensearchQuery map[string]interface{} `json:"opensearch_query,omitempty"`
	Order *string `json:"order,omitempty"`
	// The current Page number
	Page *int32 `json:"page,omitempty"`
	Pages []string `json:"pages,omitempty"`
	Parameters []PaginateParam `json:"parameters,omitempty"`
	ShowPages *bool `json:"show_pages,omitempty"`
	ShowQuery *bool `json:"show_query,omitempty"`
	Sort *string `json:"sort,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	// The total number of items
	TotalDocuments *int32 `json:"total_documents,omitempty"`
	// The total number of pages
	TotalPages *int32 `json:"total_pages,omitempty"`
	Warnings []string `json:"warnings,omitempty"`
}

// NewPaginatePagination instantiates a new PaginatePagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatePagination() *PaginatePagination {
	this := PaginatePagination{}
	return &this
}

// NewPaginatePaginationWithDefaults instantiates a new PaginatePagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatePaginationWithDefaults() *PaginatePagination {
	this := PaginatePagination{}
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *PaginatePagination) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *PaginatePagination) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *PaginatePagination) SetCursor(v string) {
	o.Cursor = &v
}

// GetFirstItem returns the FirstItem field value if set, zero value otherwise.
func (o *PaginatePagination) GetFirstItem() int32 {
	if o == nil || IsNil(o.FirstItem) {
		var ret int32
		return ret
	}
	return *o.FirstItem
}

// GetFirstItemOk returns a tuple with the FirstItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetFirstItemOk() (*int32, bool) {
	if o == nil || IsNil(o.FirstItem) {
		return nil, false
	}
	return o.FirstItem, true
}

// HasFirstItem returns a boolean if a field has been set.
func (o *PaginatePagination) HasFirstItem() bool {
	if o != nil && !IsNil(o.FirstItem) {
		return true
	}

	return false
}

// SetFirstItem gets a reference to the given int32 and assigns it to the FirstItem field.
func (o *PaginatePagination) SetFirstItem(v int32) {
	o.FirstItem = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *PaginatePagination) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *PaginatePagination) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *PaginatePagination) SetIndex(v string) {
	o.Index = &v
}

// GetLastItem returns the LastItem field value if set, zero value otherwise.
func (o *PaginatePagination) GetLastItem() int32 {
	if o == nil || IsNil(o.LastItem) {
		var ret int32
		return ret
	}
	return *o.LastItem
}

// GetLastItemOk returns a tuple with the LastItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetLastItemOk() (*int32, bool) {
	if o == nil || IsNil(o.LastItem) {
		return nil, false
	}
	return o.LastItem, true
}

// HasLastItem returns a boolean if a field has been set.
func (o *PaginatePagination) HasLastItem() bool {
	if o != nil && !IsNil(o.LastItem) {
		return true
	}

	return false
}

// SetLastItem gets a reference to the given int32 and assigns it to the LastItem field.
func (o *PaginatePagination) SetLastItem(v int32) {
	o.LastItem = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PaginatePagination) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PaginatePagination) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PaginatePagination) SetLimit(v int32) {
	o.Limit = &v
}

// GetMatches returns the Matches field value if set, zero value otherwise.
func (o *PaginatePagination) GetMatches() []PaginateMatch {
	if o == nil || IsNil(o.Matches) {
		var ret []PaginateMatch
		return ret
	}
	return o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetMatchesOk() ([]PaginateMatch, bool) {
	if o == nil || IsNil(o.Matches) {
		return nil, false
	}
	return o.Matches, true
}

// HasMatches returns a boolean if a field has been set.
func (o *PaginatePagination) HasMatches() bool {
	if o != nil && !IsNil(o.Matches) {
		return true
	}

	return false
}

// SetMatches gets a reference to the given []PaginateMatch and assigns it to the Matches field.
func (o *PaginatePagination) SetMatches(v []PaginateMatch) {
	o.Matches = v
}

// GetMaxPages returns the MaxPages field value if set, zero value otherwise.
func (o *PaginatePagination) GetMaxPages() int32 {
	if o == nil || IsNil(o.MaxPages) {
		var ret int32
		return ret
	}
	return *o.MaxPages
}

// GetMaxPagesOk returns a tuple with the MaxPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetMaxPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPages) {
		return nil, false
	}
	return o.MaxPages, true
}

// HasMaxPages returns a boolean if a field has been set.
func (o *PaginatePagination) HasMaxPages() bool {
	if o != nil && !IsNil(o.MaxPages) {
		return true
	}

	return false
}

// SetMaxPages gets a reference to the given int32 and assigns it to the MaxPages field.
func (o *PaginatePagination) SetMaxPages(v int32) {
	o.MaxPages = &v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *PaginatePagination) GetNextCursor() string {
	if o == nil || IsNil(o.NextCursor) {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetNextCursorOk() (*string, bool) {
	if o == nil || IsNil(o.NextCursor) {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *PaginatePagination) HasNextCursor() bool {
	if o != nil && !IsNil(o.NextCursor) {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *PaginatePagination) SetNextCursor(v string) {
	o.NextCursor = &v
}

// GetOpensearchQuery returns the OpensearchQuery field value if set, zero value otherwise.
func (o *PaginatePagination) GetOpensearchQuery() map[string]interface{} {
	if o == nil || IsNil(o.OpensearchQuery) {
		var ret map[string]interface{}
		return ret
	}
	return o.OpensearchQuery
}

// GetOpensearchQueryOk returns a tuple with the OpensearchQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetOpensearchQueryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OpensearchQuery) {
		return map[string]interface{}{}, false
	}
	return o.OpensearchQuery, true
}

// HasOpensearchQuery returns a boolean if a field has been set.
func (o *PaginatePagination) HasOpensearchQuery() bool {
	if o != nil && !IsNil(o.OpensearchQuery) {
		return true
	}

	return false
}

// SetOpensearchQuery gets a reference to the given map[string]interface{} and assigns it to the OpensearchQuery field.
func (o *PaginatePagination) SetOpensearchQuery(v map[string]interface{}) {
	o.OpensearchQuery = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PaginatePagination) GetOrder() string {
	if o == nil || IsNil(o.Order) {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetOrderOk() (*string, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *PaginatePagination) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *PaginatePagination) SetOrder(v string) {
	o.Order = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *PaginatePagination) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *PaginatePagination) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *PaginatePagination) SetPage(v int32) {
	o.Page = &v
}

// GetPages returns the Pages field value if set, zero value otherwise.
func (o *PaginatePagination) GetPages() []string {
	if o == nil || IsNil(o.Pages) {
		var ret []string
		return ret
	}
	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetPagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Pages) {
		return nil, false
	}
	return o.Pages, true
}

// HasPages returns a boolean if a field has been set.
func (o *PaginatePagination) HasPages() bool {
	if o != nil && !IsNil(o.Pages) {
		return true
	}

	return false
}

// SetPages gets a reference to the given []string and assigns it to the Pages field.
func (o *PaginatePagination) SetPages(v []string) {
	o.Pages = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *PaginatePagination) GetParameters() []PaginateParam {
	if o == nil || IsNil(o.Parameters) {
		var ret []PaginateParam
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetParametersOk() ([]PaginateParam, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *PaginatePagination) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []PaginateParam and assigns it to the Parameters field.
func (o *PaginatePagination) SetParameters(v []PaginateParam) {
	o.Parameters = v
}

// GetShowPages returns the ShowPages field value if set, zero value otherwise.
func (o *PaginatePagination) GetShowPages() bool {
	if o == nil || IsNil(o.ShowPages) {
		var ret bool
		return ret
	}
	return *o.ShowPages
}

// GetShowPagesOk returns a tuple with the ShowPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetShowPagesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowPages) {
		return nil, false
	}
	return o.ShowPages, true
}

// HasShowPages returns a boolean if a field has been set.
func (o *PaginatePagination) HasShowPages() bool {
	if o != nil && !IsNil(o.ShowPages) {
		return true
	}

	return false
}

// SetShowPages gets a reference to the given bool and assigns it to the ShowPages field.
func (o *PaginatePagination) SetShowPages(v bool) {
	o.ShowPages = &v
}

// GetShowQuery returns the ShowQuery field value if set, zero value otherwise.
func (o *PaginatePagination) GetShowQuery() bool {
	if o == nil || IsNil(o.ShowQuery) {
		var ret bool
		return ret
	}
	return *o.ShowQuery
}

// GetShowQueryOk returns a tuple with the ShowQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetShowQueryOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowQuery) {
		return nil, false
	}
	return o.ShowQuery, true
}

// HasShowQuery returns a boolean if a field has been set.
func (o *PaginatePagination) HasShowQuery() bool {
	if o != nil && !IsNil(o.ShowQuery) {
		return true
	}

	return false
}

// SetShowQuery gets a reference to the given bool and assigns it to the ShowQuery field.
func (o *PaginatePagination) SetShowQuery(v bool) {
	o.ShowQuery = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *PaginatePagination) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *PaginatePagination) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *PaginatePagination) SetSort(v string) {
	o.Sort = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *PaginatePagination) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *PaginatePagination) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *PaginatePagination) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetTotalDocuments returns the TotalDocuments field value if set, zero value otherwise.
func (o *PaginatePagination) GetTotalDocuments() int32 {
	if o == nil || IsNil(o.TotalDocuments) {
		var ret int32
		return ret
	}
	return *o.TotalDocuments
}

// GetTotalDocumentsOk returns a tuple with the TotalDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetTotalDocumentsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDocuments) {
		return nil, false
	}
	return o.TotalDocuments, true
}

// HasTotalDocuments returns a boolean if a field has been set.
func (o *PaginatePagination) HasTotalDocuments() bool {
	if o != nil && !IsNil(o.TotalDocuments) {
		return true
	}

	return false
}

// SetTotalDocuments gets a reference to the given int32 and assigns it to the TotalDocuments field.
func (o *PaginatePagination) SetTotalDocuments(v int32) {
	o.TotalDocuments = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *PaginatePagination) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *PaginatePagination) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *PaginatePagination) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PaginatePagination) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatePagination) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PaginatePagination) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *PaginatePagination) SetWarnings(v []string) {
	o.Warnings = v
}

func (o PaginatePagination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatePagination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	if !IsNil(o.FirstItem) {
		toSerialize["first_item"] = o.FirstItem
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.LastItem) {
		toSerialize["last_item"] = o.LastItem
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Matches) {
		toSerialize["matches"] = o.Matches
	}
	if !IsNil(o.MaxPages) {
		toSerialize["max_pages"] = o.MaxPages
	}
	if !IsNil(o.NextCursor) {
		toSerialize["next_cursor"] = o.NextCursor
	}
	if !IsNil(o.OpensearchQuery) {
		toSerialize["opensearch_query"] = o.OpensearchQuery
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Pages) {
		toSerialize["pages"] = o.Pages
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.ShowPages) {
		toSerialize["show_pages"] = o.ShowPages
	}
	if !IsNil(o.ShowQuery) {
		toSerialize["show_query"] = o.ShowQuery
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TotalDocuments) {
		toSerialize["total_documents"] = o.TotalDocuments
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePaginatePagination struct {
	value *PaginatePagination
	isSet bool
}

func (v NullablePaginatePagination) Get() *PaginatePagination {
	return v.value
}

func (v *NullablePaginatePagination) Set(val *PaginatePagination) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatePagination) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatePagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatePagination(val *PaginatePagination) *NullablePaginatePagination {
	return &NullablePaginatePagination{value: val, isSet: true}
}

func (v NullablePaginatePagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatePagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


