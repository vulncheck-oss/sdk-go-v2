/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiReferencesExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiReferencesExtended{}

// ApiReferencesExtended struct for ApiReferencesExtended
type ApiReferencesExtended struct {
	// ExploitData     []NormalizedExploit       `json:\"exploit_data,omitempty\"`   ThreatActorData []ThreatActorExtended     `json:\"threat_actor_data,omitempty\"`   RansomwareData  []RansomwareReferenceData `json:\"ransomware_data,omitempty\"`   AdvisoryData    []AdvisoryExtended        `json:\"advisory_data,omitempty\"`   IdentifierData  []IdentifierExtended      `json:\"identifier_data,omitempty\"`
	ReferenceData []ApiReferenceDataExtended `json:"reference_data,omitempty"`
}

// NewApiReferencesExtended instantiates a new ApiReferencesExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiReferencesExtended() *ApiReferencesExtended {
	this := ApiReferencesExtended{}
	return &this
}

// NewApiReferencesExtendedWithDefaults instantiates a new ApiReferencesExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiReferencesExtendedWithDefaults() *ApiReferencesExtended {
	this := ApiReferencesExtended{}
	return &this
}

// GetReferenceData returns the ReferenceData field value if set, zero value otherwise.
func (o *ApiReferencesExtended) GetReferenceData() []ApiReferenceDataExtended {
	if o == nil || IsNil(o.ReferenceData) {
		var ret []ApiReferenceDataExtended
		return ret
	}
	return o.ReferenceData
}

// GetReferenceDataOk returns a tuple with the ReferenceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReferencesExtended) GetReferenceDataOk() ([]ApiReferenceDataExtended, bool) {
	if o == nil || IsNil(o.ReferenceData) {
		return nil, false
	}
	return o.ReferenceData, true
}

// HasReferenceData returns a boolean if a field has been set.
func (o *ApiReferencesExtended) HasReferenceData() bool {
	if o != nil && !IsNil(o.ReferenceData) {
		return true
	}

	return false
}

// SetReferenceData gets a reference to the given []ApiReferenceDataExtended and assigns it to the ReferenceData field.
func (o *ApiReferencesExtended) SetReferenceData(v []ApiReferenceDataExtended) {
	o.ReferenceData = v
}

func (o ApiReferencesExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiReferencesExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReferenceData) {
		toSerialize["reference_data"] = o.ReferenceData
	}
	return toSerialize, nil
}

type NullableApiReferencesExtended struct {
	value *ApiReferencesExtended
	isSet bool
}

func (v NullableApiReferencesExtended) Get() *ApiReferencesExtended {
	return v.value
}

func (v *NullableApiReferencesExtended) Set(val *ApiReferencesExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableApiReferencesExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableApiReferencesExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiReferencesExtended(val *ApiReferencesExtended) *NullableApiReferencesExtended {
	return &NullableApiReferencesExtended{value: val, isSet: true}
}

func (v NullableApiReferencesExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiReferencesExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


