/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryRockyErrata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryRockyErrata{}

// AdvisoryRockyErrata struct for AdvisoryRockyErrata
type AdvisoryRockyErrata struct {
	Advisory *AdvisoryRockyAdvisory `json:"advisory,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Packages []AdvisoryRockyPackage `json:"packages,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryRockyErrata instantiates a new AdvisoryRockyErrata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryRockyErrata() *AdvisoryRockyErrata {
	this := AdvisoryRockyErrata{}
	return &this
}

// NewAdvisoryRockyErrataWithDefaults instantiates a new AdvisoryRockyErrata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryRockyErrataWithDefaults() *AdvisoryRockyErrata {
	this := AdvisoryRockyErrata{}
	return &this
}

// GetAdvisory returns the Advisory field value if set, zero value otherwise.
func (o *AdvisoryRockyErrata) GetAdvisory() AdvisoryRockyAdvisory {
	if o == nil || IsNil(o.Advisory) {
		var ret AdvisoryRockyAdvisory
		return ret
	}
	return *o.Advisory
}

// GetAdvisoryOk returns a tuple with the Advisory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRockyErrata) GetAdvisoryOk() (*AdvisoryRockyAdvisory, bool) {
	if o == nil || IsNil(o.Advisory) {
		return nil, false
	}
	return o.Advisory, true
}

// HasAdvisory returns a boolean if a field has been set.
func (o *AdvisoryRockyErrata) HasAdvisory() bool {
	if o != nil && !IsNil(o.Advisory) {
		return true
	}

	return false
}

// SetAdvisory gets a reference to the given AdvisoryRockyAdvisory and assigns it to the Advisory field.
func (o *AdvisoryRockyErrata) SetAdvisory(v AdvisoryRockyAdvisory) {
	o.Advisory = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryRockyErrata) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRockyErrata) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryRockyErrata) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryRockyErrata) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryRockyErrata) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRockyErrata) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryRockyErrata) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryRockyErrata) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *AdvisoryRockyErrata) GetPackages() []AdvisoryRockyPackage {
	if o == nil || IsNil(o.Packages) {
		var ret []AdvisoryRockyPackage
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRockyErrata) GetPackagesOk() ([]AdvisoryRockyPackage, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *AdvisoryRockyErrata) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []AdvisoryRockyPackage and assigns it to the Packages field.
func (o *AdvisoryRockyErrata) SetPackages(v []AdvisoryRockyPackage) {
	o.Packages = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryRockyErrata) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryRockyErrata) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryRockyErrata) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryRockyErrata) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryRockyErrata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryRockyErrata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Advisory) {
		toSerialize["advisory"] = o.Advisory
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryRockyErrata struct {
	value *AdvisoryRockyErrata
	isSet bool
}

func (v NullableAdvisoryRockyErrata) Get() *AdvisoryRockyErrata {
	return v.value
}

func (v *NullableAdvisoryRockyErrata) Set(val *AdvisoryRockyErrata) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryRockyErrata) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryRockyErrata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryRockyErrata(val *AdvisoryRockyErrata) *NullableAdvisoryRockyErrata {
	return &NullableAdvisoryRockyErrata{value: val, isSet: true}
}

func (v NullableAdvisoryRockyErrata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryRockyErrata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


