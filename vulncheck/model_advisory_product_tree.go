/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryProductTree type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryProductTree{}

// AdvisoryProductTree struct for AdvisoryProductTree
type AdvisoryProductTree struct {
	Relationships []AdvisoryRelationship `json:"relationships,omitempty"`
}

// NewAdvisoryProductTree instantiates a new AdvisoryProductTree object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryProductTree() *AdvisoryProductTree {
	this := AdvisoryProductTree{}
	return &this
}

// NewAdvisoryProductTreeWithDefaults instantiates a new AdvisoryProductTree object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryProductTreeWithDefaults() *AdvisoryProductTree {
	this := AdvisoryProductTree{}
	return &this
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *AdvisoryProductTree) GetRelationships() []AdvisoryRelationship {
	if o == nil || IsNil(o.Relationships) {
		var ret []AdvisoryRelationship
		return ret
	}
	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryProductTree) GetRelationshipsOk() ([]AdvisoryRelationship, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *AdvisoryProductTree) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []AdvisoryRelationship and assigns it to the Relationships field.
func (o *AdvisoryProductTree) SetRelationships(v []AdvisoryRelationship) {
	o.Relationships = v
}

func (o AdvisoryProductTree) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryProductTree) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	return toSerialize, nil
}

type NullableAdvisoryProductTree struct {
	value *AdvisoryProductTree
	isSet bool
}

func (v NullableAdvisoryProductTree) Get() *AdvisoryProductTree {
	return v.value
}

func (v *NullableAdvisoryProductTree) Set(val *AdvisoryProductTree) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryProductTree) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryProductTree) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryProductTree(val *AdvisoryProductTree) *NullableAdvisoryProductTree {
	return &NullableAdvisoryProductTree{value: val, isSet: true}
}

func (v NullableAdvisoryProductTree) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryProductTree) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


