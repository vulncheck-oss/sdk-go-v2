/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiVulnerabilityAlias type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiVulnerabilityAlias{}

// ApiVulnerabilityAlias struct for ApiVulnerabilityAlias
type ApiVulnerabilityAlias struct {
	Alias *string `json:"alias,omitempty"`
	Cve *string `json:"cve,omitempty"`
	ReferenceUrl *string `json:"reference_url,omitempty"`
}

// NewApiVulnerabilityAlias instantiates a new ApiVulnerabilityAlias object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiVulnerabilityAlias() *ApiVulnerabilityAlias {
	this := ApiVulnerabilityAlias{}
	return &this
}

// NewApiVulnerabilityAliasWithDefaults instantiates a new ApiVulnerabilityAlias object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiVulnerabilityAliasWithDefaults() *ApiVulnerabilityAlias {
	this := ApiVulnerabilityAlias{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ApiVulnerabilityAlias) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiVulnerabilityAlias) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ApiVulnerabilityAlias) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ApiVulnerabilityAlias) SetAlias(v string) {
	o.Alias = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiVulnerabilityAlias) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiVulnerabilityAlias) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiVulnerabilityAlias) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *ApiVulnerabilityAlias) SetCve(v string) {
	o.Cve = &v
}

// GetReferenceUrl returns the ReferenceUrl field value if set, zero value otherwise.
func (o *ApiVulnerabilityAlias) GetReferenceUrl() string {
	if o == nil || IsNil(o.ReferenceUrl) {
		var ret string
		return ret
	}
	return *o.ReferenceUrl
}

// GetReferenceUrlOk returns a tuple with the ReferenceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiVulnerabilityAlias) GetReferenceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceUrl) {
		return nil, false
	}
	return o.ReferenceUrl, true
}

// HasReferenceUrl returns a boolean if a field has been set.
func (o *ApiVulnerabilityAlias) HasReferenceUrl() bool {
	if o != nil && !IsNil(o.ReferenceUrl) {
		return true
	}

	return false
}

// SetReferenceUrl gets a reference to the given string and assigns it to the ReferenceUrl field.
func (o *ApiVulnerabilityAlias) SetReferenceUrl(v string) {
	o.ReferenceUrl = &v
}

func (o ApiVulnerabilityAlias) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiVulnerabilityAlias) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.ReferenceUrl) {
		toSerialize["reference_url"] = o.ReferenceUrl
	}
	return toSerialize, nil
}

type NullableApiVulnerabilityAlias struct {
	value *ApiVulnerabilityAlias
	isSet bool
}

func (v NullableApiVulnerabilityAlias) Get() *ApiVulnerabilityAlias {
	return v.value
}

func (v *NullableApiVulnerabilityAlias) Set(val *ApiVulnerabilityAlias) {
	v.value = val
	v.isSet = true
}

func (v NullableApiVulnerabilityAlias) IsSet() bool {
	return v.isSet
}

func (v *NullableApiVulnerabilityAlias) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiVulnerabilityAlias(val *ApiVulnerabilityAlias) *NullableApiVulnerabilityAlias {
	return &NullableApiVulnerabilityAlias{value: val, isSet: true}
}

func (v NullableApiVulnerabilityAlias) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiVulnerabilityAlias) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


