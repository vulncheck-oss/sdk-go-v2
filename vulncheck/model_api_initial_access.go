/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the ApiInitialAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiInitialAccess{}

// ApiInitialAccess struct for ApiInitialAccess
type ApiInitialAccess struct {
	// Artifacts holds the set of available artifacts for this vulnerability, such as exploit, shodan queries, PCAP traces, and others.
	Artifacts []ApiInitialAccessArtifact `json:"artifacts,omitempty"`
	// CVE identifier for the given initial access record.
	Cve *string `json:"cve,omitempty"`
	// InKEV is true if this artifact is in CISA's Known Exploited Vulnerabilities (KEV) data set; otherwise, false.
	InKEV *bool `json:"inKEV,omitempty"`
	// InVCKEV is true if this artifact is in VulnCheck's Known Exploited Vulnerabilities (VCKEV) data set; otherwise, false.
	InVCKEV *bool `json:"inVCKEV,omitempty"`
	// VulnerableCPEs is the list of vulnerable CPE strings associated with this CVE and artifact(s).
	VulnerableCpes []string `json:"vulnerable_cpes,omitempty"`
}

// NewApiInitialAccess instantiates a new ApiInitialAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiInitialAccess() *ApiInitialAccess {
	this := ApiInitialAccess{}
	return &this
}

// NewApiInitialAccessWithDefaults instantiates a new ApiInitialAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiInitialAccessWithDefaults() *ApiInitialAccess {
	this := ApiInitialAccess{}
	return &this
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *ApiInitialAccess) GetArtifacts() []ApiInitialAccessArtifact {
	if o == nil || IsNil(o.Artifacts) {
		var ret []ApiInitialAccessArtifact
		return ret
	}
	return o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccess) GetArtifactsOk() ([]ApiInitialAccessArtifact, bool) {
	if o == nil || IsNil(o.Artifacts) {
		return nil, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *ApiInitialAccess) HasArtifacts() bool {
	if o != nil && !IsNil(o.Artifacts) {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given []ApiInitialAccessArtifact and assigns it to the Artifacts field.
func (o *ApiInitialAccess) SetArtifacts(v []ApiInitialAccessArtifact) {
	o.Artifacts = v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *ApiInitialAccess) GetCve() string {
	if o == nil || IsNil(o.Cve) {
		var ret string
		return ret
	}
	return *o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccess) GetCveOk() (*string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *ApiInitialAccess) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given string and assigns it to the Cve field.
func (o *ApiInitialAccess) SetCve(v string) {
	o.Cve = &v
}

// GetInKEV returns the InKEV field value if set, zero value otherwise.
func (o *ApiInitialAccess) GetInKEV() bool {
	if o == nil || IsNil(o.InKEV) {
		var ret bool
		return ret
	}
	return *o.InKEV
}

// GetInKEVOk returns a tuple with the InKEV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccess) GetInKEVOk() (*bool, bool) {
	if o == nil || IsNil(o.InKEV) {
		return nil, false
	}
	return o.InKEV, true
}

// HasInKEV returns a boolean if a field has been set.
func (o *ApiInitialAccess) HasInKEV() bool {
	if o != nil && !IsNil(o.InKEV) {
		return true
	}

	return false
}

// SetInKEV gets a reference to the given bool and assigns it to the InKEV field.
func (o *ApiInitialAccess) SetInKEV(v bool) {
	o.InKEV = &v
}

// GetInVCKEV returns the InVCKEV field value if set, zero value otherwise.
func (o *ApiInitialAccess) GetInVCKEV() bool {
	if o == nil || IsNil(o.InVCKEV) {
		var ret bool
		return ret
	}
	return *o.InVCKEV
}

// GetInVCKEVOk returns a tuple with the InVCKEV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccess) GetInVCKEVOk() (*bool, bool) {
	if o == nil || IsNil(o.InVCKEV) {
		return nil, false
	}
	return o.InVCKEV, true
}

// HasInVCKEV returns a boolean if a field has been set.
func (o *ApiInitialAccess) HasInVCKEV() bool {
	if o != nil && !IsNil(o.InVCKEV) {
		return true
	}

	return false
}

// SetInVCKEV gets a reference to the given bool and assigns it to the InVCKEV field.
func (o *ApiInitialAccess) SetInVCKEV(v bool) {
	o.InVCKEV = &v
}

// GetVulnerableCpes returns the VulnerableCpes field value if set, zero value otherwise.
func (o *ApiInitialAccess) GetVulnerableCpes() []string {
	if o == nil || IsNil(o.VulnerableCpes) {
		var ret []string
		return ret
	}
	return o.VulnerableCpes
}

// GetVulnerableCpesOk returns a tuple with the VulnerableCpes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInitialAccess) GetVulnerableCpesOk() ([]string, bool) {
	if o == nil || IsNil(o.VulnerableCpes) {
		return nil, false
	}
	return o.VulnerableCpes, true
}

// HasVulnerableCpes returns a boolean if a field has been set.
func (o *ApiInitialAccess) HasVulnerableCpes() bool {
	if o != nil && !IsNil(o.VulnerableCpes) {
		return true
	}

	return false
}

// SetVulnerableCpes gets a reference to the given []string and assigns it to the VulnerableCpes field.
func (o *ApiInitialAccess) SetVulnerableCpes(v []string) {
	o.VulnerableCpes = v
}

func (o ApiInitialAccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiInitialAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Artifacts) {
		toSerialize["artifacts"] = o.Artifacts
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.InKEV) {
		toSerialize["inKEV"] = o.InKEV
	}
	if !IsNil(o.InVCKEV) {
		toSerialize["inVCKEV"] = o.InVCKEV
	}
	if !IsNil(o.VulnerableCpes) {
		toSerialize["vulnerable_cpes"] = o.VulnerableCpes
	}
	return toSerialize, nil
}

type NullableApiInitialAccess struct {
	value *ApiInitialAccess
	isSet bool
}

func (v NullableApiInitialAccess) Get() *ApiInitialAccess {
	return v.value
}

func (v *NullableApiInitialAccess) Set(val *ApiInitialAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInitialAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInitialAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInitialAccess(val *ApiInitialAccess) *NullableApiInitialAccess {
	return &NullableApiInitialAccess{value: val, isSet: true}
}

func (v NullableApiInitialAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInitialAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


