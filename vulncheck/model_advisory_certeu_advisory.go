/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCERTEUAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCERTEUAdvisory{}

// AdvisoryCERTEUAdvisory struct for AdvisoryCERTEUAdvisory
type AdvisoryCERTEUAdvisory struct {
	AdvisoryId *string `json:"advisoryId,omitempty"`
	AffectedProducts *string `json:"affectedProducts,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	History []string `json:"history,omitempty"`
	Link *string `json:"link,omitempty"`
	Recommendations *string `json:"recommendations,omitempty"`
	References []string `json:"references,omitempty"`
	Summary *string `json:"summary,omitempty"`
	TechnicalDetails *string `json:"technicalDetails,omitempty"`
	Title *string `json:"title,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewAdvisoryCERTEUAdvisory instantiates a new AdvisoryCERTEUAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCERTEUAdvisory() *AdvisoryCERTEUAdvisory {
	this := AdvisoryCERTEUAdvisory{}
	return &this
}

// NewAdvisoryCERTEUAdvisoryWithDefaults instantiates a new AdvisoryCERTEUAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCERTEUAdvisoryWithDefaults() *AdvisoryCERTEUAdvisory {
	this := AdvisoryCERTEUAdvisory{}
	return &this
}

// GetAdvisoryId returns the AdvisoryId field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetAdvisoryId() string {
	if o == nil || IsNil(o.AdvisoryId) {
		var ret string
		return ret
	}
	return *o.AdvisoryId
}

// GetAdvisoryIdOk returns a tuple with the AdvisoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetAdvisoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdvisoryId) {
		return nil, false
	}
	return o.AdvisoryId, true
}

// HasAdvisoryId returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasAdvisoryId() bool {
	if o != nil && !IsNil(o.AdvisoryId) {
		return true
	}

	return false
}

// SetAdvisoryId gets a reference to the given string and assigns it to the AdvisoryId field.
func (o *AdvisoryCERTEUAdvisory) SetAdvisoryId(v string) {
	o.AdvisoryId = &v
}

// GetAffectedProducts returns the AffectedProducts field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetAffectedProducts() string {
	if o == nil || IsNil(o.AffectedProducts) {
		var ret string
		return ret
	}
	return *o.AffectedProducts
}

// GetAffectedProductsOk returns a tuple with the AffectedProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetAffectedProductsOk() (*string, bool) {
	if o == nil || IsNil(o.AffectedProducts) {
		return nil, false
	}
	return o.AffectedProducts, true
}

// HasAffectedProducts returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasAffectedProducts() bool {
	if o != nil && !IsNil(o.AffectedProducts) {
		return true
	}

	return false
}

// SetAffectedProducts gets a reference to the given string and assigns it to the AffectedProducts field.
func (o *AdvisoryCERTEUAdvisory) SetAffectedProducts(v string) {
	o.AffectedProducts = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCERTEUAdvisory) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCERTEUAdvisory) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetHistory() []string {
	if o == nil || IsNil(o.History) {
		var ret []string
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetHistoryOk() ([]string, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given []string and assigns it to the History field.
func (o *AdvisoryCERTEUAdvisory) SetHistory(v []string) {
	o.History = v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *AdvisoryCERTEUAdvisory) SetLink(v string) {
	o.Link = &v
}

// GetRecommendations returns the Recommendations field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetRecommendations() string {
	if o == nil || IsNil(o.Recommendations) {
		var ret string
		return ret
	}
	return *o.Recommendations
}

// GetRecommendationsOk returns a tuple with the Recommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetRecommendationsOk() (*string, bool) {
	if o == nil || IsNil(o.Recommendations) {
		return nil, false
	}
	return o.Recommendations, true
}

// HasRecommendations returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasRecommendations() bool {
	if o != nil && !IsNil(o.Recommendations) {
		return true
	}

	return false
}

// SetRecommendations gets a reference to the given string and assigns it to the Recommendations field.
func (o *AdvisoryCERTEUAdvisory) SetRecommendations(v string) {
	o.Recommendations = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *AdvisoryCERTEUAdvisory) SetReferences(v []string) {
	o.References = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AdvisoryCERTEUAdvisory) SetSummary(v string) {
	o.Summary = &v
}

// GetTechnicalDetails returns the TechnicalDetails field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetTechnicalDetails() string {
	if o == nil || IsNil(o.TechnicalDetails) {
		var ret string
		return ret
	}
	return *o.TechnicalDetails
}

// GetTechnicalDetailsOk returns a tuple with the TechnicalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetTechnicalDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.TechnicalDetails) {
		return nil, false
	}
	return o.TechnicalDetails, true
}

// HasTechnicalDetails returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasTechnicalDetails() bool {
	if o != nil && !IsNil(o.TechnicalDetails) {
		return true
	}

	return false
}

// SetTechnicalDetails gets a reference to the given string and assigns it to the TechnicalDetails field.
func (o *AdvisoryCERTEUAdvisory) SetTechnicalDetails(v string) {
	o.TechnicalDetails = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisoryCERTEUAdvisory) SetTitle(v string) {
	o.Title = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AdvisoryCERTEUAdvisory) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCERTEUAdvisory) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AdvisoryCERTEUAdvisory) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AdvisoryCERTEUAdvisory) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o AdvisoryCERTEUAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCERTEUAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvisoryId) {
		toSerialize["advisoryId"] = o.AdvisoryId
	}
	if !IsNil(o.AffectedProducts) {
		toSerialize["affectedProducts"] = o.AffectedProducts
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Recommendations) {
		toSerialize["recommendations"] = o.Recommendations
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.TechnicalDetails) {
		toSerialize["technicalDetails"] = o.TechnicalDetails
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableAdvisoryCERTEUAdvisory struct {
	value *AdvisoryCERTEUAdvisory
	isSet bool
}

func (v NullableAdvisoryCERTEUAdvisory) Get() *AdvisoryCERTEUAdvisory {
	return v.value
}

func (v *NullableAdvisoryCERTEUAdvisory) Set(val *AdvisoryCERTEUAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCERTEUAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCERTEUAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCERTEUAdvisory(val *AdvisoryCERTEUAdvisory) *NullableAdvisoryCERTEUAdvisory {
	return &NullableAdvisoryCERTEUAdvisory{value: val, isSet: true}
}

func (v NullableAdvisoryCERTEUAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCERTEUAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


