/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisoryCanvasExploit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisoryCanvasExploit{}

// AdvisoryCanvasExploit struct for AdvisoryCanvasExploit
type AdvisoryCanvasExploit struct {
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Description *string `json:"description,omitempty"`
	ExploitPack *string `json:"exploit_pack,omitempty"`
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewAdvisoryCanvasExploit instantiates a new AdvisoryCanvasExploit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisoryCanvasExploit() *AdvisoryCanvasExploit {
	this := AdvisoryCanvasExploit{}
	return &this
}

// NewAdvisoryCanvasExploitWithDefaults instantiates a new AdvisoryCanvasExploit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisoryCanvasExploitWithDefaults() *AdvisoryCanvasExploit {
	this := AdvisoryCanvasExploit{}
	return &this
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisoryCanvasExploit) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCanvasExploit) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisoryCanvasExploit) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisoryCanvasExploit) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisoryCanvasExploit) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCanvasExploit) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisoryCanvasExploit) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisoryCanvasExploit) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvisoryCanvasExploit) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCanvasExploit) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvisoryCanvasExploit) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvisoryCanvasExploit) SetDescription(v string) {
	o.Description = &v
}

// GetExploitPack returns the ExploitPack field value if set, zero value otherwise.
func (o *AdvisoryCanvasExploit) GetExploitPack() string {
	if o == nil || IsNil(o.ExploitPack) {
		var ret string
		return ret
	}
	return *o.ExploitPack
}

// GetExploitPackOk returns a tuple with the ExploitPack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCanvasExploit) GetExploitPackOk() (*string, bool) {
	if o == nil || IsNil(o.ExploitPack) {
		return nil, false
	}
	return o.ExploitPack, true
}

// HasExploitPack returns a boolean if a field has been set.
func (o *AdvisoryCanvasExploit) HasExploitPack() bool {
	if o != nil && !IsNil(o.ExploitPack) {
		return true
	}

	return false
}

// SetExploitPack gets a reference to the given string and assigns it to the ExploitPack field.
func (o *AdvisoryCanvasExploit) SetExploitPack(v string) {
	o.ExploitPack = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvisoryCanvasExploit) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCanvasExploit) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvisoryCanvasExploit) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvisoryCanvasExploit) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisoryCanvasExploit) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisoryCanvasExploit) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisoryCanvasExploit) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisoryCanvasExploit) SetUrl(v string) {
	o.Url = &v
}

func (o AdvisoryCanvasExploit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisoryCanvasExploit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExploitPack) {
		toSerialize["exploit_pack"] = o.ExploitPack
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableAdvisoryCanvasExploit struct {
	value *AdvisoryCanvasExploit
	isSet bool
}

func (v NullableAdvisoryCanvasExploit) Get() *AdvisoryCanvasExploit {
	return v.value
}

func (v *NullableAdvisoryCanvasExploit) Set(val *AdvisoryCanvasExploit) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisoryCanvasExploit) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisoryCanvasExploit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisoryCanvasExploit(val *AdvisoryCanvasExploit) *NullableAdvisoryCanvasExploit {
	return &NullableAdvisoryCanvasExploit{value: val, isSet: true}
}

func (v NullableAdvisoryCanvasExploit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisoryCanvasExploit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


