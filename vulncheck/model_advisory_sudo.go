/*
VulnCheck API

Version 3 of the VulnCheck API

API version: 3.0
Contact: support@vulncheck.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vulncheck

import (
	"encoding/json"
)

// checks if the AdvisorySudo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvisorySudo{}

// AdvisorySudo struct for AdvisorySudo
type AdvisorySudo struct {
	Affected *string `json:"affected,omitempty"`
	Cve []string `json:"cve,omitempty"`
	DateAdded *string `json:"date_added,omitempty"`
	Details *string `json:"details,omitempty"`
	Fix *string `json:"fix,omitempty"`
	Impact *string `json:"impact,omitempty"`
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
	Workaround *string `json:"workaround,omitempty"`
}

// NewAdvisorySudo instantiates a new AdvisorySudo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvisorySudo() *AdvisorySudo {
	this := AdvisorySudo{}
	return &this
}

// NewAdvisorySudoWithDefaults instantiates a new AdvisorySudo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvisorySudoWithDefaults() *AdvisorySudo {
	this := AdvisorySudo{}
	return &this
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *AdvisorySudo) GetAffected() string {
	if o == nil || IsNil(o.Affected) {
		var ret string
		return ret
	}
	return *o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetAffectedOk() (*string, bool) {
	if o == nil || IsNil(o.Affected) {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *AdvisorySudo) HasAffected() bool {
	if o != nil && !IsNil(o.Affected) {
		return true
	}

	return false
}

// SetAffected gets a reference to the given string and assigns it to the Affected field.
func (o *AdvisorySudo) SetAffected(v string) {
	o.Affected = &v
}

// GetCve returns the Cve field value if set, zero value otherwise.
func (o *AdvisorySudo) GetCve() []string {
	if o == nil || IsNil(o.Cve) {
		var ret []string
		return ret
	}
	return o.Cve
}

// GetCveOk returns a tuple with the Cve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetCveOk() ([]string, bool) {
	if o == nil || IsNil(o.Cve) {
		return nil, false
	}
	return o.Cve, true
}

// HasCve returns a boolean if a field has been set.
func (o *AdvisorySudo) HasCve() bool {
	if o != nil && !IsNil(o.Cve) {
		return true
	}

	return false
}

// SetCve gets a reference to the given []string and assigns it to the Cve field.
func (o *AdvisorySudo) SetCve(v []string) {
	o.Cve = v
}

// GetDateAdded returns the DateAdded field value if set, zero value otherwise.
func (o *AdvisorySudo) GetDateAdded() string {
	if o == nil || IsNil(o.DateAdded) {
		var ret string
		return ret
	}
	return *o.DateAdded
}

// GetDateAddedOk returns a tuple with the DateAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetDateAddedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAdded) {
		return nil, false
	}
	return o.DateAdded, true
}

// HasDateAdded returns a boolean if a field has been set.
func (o *AdvisorySudo) HasDateAdded() bool {
	if o != nil && !IsNil(o.DateAdded) {
		return true
	}

	return false
}

// SetDateAdded gets a reference to the given string and assigns it to the DateAdded field.
func (o *AdvisorySudo) SetDateAdded(v string) {
	o.DateAdded = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *AdvisorySudo) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *AdvisorySudo) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *AdvisorySudo) SetDetails(v string) {
	o.Details = &v
}

// GetFix returns the Fix field value if set, zero value otherwise.
func (o *AdvisorySudo) GetFix() string {
	if o == nil || IsNil(o.Fix) {
		var ret string
		return ret
	}
	return *o.Fix
}

// GetFixOk returns a tuple with the Fix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetFixOk() (*string, bool) {
	if o == nil || IsNil(o.Fix) {
		return nil, false
	}
	return o.Fix, true
}

// HasFix returns a boolean if a field has been set.
func (o *AdvisorySudo) HasFix() bool {
	if o != nil && !IsNil(o.Fix) {
		return true
	}

	return false
}

// SetFix gets a reference to the given string and assigns it to the Fix field.
func (o *AdvisorySudo) SetFix(v string) {
	o.Fix = &v
}

// GetImpact returns the Impact field value if set, zero value otherwise.
func (o *AdvisorySudo) GetImpact() string {
	if o == nil || IsNil(o.Impact) {
		var ret string
		return ret
	}
	return *o.Impact
}

// GetImpactOk returns a tuple with the Impact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetImpactOk() (*string, bool) {
	if o == nil || IsNil(o.Impact) {
		return nil, false
	}
	return o.Impact, true
}

// HasImpact returns a boolean if a field has been set.
func (o *AdvisorySudo) HasImpact() bool {
	if o != nil && !IsNil(o.Impact) {
		return true
	}

	return false
}

// SetImpact gets a reference to the given string and assigns it to the Impact field.
func (o *AdvisorySudo) SetImpact(v string) {
	o.Impact = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdvisorySudo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdvisorySudo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdvisorySudo) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AdvisorySudo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AdvisorySudo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AdvisorySudo) SetUrl(v string) {
	o.Url = &v
}

// GetWorkaround returns the Workaround field value if set, zero value otherwise.
func (o *AdvisorySudo) GetWorkaround() string {
	if o == nil || IsNil(o.Workaround) {
		var ret string
		return ret
	}
	return *o.Workaround
}

// GetWorkaroundOk returns a tuple with the Workaround field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvisorySudo) GetWorkaroundOk() (*string, bool) {
	if o == nil || IsNil(o.Workaround) {
		return nil, false
	}
	return o.Workaround, true
}

// HasWorkaround returns a boolean if a field has been set.
func (o *AdvisorySudo) HasWorkaround() bool {
	if o != nil && !IsNil(o.Workaround) {
		return true
	}

	return false
}

// SetWorkaround gets a reference to the given string and assigns it to the Workaround field.
func (o *AdvisorySudo) SetWorkaround(v string) {
	o.Workaround = &v
}

func (o AdvisorySudo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvisorySudo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Affected) {
		toSerialize["affected"] = o.Affected
	}
	if !IsNil(o.Cve) {
		toSerialize["cve"] = o.Cve
	}
	if !IsNil(o.DateAdded) {
		toSerialize["date_added"] = o.DateAdded
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Fix) {
		toSerialize["fix"] = o.Fix
	}
	if !IsNil(o.Impact) {
		toSerialize["impact"] = o.Impact
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Workaround) {
		toSerialize["workaround"] = o.Workaround
	}
	return toSerialize, nil
}

type NullableAdvisorySudo struct {
	value *AdvisorySudo
	isSet bool
}

func (v NullableAdvisorySudo) Get() *AdvisorySudo {
	return v.value
}

func (v *NullableAdvisorySudo) Set(val *AdvisorySudo) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvisorySudo) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvisorySudo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvisorySudo(val *AdvisorySudo) *NullableAdvisorySudo {
	return &NullableAdvisorySudo{value: val, isSet: true}
}

func (v NullableAdvisorySudo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvisorySudo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


